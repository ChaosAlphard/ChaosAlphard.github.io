<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ilirus</title><link>https://chaosalphard.github.io/</link><description>Recent content on Ilirus</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 06 Jun 2021 02:44:16 +0800</lastBuildDate><atom:link href="https://chaosalphard.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Minecraft Mod 开发手册04: 合成表与掉落物</title><link>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/</link><pubDate>Sun, 06 Jun 2021 02:44:16 +0800</pubDate><guid>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/</guid><description>&lt;img src="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/title.png" alt="Featured image of post Minecraft Mod 开发手册04: 合成表与掉落物" />&lt;h1 id="添加合成表">添加合成表&lt;/h1>
&lt;p>在&lt;code>resources/data/&amp;lt;你的Mod注册的命名空间&amp;gt;/recipes&lt;/code> 文件夹下，创建一个&lt;code>json&lt;/code> 文件，名称没有要求，但最好以被添加合成表的物品的名称为前缀。&lt;/p>
&lt;h2 id="添加无序合成表">添加无序合成表&lt;/h2>
&lt;p>以&lt;code>mod_icon&lt;/code> 为例&lt;/p>
&lt;p>&lt;code>mod_icon.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 指定该合成表为无序合成
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:crafting_shapeless&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 指定合成需要的原料, 物品名字格式为 &amp;lt;命名空间&amp;gt;:&amp;lt;物品名称&amp;gt;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;ingredients&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:melon_slice&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:carrot&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:sweet_berries&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:pumpkin_pie&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:honey_bottle&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:milk_bucket&amp;#34;&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="c1">// 指定合成结果
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:mod_icon&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>给&lt;code>mod_icon&lt;/code> 添加第二个合成表&lt;/p>
&lt;p>&lt;code>mod_icon_from_mod_icon_block.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:crafting_shapeless&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;ingredients&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:mod_icon_block&amp;#34;&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="s2">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:mod_icon&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">8&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加有序合成表">添加有序合成表&lt;/h2>
&lt;p>以&lt;code>mod_icon_block&lt;/code> 为例&lt;/p>
&lt;p>&lt;code>mod_icon_block.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 指定该合成表为有序合成
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:crafting_shaped&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 指定合成配方, 其中&amp;#34;I&amp;#34; 可以是&amp;#39;A-Z&amp;#39;或&amp;#39;#&amp;#39;之中的任意一个值
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;pattern&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;III&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;I I&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;III&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="c1">// 解释合成表中的字符代表哪种物品
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;I&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:mod_icon&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:mod_icon_block&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 177; flex-basis: 426px">
&lt;a href="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/recipes.gif" data-size="845x476">&lt;img src="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/recipes.gif"
srcset="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/recipes_hu15aa7d1b1e3de289c0a6f8239aa687cf_90853_480x0_resize_box.gif 480w, https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/recipes_hu15aa7d1b1e3de289c0a6f8239aa687cf_90853_1024x0_resize_box.gif 1024w"
width="845"
height="476"
loading="lazy"
alt="recipes">
&lt;/a>
&lt;figcaption>recipes&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h1 id="添加掉落物">添加掉落物&lt;/h1>
&lt;p>在&lt;code>resources/data/&amp;lt;你的Mod注册的命名空间&amp;gt;/loot_tables/blocks&lt;/code> 文件夹下，创建一个与被添加掉落表的物品的名称相同的&lt;code>json&lt;/code> 文件。&lt;/p>
&lt;p>如果是实体，则应放在&lt;code>loot_tables/entities&lt;/code>文件夹下&lt;/p>
&lt;p>&lt;code>mod_icon_block.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 指定类型为方块
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:block&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 指定掉落物随机池
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;pools&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 指定随机次数
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;rolls&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 指定掉落实体
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;entries&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 掉落物类型
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:item&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 掉落物名称
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:mod_icon&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 决定掉落物掉落的函数
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;functions&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="s2">&amp;#34;function&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:set_count&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;min&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;max&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:uniform&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="c1">// 额外的掉落条件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;conditions&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;condition&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;minecraft:survives_explosion&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 177; flex-basis: 426px">
&lt;a href="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/loot.gif" data-size="845x476">&lt;img src="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/loot.gif"
srcset="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/loot_hu735feb90d474b1721375914eb704455b_2695977_480x0_resize_box.gif 480w, https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C04-%E5%90%88%E6%88%90%E8%A1%A8%E4%B8%8E%E6%8E%89%E8%90%BD%E7%89%A9/loot_hu735feb90d474b1721375914eb704455b_2695977_1024x0_resize_box.gif 1024w"
width="845"
height="476"
loading="lazy"
alt="loot">
&lt;/a>
&lt;figcaption>loot&lt;/figcaption>
&lt;/figure>&lt;/p></description></item><item><title>Minecraft Mod 开发手册03: 第一个方块</title><link>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C03-%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%96%B9%E5%9D%97/</link><pubDate>Sat, 05 Jun 2021 22:42:08 +0800</pubDate><guid>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C03-%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%96%B9%E5%9D%97/</guid><description>&lt;img src="https://chaosalphard.github.io/title.png" alt="Featured image of post Minecraft Mod 开发手册03: 第一个方块" />&lt;h1 id="新建方块">新建方块&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">class&lt;/span> &lt;span class="nc">ModIconBlock&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Block&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">settings&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">companion&lt;/span> &lt;span class="k">object&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 使用木板的方块预设
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">settings&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Settings&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Settings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Material&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WOOD&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 方块硬度
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">strength&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">2.0F&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 方块声音
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">sounds&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">BlockSoundGroup&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WOOD&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 方块实例
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">INSTANCE&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">ModIconBlock&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// 方块的物品形式实例
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">ITEM_INSTANCE&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">BlockItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">instance&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Settings&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">rarity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rarity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">RARE&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ModItemGroup&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ITEM&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">val&lt;/span> &lt;span class="py">identifier&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Identifier&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;irs_widget_pack&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;mod_icon_block&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="注册方块">注册方块&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="nd">@Suppress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;unused&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 创建方块标识，方块注册完成后还需要注册物品形式的物品标识
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Registry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Registry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">BLOCK&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ModIconBlock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">identifier&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ModIconBlock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">INSTANCE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">Registry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Registry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ITEM&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ModIconBlock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">identifier&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ModIconBlock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ITEM_INSTANCE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="给方块添加材质">给方块添加材质&lt;/h1>
&lt;h3 id="添加材质文件">添加材质文件&lt;/h3>
&lt;p>在&lt;code>resources/assets/&amp;lt;你的Mod注册的命名空间&amp;gt;/textures/block&lt;/code> 文件夹下，创建一个与你添加物品同名的&lt;code>png&lt;/code> 文件。&lt;/p>
&lt;h3 id="配置方块状态">配置方块状态&lt;/h3>
&lt;p>在&lt;code>resources/assets/&amp;lt;你的Mod注册的命名空间&amp;gt;/blockstates&lt;/code> 文件夹下，创建一个与你添加物品同名的&lt;code>json&lt;/code> 文件。&lt;/p>
&lt;p>方块状态文件根据其方块状态确定该方块应使用的模型。由于现在方块还没有所谓状态，所以用空字符串表示所有&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;variants&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;model&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:block/mod_icon_block&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置方块模型">配置方块模型&lt;/h3>
&lt;p>在&lt;code>resources/assets/&amp;lt;你的Mod注册的命名空间&amp;gt;/models/block&lt;/code> 文件夹下，创建一个与你添加物品同名的&lt;code>json&lt;/code> 文件。&lt;/p>
&lt;p>方块模型文件定义了方块的形状和材质。使用block/cube_all作为父模型，这将在方块的所有面上设置相同的材质。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;parent&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;block/cube_all&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;textures&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;all&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:block/mod_icon_block&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置方块物品模型">配置方块物品模型&lt;/h3>
&lt;p>在&lt;code>resources/assets/&amp;lt;你的Mod注册的命名空间&amp;gt;/models/item&lt;/code> 文件夹下，创建一个与你添加物品同名的&lt;code>json&lt;/code> 文件。&lt;/p>
&lt;p>在大多数情况下，方块作为物品时外观还是这个方块。所以，直接继承方块模型即可&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;parent&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:block/mod_icon_block&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后，进入游戏即可看到效果
&lt;img src="https://chaosalphard.github.io/00.png" alt="结果" />&lt;/p></description></item><item><title>Minecraft Mod 开发手册02: 新建物品栏分组</title><link>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C02-%E6%96%B0%E5%BB%BA%E7%89%A9%E5%93%81%E6%A0%8F%E5%88%86%E7%BB%84/</link><pubDate>Sun, 23 May 2021 23:01:27 +0800</pubDate><guid>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C02-%E6%96%B0%E5%BB%BA%E7%89%A9%E5%93%81%E6%A0%8F%E5%88%86%E7%BB%84/</guid><description>&lt;img src="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C02-%E6%96%B0%E5%BB%BA%E7%89%A9%E5%93%81%E6%A0%8F%E5%88%86%E7%BB%84/title.png" alt="Featured image of post Minecraft Mod 开发手册02: 新建物品栏分组" />&lt;h1 id="注册物品栏分组">注册物品栏分组&lt;/h1>
&lt;p>新建一个类，用于存放自定义的物品栏分组的实例&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">class&lt;/span> &lt;span class="nc">ModItemGroup&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">companion&lt;/span> &lt;span class="k">object&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nd">@JvmStatic&lt;/span>
&lt;span class="k">val&lt;/span> &lt;span class="py">ITEM&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ItemGroup&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">FabricItemGroupBuilder&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Identifier&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;irs_widget_pack&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="n">ItemStack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ModIcon&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">instance&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>FabricItemGroupBuilder.build&lt;/code>方法接收两个参数，第一个是物品栏分组的名称，第二个是显示的图标&lt;/p>
&lt;h1 id="将物品放入自定义物品栏中">将物品放入自定义物品栏中&lt;/h1>
&lt;p>修改之前定义好的物品&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="nd">@JvmStatic&lt;/span>
&lt;span class="k">val&lt;/span> &lt;span class="py">settings&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Settings&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Settings&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">// 物品分组修改为我们自定义的分组
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ModItemGroup&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ITEM&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="添加翻译">添加翻译&lt;/h1>
&lt;p>修改之前的语言文件，按照对应的格式，为新增的物品分组添加翻译&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;itemGroup.irs_widget_pack.item&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;物品&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>进入游戏，即可看到效果
&lt;figure style="flex-grow: 177; flex-basis: 427px">
&lt;a href="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C02-%E6%96%B0%E5%BB%BA%E7%89%A9%E5%93%81%E6%A0%8F%E5%88%86%E7%BB%84/title.png" data-size="854x480">&lt;img src="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C02-%E6%96%B0%E5%BB%BA%E7%89%A9%E5%93%81%E6%A0%8F%E5%88%86%E7%BB%84/title.png"
srcset="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C02-%E6%96%B0%E5%BB%BA%E7%89%A9%E5%93%81%E6%A0%8F%E5%88%86%E7%BB%84/title_hub22ad0e3342eb94d5fd76f0e2eecacc6_94512_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C02-%E6%96%B0%E5%BB%BA%E7%89%A9%E5%93%81%E6%A0%8F%E5%88%86%E7%BB%84/title_hub22ad0e3342eb94d5fd76f0e2eecacc6_94512_1024x0_resize_box_2.png 1024w"
width="854"
height="480"
loading="lazy"
alt="成果">
&lt;/a>
&lt;figcaption>成果&lt;/figcaption>
&lt;/figure>&lt;/p></description></item><item><title>使用Hugo搭建个人博客</title><link>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link><pubDate>Sat, 22 May 2021 19:38:27 +0800</pubDate><guid>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid><description>&lt;img src="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/title.jpg" alt="Featured image of post 使用Hugo搭建个人博客" />&lt;p>近期我部署在Gitee上的博客已经不能用了, 虽然还能上传, 但是已经不会把上传的文章更新出来了, 故迁移到Github上, 顺便Hexo文章生成速度不太理想, 趁着这次部署站点迁移一并切换到Hugo.&lt;/p>
&lt;h1 id="搭建hugo写作环境">搭建Hugo写作环境&lt;/h1>
&lt;h2 id="hugo下载">Hugo下载&lt;/h2>
&lt;p>首先从&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>Hugo&lt;/a>官网下载适合自己电脑环境的Hugo版本。&lt;/p>
&lt;p>下载地址：&lt;a class="link" href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener"
>https://github.com/gohugoio/hugo/releases&lt;/a>&lt;/p>
&lt;p>将解压出来的&lt;code>Hugo.exe&lt;/code> 添加到环境变量中。&lt;/p>
&lt;h2 id="创建github-pages-仓库">创建Github Pages 仓库&lt;/h2>
&lt;p>进入&lt;a class="link" href="https://github.com/new" target="_blank" rel="noopener"
>Github&lt;/a>网站，点击New Repositories 按钮，新建一个仓库，名称我这里选blog，访问类型选择Public
&lt;figure style="flex-grow: 106; flex-basis: 255px">
&lt;a href="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.jpg" data-size="810x762">&lt;img src="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.jpg"
srcset="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93_hu3d7f1756588aec6ee74a4285f74aa421_98090_480x0_resize_q75_box.jpg 480w, https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93_hu3d7f1756588aec6ee74a4285f74aa421_98090_1024x0_resize_q75_box.jpg 1024w"
width="810"
height="762"
loading="lazy"
alt="创建仓库">
&lt;/a>
&lt;figcaption>创建仓库&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>创建完成后点击Settings选项，选择Pages，Branch选择master，目录选择/docs，之后点击save按钮，即可看到上方蓝色提示：Your site is ready to be published at &lt;code>https://chaosalphard.github.io/blog&lt;/code>，这个地址便是Github给你分配的博客地址，如果你有自己的域名的话可以在这里绑定。
&lt;figure style="flex-grow: 189; flex-basis: 454px">
&lt;a href="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E9%83%A8%E7%BD%B2%E7%BD%91%E9%A1%B5.jpg" data-size="1274x673">&lt;img src="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E9%83%A8%E7%BD%B2%E7%BD%91%E9%A1%B5.jpg"
srcset="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E9%83%A8%E7%BD%B2%E7%BD%91%E9%A1%B5_hu00c8a5dd95ac4ec234ed6649ed56afbd_127947_480x0_resize_q75_box.jpg 480w, https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E9%83%A8%E7%BD%B2%E7%BD%91%E9%A1%B5_hu00c8a5dd95ac4ec234ed6649ed56afbd_127947_1024x0_resize_q75_box.jpg 1024w"
width="1274"
height="673"
loading="lazy"
alt="部署网页">
&lt;/a>
&lt;figcaption>部署网页&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="初始化hugo站点">初始化Hugo站点&lt;/h2>
&lt;p>将刚才创建的Git 仓库Clone 到本地，打开命令行，切换到刚才Clone 下来的仓库的文件夹里面，此时文件夹里面应该除了一个名为.git的隐藏文件夹之外没有其他文件了，执行&lt;code>hugo new site . --force&lt;/code> 来初始化hugo站点。&lt;/p>
&lt;p>之后选择一款自己喜欢的主题，地址：&lt;a class="link" href="https://themes.gohugo.io" target="_blank" rel="noopener"
>https://themes.gohugo.io&lt;/a>，下载或者Clone 到本地，将文件夹放到hugo站点的根目录下。&lt;/p>
&lt;p>编辑&lt;code>config.toml&lt;/code>/&lt;code>config.yaml&lt;/code>/&lt;code>config.json&lt;/code> 配置文件，修改&lt;code>baseurl&lt;/code> 为Github 分配的博客地址，修改&lt;code>theme&lt;/code> 为你的主题文件夹名称。&lt;/p>
&lt;h2 id="创建文章">创建文章&lt;/h2>
&lt;p>切换到hugo站点目录，执行&lt;code>hugo new post/article.md&lt;/code> 来新建一篇名为article 的文章，文件位于&lt;code>/content/post&lt;/code> 目录下，打开文件进行编辑，因为我之前用Hexo的时候已经有一些文章了，所以我直接复制过来，Hexo和Hugo都支持markdown语法编写的文章，所以可以直接切换。&lt;/p>
&lt;h1 id="部署到githubpages">部署到GitHubPages&lt;/h1>
&lt;h2 id="本地调试">本地调试&lt;/h2>
&lt;p>切换到hugo站点目录，执行&lt;code>hugo server -D&lt;/code>，此时会输出以下信息&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">~/Hugo/blog&amp;gt; hugo server -D
Start building sites …
| ZH-CN
-------------------+--------
Pages | 182
Paginator pages | 20
Non-page files | 4
Static files | 0
Processed images | 13
Aliases | 61
Sitemaps | 1
Cleaned | 0
Built in 3795 ms
Watching for changes in ~/Hugo/blog/{archetypes,assets,content,data,layouts,static,themes}
Watching for config changes in ~/Hugo/blog/config.yaml
Environment: &amp;#34;development&amp;#34;
Serving pages from memory
Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
Web Server is available at http://localhost:1313/blog/ (bind address 127.0.0.1)
Press Ctrl+C to stop
&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据提示打开网址 (我这里是http://localhost:1313/blog/) 即可看到文章，确认无误后即可部署到GithubPages上。&lt;/p>
&lt;h2 id="生成文件并部署到githubpages上">生成文件并部署到GithubPages上&lt;/h2>
&lt;p>切换到hugo站点目录下，执行&lt;code>hugo -d docs&lt;/code>，即可在&lt;code>/docs&lt;/code> 目录下生成部署文件，之后将所有改动从本地提交到远程Git仓库上 (或者仅提交/docs目录下文件也可以)。&lt;/p>
&lt;h1 id="配置githubaction完成云端构建">配置GithubAction完成云端构建&lt;/h1>
&lt;h2 id="创建action配置文件">创建Action配置文件&lt;/h2>
&lt;p>在hugo站点目录下新建&lt;code>.github/workflows&lt;/code> 目录，在此目录下新建&lt;code>gh-pages.yaml&lt;/code> 文件并写入以下内容。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># Action名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy Github Pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 在master分支被push时触发&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 设置执行环境&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">github-pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 步骤&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 检出&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Checkout Repo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 初始化Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0.83.1&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 生成部署文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --gc --minify --cleanDestinationDir&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 部署到GithubPages&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># ACTIONS_DEPLOY_KEY需要在仓库里进行配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy_key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">force_orphan&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 设置使用gh-pages分支来存放部署文件, 一般master分支存放原始文件, gh-pages分支存放部署文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">gh-pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># hugo生成的部署文件默认放在public目录中, 这里是指定推送public目录中的文件到gh-pages分支中&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 排除文件不推送到gh-pages分支中&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">exclude_assets&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;.github&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">user_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;github-actions[bot]&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">user_email&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;github-actions[bot]@chaosalphard.noreply.github.com&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">commit_message&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.event.head_commit.message }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其他更多设置请查看&lt;a class="link" href="https://github.com/peaceiris/actions-hugo" target="_blank" rel="noopener"
>actions-hugo&lt;/a>和&lt;a class="link" href="https://github.com/peaceiris/actions-gh-pages" target="_blank" rel="noopener"
>actions-gh-pages&lt;/a>插件说明&lt;/p>
&lt;h2 id="生成部署密钥">生成部署密钥&lt;/h2>
&lt;p>执行&lt;code>ssh-keygen -t rsa -b 4096 -C &amp;quot;$(git config user.email)&amp;quot; -f gh-pages -N &amp;quot;&amp;quot;&lt;/code> 指令生成一对公钥(&lt;code>gh-pages.pub&lt;/code>)和私钥(&lt;code>gh-pages&lt;/code>)&lt;/p>
&lt;p>进入Github Pages仓库，点击Settings 选项，选择&lt;code>Deploy keys&lt;/code>，新建一个Deploy key，将刚才生成的公钥文件的内容复制进来，勾选&lt;code>Allow write access&lt;/code> 选项，然后保存。&lt;/p>
&lt;p>点击Environments 选项，新建一个Environments 名称填&lt;code>github-pages&lt;/code> (需要与&lt;code>gh-pages.yaml&lt;/code> 文件中设置的environment name 一致)，之后在github-pages 下新建一个secret，名称填&lt;code>ACTIONS_DEPLOY_KEY&lt;/code> (需要与&lt;code>gh-pages.yaml&lt;/code> 文件中设置的deploy_key 对应)，将刚才生成的私钥文件的内容复制过来，然后保存。&lt;/p>
&lt;h2 id="测试action部署">测试Action部署&lt;/h2>
&lt;p>回到Hugo站点目录，将/docs目录删除，因为我们现在不需要在本地生成部署文件了，之后提交到Github Pages仓库，然后去Github Pages仓库的Action 选项，查看任务是否执行成功。
&lt;figure style="flex-grow: 224; flex-basis: 538px">
&lt;a href="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Action.jpg" data-size="1190x530">&lt;img src="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Action.jpg"
srcset="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Action_hu71548d013d7f86af3e78e66b79c01f3e_60413_480x0_resize_q75_box.jpg 480w, https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Action_hu71548d013d7f86af3e78e66b79c01f3e_60413_1024x0_resize_q75_box.jpg 1024w"
width="1190"
height="530"
loading="lazy"
alt="Action">
&lt;/a>
&lt;figcaption>Action&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>如果没有成功，回到Settings 选项下的Pages 页面，将Branch 更改为&lt;code>gh-pages&lt;/code>，目录选择&lt;code>/&lt;/code>，保存，然后回到Action 页面，点击Re-run jobs，稍等一会即可看到结果。&lt;/p></description></item><item><title>Minecraft Mod 开发手册01: 第一个物品</title><link>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/</link><pubDate>Fri, 21 May 2021 21:13:06 +0000</pubDate><guid>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/</guid><description>&lt;img src="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/01.png" alt="Featured image of post Minecraft Mod 开发手册01: 第一个物品" />&lt;h1 id="向minecraft中添加物品">向Minecraft中添加物品&lt;/h1>
&lt;h2 id="定位入口">定位入口&lt;/h2>
&lt;p>找到&lt;code>fabric.mod.json&lt;/code> 文件中&lt;code>entrypoints.main&lt;/code> 键所对应的类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;entrypoints&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;com.ilirus.widget.pack.WidgetPackKt::init&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>我这里的值是&lt;code>com.ilirus.widget.pack.WidgetPackKt::init&lt;/code>，说明&lt;code>com.ilirus.widget.pack&lt;/code> 包下&lt;code>WidgetPack.kt&lt;/code> 类中的&lt;code>init&lt;/code> 方法是Mod的入口&lt;/p>
&lt;p>&lt;code>WidgetPack.kt&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="nd">@Suppress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;unused&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello Minecraft!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到&lt;code>init&lt;/code> 方法里面什么都没有，不过这个类之后会用到，所以先记下来&lt;/p>
&lt;!-- more -->
&lt;h2 id="新建物品">新建物品&lt;/h2>
&lt;p>新建一个&lt;code>class&lt;/code>，继承&lt;code>net.minecraft.item.Item&lt;/code> 类，&lt;code>Item&lt;/code>类的构造器接收一个参数类型为&lt;code>Settings&lt;/code> 类的参数，这个&lt;code>Settings&lt;/code> 类是&lt;code>Item&lt;/code> 的内部类。&lt;/p>
&lt;p>&lt;code>Settings&lt;/code> 类可以对&lt;code>Item&lt;/code> 的属性进行配置。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">class&lt;/span> &lt;span class="nc">ModIcon&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">settings&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Settings&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">settings&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">companion&lt;/span> &lt;span class="k">object&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">val&lt;/span> &lt;span class="py">settings&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Settings&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Settings&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">// 物品分组, 配置物品出现在创造模式物品栏的哪一个选项卡中
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ItemGroup&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">MISC&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 此物品作为合成材料参与合成后返回的物品,
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 比如牛奶桶参与合成后会返回铁桶
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// .recipeRemainder(Items.HONEYCOMB)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 稀有度 (物品名的颜色)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">rarity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rarity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">UNCOMMON&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 食物属性, 设置后该物品即可食用, 属性依照传入的参数
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// .food(FoodComponent)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 设置物品防火，扔到火焰和岩浆里不会被烧掉(仙人掌依然能破环该物品)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">fireproof&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1">// 设置最大堆叠数量，默认64
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">maxCount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">64&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 设置物品耐久度，默认0，不为0时则该物品不可堆叠
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 调用该方法会将最大堆叠数设为1
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">maxDamage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 保存实例
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@JvmStatic&lt;/span>
&lt;span class="k">val&lt;/span> &lt;span class="py">INSTANCE&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">ModIcon&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">settings&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 添加工具提示
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">appendTooltip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ItemStack&lt;/span>&lt;span class="p">?,&lt;/span> &lt;span class="n">world&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">World&lt;/span>&lt;span class="p">?,&lt;/span> &lt;span class="n">tooltip&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">MutableList&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">&amp;gt;?,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TooltipContext&lt;/span>&lt;span class="p">?)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 参数格式一般为&amp;#34;物品类型.命名空间.物品名称.tooltip+序号&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">tooltip&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TranslatableText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;item.irs_widget_pack.mod_icon.tooltip_1&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">tooltip&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TranslatableText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;item.irs_widget_pack.mod_icon.tooltip_2&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注册物品">注册物品&lt;/h2>
&lt;p>配置完成物品后，还需要进行物品的注册。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="nd">@Suppress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;unused&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 创建物品标识，第一个参数为物品的注册的命名空间，原版物品的命名空间为&amp;#34;minecraft&amp;#34;，
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 第二个参数为物品的注册名称
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">identifier&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Identifier&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Identifier&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;irs_widget_pack&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;mod_icon&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 注册物品，第一个参数为物品类型，第二个参数为物品标识，第三个参数为物品类实例
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Registry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Registry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ITEM&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">identifier&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ModIcon&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">INSTANCE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后运行runClient 启动Minecraft，在创造模式的杂项选项卡中，即可看到我们添加的物品
&lt;figure style="flex-grow: 177; flex-basis: 427px">
&lt;a href="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/00.png" data-size="854x480">&lt;img src="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/00.png"
srcset="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/00_hua65511f7a53c603585c2a87ee689a651_116699_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/00_hua65511f7a53c603585c2a87ee689a651_116699_1024x0_resize_box_2.png 1024w"
width="854"
height="480"
loading="lazy"
alt="00">
&lt;/a>
&lt;figcaption>00&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>可以看到，虽然物品添加成功了，但是没有材质和名称，接下来我们就为其添加名称和材质。&lt;/p>
&lt;h2 id="添加材质">添加材质&lt;/h2>
&lt;p>在&lt;code>resources/assets/&amp;lt;你的Mod注册的命名空间&amp;gt;/textures/item&lt;/code> 文件夹下，创建一个与你添加物品同名的&lt;code>png&lt;/code> 文件。&lt;/p>
&lt;p>已我添加的物品为例，我在Identifier中注册的命名空间是irs_widget_pack ，物品名称是mod_icon 所以我需要在&lt;code>resources/assets/irs_widget_pack/textures/item&lt;/code> 文件夹下新建&lt;code>mod_icon.png&lt;/code> 文件，这个png文件就是物品的材质了。&lt;/p>
&lt;p>但是还没完，我们仅仅是新建了材质文件，接下了还要告诉Minecraft如何渲染材质。&lt;/p>
&lt;p>在&lt;code>resources/assets/&amp;lt;你的Mod注册的命名空间&amp;gt;/models/item&lt;/code> 文件夹下，创建一个与你添加物品同名的&lt;code>json&lt;/code> 文件。&lt;/p>
&lt;p>同样以我添加的物品为例，路径为&lt;code>resources/assets/irs_widget_pack/models/item&lt;/code>，文件名为&lt;code>mod_icon.json&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 标明类型为物品
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;parent&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;item/generated&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;textures&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 标明材质文件为irs_widget_pack命名空间中, item种类里, 名称为mod_icon的文件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;layer0&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;irs_widget_pack:item/mod_icon&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加名称">添加名称&lt;/h2>
&lt;p>之前提到我们添加的物品没有名称，其实并不是，物品名称在我们用&lt;code>Registry.register()&lt;/code> 方法注册物品时就已经有了，其格式为&amp;quot;物品类型.命名空间.物品名称&amp;quot;，我们现在要做的就是添加翻译文件，将游戏内部使用的物品名称翻译为用户所需要的名称。&lt;/p>
&lt;p>在&lt;code>resources/assets/irs_widget_pack/lang&lt;/code> 文件夹下新增对应语言的翻译文件，Minecraft会根据你在游戏中设置的语言选项，自动寻找对应的语言文件，如果使用简体中文，则新建&lt;code>zh_cn.json&lt;/code> 文件。&lt;/p>
&lt;p>Minecraft在找不到对应语言的翻译文件时，会默认使用&lt;code>en_us.json&lt;/code> 文件，所以你除了新建&lt;code>zh_cn.json&lt;/code> 文件以外，还要新建&lt;code>en_us.json&lt;/code> 文件。&lt;/p>
&lt;p>或者你可以选择不新建&lt;code>zh_cn.json&lt;/code> 文件，直接创建使用&lt;code>en_us.json&lt;/code> 文件。&lt;/p>
&lt;p>在你创建的文件中写入以下内容&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 物品名称
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;item.irs_widget_pack.mod_icon&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;模组icon&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 物品的工具提示
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;item.irs_widget_pack.mod_icon.tooltip_1&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;模组的图标&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;item.irs_widget_pack.mod_icon.tooltip_2&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;并没有什么用&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>再重新启动游戏，可以看到效果
&lt;figure style="flex-grow: 177; flex-basis: 427px">
&lt;a href="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/01.png" data-size="854x480">&lt;img src="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/01.png"
srcset="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/01_hu87864515f4c180aaf629b563b495a45a_113368_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C01-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81/01_hu87864515f4c180aaf629b563b495a45a_113368_1024x0_resize_box_2.png 1024w"
width="854"
height="480"
loading="lazy"
alt="01">
&lt;/a>
&lt;figcaption>01&lt;/figcaption>
&lt;/figure>&lt;/p></description></item><item><title>Minecraft Mod 开发手册00: 开发环境搭建</title><link>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C00-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link><pubDate>Thu, 20 May 2021 00:02:00 +0000</pubDate><guid>https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C00-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid><description>&lt;img src="https://chaosalphard.github.io/p/minecraft-mod-%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C00-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/title.jpg" alt="Featured image of post Minecraft Mod 开发手册00: 开发环境搭建" />&lt;h1 id="fabric开发环境搭建">Fabric开发环境搭建&lt;/h1>
&lt;p>Minecraft目前有&lt;a class="link" href="https://forums.minecraftforge.net/" target="_blank" rel="noopener"
>&lt;code>Forge&lt;/code>&lt;/a>和&lt;a class="link" href="https://fabricmc.net/" target="_blank" rel="noopener"
>&lt;code>Fabric&lt;/code>&lt;/a>两大Mod平台，这里我选择使用较新的&lt;code>Fabric&lt;/code>平台。&lt;/p>
&lt;h2 id="开发工具">开发工具&lt;/h2>
&lt;ul>
&lt;li>jdk8以上&lt;/li>
&lt;li>任意IDE&lt;/li>
&lt;/ul>
&lt;h2 id="创建项目">创建项目&lt;/h2>
&lt;ul>
&lt;li>下载&lt;code>Fabric&lt;/code>官方的&lt;a class="link" href="https://github.com/FabricMC/fabric-example-mod/" target="_blank" rel="noopener"
>项目初始模板&lt;/a>，&lt;code>Kotlin&lt;/code>开发人员可以下载&lt;a class="link" href="https://github.com/natanfudge/fabric-example-mod-kotlin" target="_blank" rel="noopener"
>Kotlin版&lt;/a>&lt;/li>
&lt;li>修改&lt;code>gradle.properties&lt;/code> 文件
&lt;ul>
&lt;li>修改&lt;code>maven_group&lt;/code> 为你的组织名(类似于Maven中的GroupId)&lt;/li>
&lt;li>修改&lt;code>archives_base_name&lt;/code> 为你的模组名(类似于Maven中的ArtifactId)&lt;/li>
&lt;li>修改&lt;code>minecraft_version&lt;/code> 为你的模组的目标版本(你要为哪个Minecraft版本开发Mod)&lt;/li>
&lt;li>修改&lt;code>yarn_mappings&lt;/code>、&lt;code>loader_version&lt;/code> 与&lt;code>fabric_version&lt;/code> 为&lt;code>minecraft_version&lt;/code> 对应的版本，版本对应关系可在&lt;a class="link" href="https://fabricmc.net/versions.html" target="_blank" rel="noopener"
>这里&lt;/a>查看&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>修改&lt;code>src&lt;/code>目录下的目录名称，对应到你的&lt;code>maven_group&lt;/code>与&lt;code>archives_base_name&lt;/code>&lt;/li>
&lt;li>修改&lt;code>src/resources/fabric.mod.json&lt;/code>
&lt;ul>
&lt;li>&lt;code>id&lt;/code> 为你的模组的命名空间&lt;/li>
&lt;li>&lt;code>entrypoints.main&lt;/code> 为你的模组的入口(main方法所在类)&lt;/li>
&lt;li>&lt;code>mixins&lt;/code> 为&lt;code>mixins.json&lt;/code> 所在位置&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>修改&lt;code>&amp;lt;modid&amp;gt;.mixins.json&lt;/code>(modid为你的模组的命名空间, fabric.mod.json中id对应的值)
&lt;ul>
&lt;li>&lt;code>package&lt;/code> 为mixin所在的包名&lt;/li>
&lt;li>&lt;code>client&lt;/code> 为mixin的类名&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>最后，将修改好的项目导入到你的IDE中&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;h2 id="修改gradle构建编译器可选">修改Gradle构建编译器(可选)&lt;/h2>
&lt;p>如果你使用的是&lt;code>IntelliJ IDEA&lt;/code>, 它默认使用Gradle来构建你的项目，而这在Fabric中是不必要的，通过以下步骤来使你的&lt;code>IntelliJ IDEA&lt;/code>使用自己的编译器&lt;/p>
&lt;ul>
&lt;li>在Build Tools -&amp;gt; Gradle 设置项中，修改&lt;code>Build and run using&lt;/code> 以及&lt;code>Run tests using&lt;/code> 选项为&lt;code>IntelliJ IDEA&lt;/code>&lt;/li>
&lt;li>在Project Structure -&amp;gt; Project 设置项中，修改&lt;code>Project compiler output&lt;/code> 为&lt;code>$PROJECT_DIR$/out&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="启动minecraft">启动Minecraft&lt;/h2>
&lt;p>在Gradle任务中执行runClient 即可启动Minecraft客户端&lt;/p>
&lt;h2 id="fabric官方wiki">Fabric官方Wiki&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a href="https://fabricmc.net/wiki/tutorial:introduction">https://fabricmc.net/wiki/tutorial:introduction&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>使用ControllerAdvice统一封装Controller返回数据</title><link>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/</link><pubDate>Sun, 10 Jan 2021 08:02:12 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/</guid><description>&lt;img src="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/title.jpg" alt="Featured image of post 使用ControllerAdvice统一封装Controller返回数据" />&lt;p>在给前端提供Api接口时，通常会约定好一个统一返回格式，这样方便前端处理返回结果&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestController&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/index&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">IndexController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">R&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Data&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">index&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">R&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofSuccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Data&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>但每次都要用统一返回类手动封装一次再返回还是比较麻烦的，可以使用&lt;code>@ControllerAdvice&lt;/code> 注解来进行统一封装，避免每次手动封装&lt;/p>
&lt;p>&lt;strong>定义ControllerAdvice&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">// 这里的annotations = ApiResult.class 代表只有在类上有@ApiResult 注解的Controller 才会被处理
&lt;/span>&lt;span class="c1">// 如果不写则默认对所有Controller 进行处理
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@RestControllerAdvice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">annotations&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ApiResult&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ResponseAdvice&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">ResponseBodyAdvice&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">supports&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MethodParameter&lt;/span> &lt;span class="n">returnType&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">HttpMessageConverter&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">converterType&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 判断返回类型是否已经是定义好的统一返回类型, 以及@ApiResult 注解是否启用
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 返回true 则表示进入下一步处理, 返回false 则表示不做处理, 原样返回
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">returnType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getParameterType&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">isAssignableFrom&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">R&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&amp;amp;&amp;amp;&lt;/span>
&lt;span class="o">!&lt;/span>&lt;span class="n">returnType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hasMethodAnnotation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ApiResult&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Disable&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="nf">beforeBodyWrite&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Object&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">MethodParameter&lt;/span> &lt;span class="n">returnType&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">MediaType&lt;/span> &lt;span class="n">selectedContentType&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">HttpMessageConverter&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">selectedConverterType&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ServerHttpRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ServerHttpResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">R&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofSuccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;p>&lt;strong>定义注解&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TYPE&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Retention&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RetentionPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RUNTIME&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Documented&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nd">@interface&lt;/span> &lt;span class="n">ApiResult&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">METHOD&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Retention&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RetentionPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RUNTIME&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Documented&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nd">@interface&lt;/span> &lt;span class="n">Disable&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>使用&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestController&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/index&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ApiResult&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">IndexController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Data&lt;/span> &lt;span class="nf">index&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Data&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/string&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 不做处理直接返回
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@ApiResult.Disable&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">returnStr&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>顺嘴提一句, 使用组合注解也是可以的&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TYPE&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Retention&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RetentionPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RUNTIME&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Documented&lt;/span>
&lt;span class="nd">@ApiResult&lt;/span>
&lt;span class="nd">@WithExceptionHandler&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nd">@interface&lt;/span> &lt;span class="n">ApiResultWithExceptionHandler&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestController&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/index&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ApiResultWithExceptionHandler&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">IndexController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Data&lt;/span> &lt;span class="nf">index&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Data&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 158; flex-basis: 380px">
&lt;a href="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/01.png" data-size="511x322">&lt;img src="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/01.png"
srcset="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/01_hu648f82a658370b0d0716e243c639a21a_62190_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/01_hu648f82a658370b0d0716e243c639a21a_62190_1024x0_resize_box_2.png 1024w"
width="511"
height="322"
loading="lazy"
alt="01">
&lt;/a>
&lt;figcaption>01&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>等会，还没完，转换其他类型的时候都是正常的，但是如果遇到String类型，就会报错 &lt;code>R cannot be cast to class String&lt;/code>&lt;/p>
&lt;p>这是因为在&lt;code>Controller&lt;/code> 返回&lt;code>String&lt;/code> 类型时，&lt;code>Spring&lt;/code> 会优先使用&lt;code>StringHttpMessageConverter&lt;/code>来进行转换处理，而我们又在统一处理器里面把类型更换为了自定义的统一返回类，所以会导致转换出错&lt;/p>
&lt;p>解决的办法有三种&lt;/p>
&lt;p>第一种: 在处理器中做判断, 为&lt;code>String&lt;/code> 的时候手动格式化为统一返回类对应的&lt;code>Json&lt;/code>格式字符串&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="nf">beforeBodyWrite&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Object&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">MethodParameter&lt;/span> &lt;span class="n">returnType&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">MediaType&lt;/span> &lt;span class="n">selectedContentType&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">HttpMessageConverter&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">selectedConverterType&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ServerHttpRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ServerHttpResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 判断Controller的返回类型是否是String 类型, 如果是, 则转换为Json格式的String再返回
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">returnType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getParameterType&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">isAssignableFrom&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">R&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofSuccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">toJsonString&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">R&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofSuccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二、三种: 更改&lt;code>Spring&lt;/code> 的&lt;code>HttpMessageConverter&lt;/code> 配置，使其用对应的&lt;code>HttpMessageConverter&lt;/code> 来进行转换&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">WebConfiguration&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">WebMvcConfigurer&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configureMessageConverters&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">HttpMessageConverter&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">converters&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 第二种: 将json 处理的转换器放到第一位, 使得json 转换器优先处理返回值
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// converters.add(0, new MappingJackson2HttpMessageConverter());
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 第三种: 去掉String类型的转换器, 不使用String类型的转换器
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// converters.removeIf(converter -&amp;gt; converter.getClass().isAssignableFrom(StringHttpMessageConverter.class));
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 159; flex-basis: 381px">
&lt;a href="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/02.png" data-size="512x322">&lt;img src="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/02.png"
srcset="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/02_hu193132ee1d043ae93e1273a3975b6029_57698_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8controlleradvice%E7%BB%9F%E4%B8%80%E5%B0%81%E8%A3%85controller%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE/02_hu193132ee1d043ae93e1273a3975b6029_57698_1024x0_resize_box_2.png 1024w"
width="512"
height="322"
loading="lazy"
alt="02">
&lt;/a>
&lt;figcaption>02&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>到此为止才算完成了&lt;/p></description></item><item><title>Validate自定义校验注解</title><link>https://chaosalphard.github.io/p/validate%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3/</link><pubDate>Wed, 18 Nov 2020 20:12:21 +0000</pubDate><guid>https://chaosalphard.github.io/p/validate%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3/</guid><description>&lt;h1 id="自定义validator校验注解">自定义Validator校验注解&lt;/h1>
&lt;p>通常来说, &lt;code>Hibernate Validation&lt;/code>提供的注解已经够用了, 但有时候还是需要根据业务自定义校验规则.&lt;/p>
&lt;h2 id="自定义注解">自定义注解&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Documented&lt;/span>
&lt;span class="nd">@Retention&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RetentionPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RUNTIME&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Target&lt;/span>&lt;span class="o">({&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">METHOD&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FIELD&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ANNOTATION_TYPE&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CONSTRUCTOR&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">PARAMETER&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TYPE_USE&lt;/span>
&lt;span class="o">})&lt;/span>
&lt;span class="nd">@Repeatable&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">List&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 设置自定义注解实现类
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@Constraint&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">validatedBy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="n">TimeValidate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nd">@interface&lt;/span> &lt;span class="n">Time&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kt">boolean&lt;/span> &lt;span class="nf">allowNull&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">regexp&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="s">&amp;#34;^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9]$&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">message&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="s">&amp;#34;时间格式错误&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;[]&lt;/span> &lt;span class="n">groups&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="o">{};&lt;/span>
&lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Payload&lt;/span>&lt;span class="o">&amp;gt;[]&lt;/span> &lt;span class="nf">payload&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="o">{};&lt;/span>
&lt;span class="nd">@Documented&lt;/span>
&lt;span class="nd">@Retention&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RetentionPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RUNTIME&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Target&lt;/span>&lt;span class="o">({&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">METHOD&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FIELD&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ANNOTATION_TYPE&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CONSTRUCTOR&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">PARAMETER&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TYPE_USE&lt;/span>
&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nd">@interface&lt;/span> &lt;span class="n">List&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Time&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="nf">value&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;h2 id="自定义注解实现">自定义注解实现&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">// 需要实现ConstraintValidator, 第一项参数是要校验的注解, 第二项是要校验的值的类型
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TimeValidate&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">ConstraintValidator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Time&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="n">allowNull&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Pattern&lt;/span> &lt;span class="n">regexp&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// 初始化
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Time&lt;/span> &lt;span class="n">annotation&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">allowNull&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">annotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">allowNull&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">regexp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Pattern&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">annotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">regexp&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 自定义校验实现
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isValid&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ConstraintValidatorContext&lt;/span> &lt;span class="n">constraintValidatorContext&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">allowNull&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">regexp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">matcher&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">matches&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="在参数实体类中使用">在参数实体类中使用&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Data&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TimeParam&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@NotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;id不能为空&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Integer&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Time&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">allowNull&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Validate参数分组校验</title><link>https://chaosalphard.github.io/p/validate%E5%8F%82%E6%95%B0%E5%88%86%E7%BB%84%E6%A0%A1%E9%AA%8C/</link><pubDate>Tue, 10 Nov 2020 12:30:22 +0000</pubDate><guid>https://chaosalphard.github.io/p/validate%E5%8F%82%E6%95%B0%E5%88%86%E7%BB%84%E6%A0%A1%E9%AA%8C/</guid><description>&lt;h1 id="validator分组校验">Validator分组校验&lt;/h1>
&lt;p>定义接口, 接口里面不需要写任何东西, Validator会把接口视为一个一个的&lt;strong>组&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">IGet&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">IList&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">IAdd&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">IEdit&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">IDelete&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;span class="c1">// 如果一个组继承了另一个组,
&lt;/span>&lt;span class="c1">// 则在校验属于这个组的参数时,
&lt;/span>&lt;span class="c1">// 也会一并校验被继承组的参数
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">ISexFilter&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Default&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改参数实体类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Data&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Param&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// groups 定义该字段所属的&amp;#34;组&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@NotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;id不能为空&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="n">IGet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">IEdit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">IDelete&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="nd">@Null&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;获取列表时不需要ID&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Integer&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@NotBlank&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;name不能为空&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IAdd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Null&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;不能修改name&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IEdit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@NotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;age不能为空&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IEdit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Integer&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@NotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;sex不能为空&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IEdit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@NotBlank&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;sex不能为空&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ISexFilter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Byte&lt;/span> &lt;span class="n">sex&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// 没有标明groups参数时, 默认属于Default组
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@NotBlank&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;time不能为空&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改Controller&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@GetMapping&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="c1">// 如果没有传入要校验的组, Validator默认校验Default组的参数
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">validateTest&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@Validated&lt;/span> &lt;span class="n">Param&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/get&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="nf">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@Validated&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="n">IGet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ISexFilter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">})&lt;/span> &lt;span class="n">Param&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/list&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="c1">// 这里虽然只指定了校验 IList组 和 ISexFilter组,
&lt;/span>&lt;span class="c1">// 但由于 ISexFilter组 继承了 Default组,
&lt;/span>&lt;span class="c1">// 所以实际上是校验属于 IList组, ISexFilter组, Default组 的参数.
&lt;/span>&lt;span class="c1">// 且由于 time 字段没有指明所属组, 所以 time字段 默认属于 Default组,
&lt;/span>&lt;span class="c1">// 故而 id(IList组), sex(ISexFilter组), time(Default组) 字段都会被校验.
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">list&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@Validated&lt;/span>&lt;span class="o">({&lt;/span>&lt;span class="n">IList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ISexFilter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">})&lt;/span> &lt;span class="n">Param&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">list&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@PostMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/add&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@Validated&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IAdd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nd">@RequestBody&lt;/span> &lt;span class="n">Param&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@PatchMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/edit&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">edit&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@Validated&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">IEdit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nd">@RequestBody&lt;/span> &lt;span class="n">Param&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@DeleteMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/delete&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">delete&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@Validated&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">IDelete&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nd">@RequestBody&lt;/span> &lt;span class="n">IndexParam&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="定义validator校验顺序">定义Validator校验顺序&lt;/h2>
&lt;blockquote>
&lt;p>默认情况下, 不同组别的约束验证是无序的, 然而在某些情况下, 约束验证的顺序却很重要. 例如:&lt;/p>
&lt;ul>
&lt;li>第二个组中的校验依赖于一个稳定状态, 而这个稳定状态是由第一个组来进行校验的.&lt;/li>
&lt;li>某个组的校验比较耗时, 最优的选择是将其放在最后进行验证.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>定义分组接口&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">IFirstValidate&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">ISecondValidate&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="定义分组校验顺序">定义分组校验顺序&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@GroupSequence&lt;/span>&lt;span class="o">({&lt;/span>
&lt;span class="n">IFirstValidate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">ISecondValidate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>
&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">IValidateGroup&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用">使用&lt;/h2>
&lt;p>参数实体类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Data&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">EditParam&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@NotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;id不能为空&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IFirstValidate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Integer&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@NotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;detail不能为空&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IFirstValidate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Size&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">min&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">1024&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;detail不能小于1024&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ISecondValidate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在控制器中使用&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@PutMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/edit&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">edit&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@Validated&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">IValidateGroup&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nd">@RequestBody&lt;/span> &lt;span class="n">EditParam&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>使用Validate实现参数统一校验以及自定义校验规则</title><link>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8validate%E5%AE%9E%E7%8E%B0%E5%8F%82%E6%95%B0%E7%BB%9F%E4%B8%80%E6%A0%A1%E9%AA%8C%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E8%A7%84%E5%88%99/</link><pubDate>Sun, 08 Nov 2020 22:40:20 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8validate%E5%AE%9E%E7%8E%B0%E5%8F%82%E6%95%B0%E7%BB%9F%E4%B8%80%E6%A0%A1%E9%AA%8C%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E8%A7%84%E5%88%99/</guid><description>&lt;blockquote>
&lt;p>&lt;code>JSR-303&lt;/code>是一项标准, &lt;code>JSR-349&lt;/code>是其的升级版本, 添加了一些新特性, 这项标准规定了一些校验规范, 如&lt;code>@Null&lt;/code>, &lt;code>@NotNull&lt;/code>, &lt;code>@Pattern&lt;/code>, 位于&lt;code>javax.validation.constraints&lt;/code>包下, 只提供规范不提供实现.&lt;br>
&lt;code>Hibernate Validation&lt;/code>是对这个规范的实践, 他提供了相应的实现, 并增加了一些其他校验注解, 如&lt;code>@Email&lt;/code>, &lt;code>@Length&lt;/code>, &lt;code>@Range&lt;/code>等.&lt;/p>
&lt;/blockquote>
&lt;h1 id="引入validator依赖">引入Validator依赖&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.hibernate.validator&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>hibernate-validator&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>6.1.6.Final&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="配置validator">配置Validator&lt;/h1>
&lt;p>&lt;code>Validator&lt;/code>默认会对所有数据进行校验, 然后返回结果, 如果想要在校验到数据不符合规则时直接返回结果的话, 则需要进行配置&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ValidatorConfiguration&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Validator&lt;/span> &lt;span class="nf">validator&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Validation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">byProvider&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HibernateValidator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">configure&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 设置校验到任意数据不符合规则时直接返回结果, 不再对剩余数据进行校验
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">failFast&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">buildValidatorFactory&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">getValidator&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="使用validator对controller参数进行校验">使用Validator对Controller参数进行校验&lt;/h1>
&lt;p>参数实体类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Data&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Param&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@NotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;id不能为空&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Integer&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@NotBlank&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;name不能为空&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@NotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;age不能为空&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Integer&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@NotNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;sex不能为空&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Byte&lt;/span> &lt;span class="n">sex&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;p>Controller&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@PostMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/hello&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">hello&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@Validated&lt;/span> &lt;span class="nd">@RequestBody&lt;/span> &lt;span class="n">Param&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">BindingResult&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hasErrors&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;fail&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Validator会对参数进行校验，并返回校验结果(&lt;code>BindingResult&lt;/code>)&lt;/p>
&lt;h2 id="使用统一异常处理器来处理validator校验结果">使用统一异常处理器来处理Validator校验结果&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestControllerAdvice&lt;/span>
&lt;span class="nd">@ResponseStatus&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpStatus&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">OK&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">GlobalExceptionHandler&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// Json格式入参时, 参数不符合规则抛出MethodArgumentNotValidException
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@ExceptionHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MethodArgumentNotValidException&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">R&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="nf">argNotValidErr&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MethodArgumentNotValidException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">R&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofFail&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">getValidError&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBindingResult&lt;/span>&lt;span class="o">()));&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 使用Get请求接口, 参数写在url中时, 参数不符合规则抛出BindException
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@ExceptionHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BindException&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">R&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="nf">binddErr&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BindException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">R&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofFail&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">getValidError&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBindingResult&lt;/span>&lt;span class="o">()));&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 处理Validator的验证结果, 获取所有的不符合规则的参数
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="nf">getValidErrors&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BindingResult&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">lis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">FieldError&lt;/span> &lt;span class="n">error&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFieldErrors&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">lis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;(){{&lt;/span>
&lt;span class="n">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getField&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefaultMessage&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;rejectValue&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRejectedValue&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}});&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">lis&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 如果配置了Validator的failFast属性为true, 则可以使用下面的方法处理结果
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">private&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getValidError&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BindingResult&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFieldError&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">FieldError&lt;/span> &lt;span class="n">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFieldError&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;(){{&lt;/span>
&lt;span class="n">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getField&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefaultMessage&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;rejectValue&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRejectedValue&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}};&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>使用自定义断言处理常见的异常</title><link>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%AD%E8%A8%80%E5%A4%84%E7%90%86%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BC%82%E5%B8%B8/</link><pubDate>Mon, 19 Oct 2020 23:37:23 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%AD%E8%A8%80%E5%A4%84%E7%90%86%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BC%82%E5%B8%B8/</guid><description>&lt;img src="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%AD%E8%A8%80%E5%A4%84%E7%90%86%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BC%82%E5%B8%B8/title.jpg" alt="Featured image of post 使用自定义断言处理常见的异常" />&lt;p>　　&lt;code>Java&lt;/code>中空判断随处可见，通常我们都是手动判断是否为空，然后再抛出自定义异常以及记录信息，例如:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">var&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;数据为空, id{}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">CustomException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">USER_NOT_EXIST&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样的代码写多了就觉得麻烦，可不可以简化一下呢&lt;/p>
&lt;h1 id="使用assert替代null判断">使用Assert替代null判断&lt;/h1>
&lt;p>　　我们都知道sprng中有一个&lt;code>Assert&lt;/code>类，其中有一个方法&lt;code>notNull()&lt;/code> 可以用来判断是否为空，并且输出自定义提示，何不根据此改造一下，做一个自定义的&lt;code>Assert&lt;/code>类&lt;/p>
&lt;h2 id="创建枚举类接口">创建枚举类接口&lt;/h2>
&lt;p>创建默认枚举方法，需要与你自定义枚举中的属性对应&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">IBaseEnum&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">getCode&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">getMessage&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;h2 id="创建自定义异常">创建自定义异常&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">CustomException&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">CustomException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">IBaseEnum&lt;/span> &lt;span class="n">enums&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">super&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">enums&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">enums&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getCode&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">detail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">CustomException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">super&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">detail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">toString&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;CustomException{&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34;code=&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">code&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34;, message=&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="kd">super&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sc">&amp;#39;\&amp;#39;&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34;, detail=&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">detail&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sc">&amp;#39;\&amp;#39;&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34;, data=&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34;} &amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">getCode&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getDetail&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="nf">getData&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建异常断言构造">创建异常断言构造&lt;/h2>
&lt;p>创建默认异常的构造方法，可以根据情况修改&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">ICustomExceptionAssert&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="n">CustomException&lt;/span> &lt;span class="nf">newException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">IBaseEnum&lt;/span> &lt;span class="n">enums&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">CustomException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">enums&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="n">CustomException&lt;/span> &lt;span class="nf">newException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">CustomException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">code&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建基础断言类">创建基础断言类&lt;/h2>
&lt;p>默认的异常断言，可以根据自己业务需要增加各种逻辑判断&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">IBaseAssert&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">IBaseEnum&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ICustomExceptionAssert&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">notNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Object&lt;/span> &lt;span class="n">object&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">CustomException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">object&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">LogUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">detail&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="n">newException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">success&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">CustomException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">line&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">LogUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">detail&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="n">newException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">detail&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用枚举来完善断言">使用枚举来完善断言&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">enum&lt;/span> &lt;span class="n">GlobalAssert&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">IBaseAssert&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">USER_EXIST&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">USER_NOT_EXIST&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;用户不存在&amp;#34;&lt;/span>&lt;span class="o">),&lt;/span>
&lt;span class="n">SQL_EXECUTE&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">SQL_ERROR&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;无匹配记录&amp;#34;&lt;/span>&lt;span class="o">),&lt;/span>
&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Assert&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">getCode&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">code&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getMessage&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">message&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="测试">测试&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">var&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">var&lt;/span> &lt;span class="n">logInfo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MessageFormatter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">arrayFormat&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;数据为空, id: {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">USER_EXIST&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">notNull&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">logInfo&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">var&lt;/span> &lt;span class="n">sqlExecErr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MessageFormatter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">arrayFormat&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;新增用户失败: {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">SQL_EXECUTE&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">success&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">other&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">insert&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="n">sqlExecErr&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure style="flex-grow: 430; flex-basis: 1033px">
&lt;a href="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%AD%E8%A8%80%E5%A4%84%E7%90%86%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BC%82%E5%B8%B8/01.jpg" data-size="844x196">&lt;img src="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%AD%E8%A8%80%E5%A4%84%E7%90%86%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BC%82%E5%B8%B8/01.jpg"
srcset="https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%AD%E8%A8%80%E5%A4%84%E7%90%86%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BC%82%E5%B8%B8/01_hu9dcbd8da667567a7ead17a2ef18d0e3d_103798_480x0_resize_q75_box.jpg 480w, https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%AD%E8%A8%80%E5%A4%84%E7%90%86%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BC%82%E5%B8%B8/01_hu9dcbd8da667567a7ead17a2ef18d0e3d_103798_1024x0_resize_q75_box.jpg 1024w"
width="844"
height="196"
loading="lazy"
alt="结果">
&lt;/a>
&lt;figcaption>结果&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="异常处理">异常处理&lt;/h2>
&lt;p>使用&lt;code>@ControllerAdvice&lt;/code>与&lt;code>@ExceptionHandler&lt;/code>注解来进行全局异常捕获即可&lt;/p></description></item><item><title>Java是值传递还是引用传递</title><link>https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/</link><pubDate>Mon, 20 Apr 2020 23:45:38 +0000</pubDate><guid>https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/</guid><description>&lt;img src="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/ref.png" alt="Featured image of post Java是值传递还是引用传递" />&lt;p>进入正题之前先简单说说&lt;strong>值传递&lt;/strong>和&lt;strong>引用传递&lt;/strong>的区别&lt;/p>
&lt;blockquote>
&lt;p>按值调用(call by value)表示方法接收的是调用者提供的值，而按引用调用(call by reference)表示方法接收的是调用者提供的变量地址。一个方法可以修改传递引用所对应的变量值，而不能修改传递值调用所对应的变量值。&lt;/p>
&lt;/blockquote>
&lt;p>下面是我用&lt;a class="link" href="https://www.rust-lang.org/" target="_blank" rel="noopener"
>Rust&lt;/a>来做的一个简单示范。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 108; flex-basis: 259px">
&lt;a href="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/rust.png" data-size="916x846">&lt;img src="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/rust.png"
srcset="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/rust_hua63cb72761a0b92adaf9d0778079a3aa_86883_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/rust_hua63cb72761a0b92adaf9d0778079a3aa_86883_1024x0_resize_box_2.png 1024w"
width="916"
height="846"
loading="lazy"
alt="Rust">
&lt;/a>
&lt;figcaption>Rust&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>可以看到，虽然&lt;code>call_by_value&lt;/code>函数和&lt;code>call_by_reference&lt;/code>函数都将接收到的参数的值修改为了&lt;code>12450&lt;/code>，但是由于&lt;code>call_by_reference&lt;/code>函数接收的是&lt;code>by_ref&lt;/code>变量的引用，所以在函数内修改&lt;code>by_ref&lt;/code>的值会影响到函数外部的&lt;code>by_ref&lt;/code>变量，而&lt;code>call_by_value&lt;/code>函数接收的是&lt;code>by_val&lt;/code>变量的值，所以在函数内修改&lt;code>by_val&lt;/code>的值不会影响到函数外部的&lt;code>by_val&lt;/code>变量。&lt;/p>
&lt;!-- more -->
&lt;h1 id="对于基本数据类型-java是值传递还是引用传递">对于基本数据类型, Java是值传递还是引用传递?&lt;/h1>
&lt;p>看下图&lt;/p>
&lt;p>&lt;figure style="flex-grow: 101; flex-basis: 244px">
&lt;a href="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/00.png" data-size="1101x1081">&lt;img src="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/00.png"
srcset="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/00_hud23ee421fbd842c5ca56b3d0bd5e02d4_84381_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/00_hud23ee421fbd842c5ca56b3d0bd5e02d4_84381_1024x0_resize_box_2.png 1024w"
width="1101"
height="1081"
loading="lazy"
alt="00">
&lt;/a>
&lt;figcaption>00&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>可以看到，在函数内的修改并没有影响到函数外部的&lt;code>num&lt;/code>，所以对于基本数据类型, Java是值传递&lt;/p>
&lt;p>对于基本数据的包装类, 也是值传递&lt;/p>
&lt;p>&lt;figure style="flex-grow: 101; flex-basis: 244px">
&lt;a href="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/01.png" data-size="1101x1081">&lt;img src="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/01.png"
srcset="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/01_hub70b67ba6cd8f66fec698e470328e16d_105226_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/01_hub70b67ba6cd8f66fec698e470328e16d_105226_1024x0_resize_box_2.png 1024w"
width="1101"
height="1081"
loading="lazy"
alt="01">
&lt;/a>
&lt;figcaption>01&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h1 id="对于引用类型-java是值传递还是引用传递">对于引用类型, Java是值传递还是引用传递?&lt;/h1>
&lt;p>看下图&lt;/p>
&lt;p>&lt;figure style="flex-grow: 101; flex-basis: 244px">
&lt;a href="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/02.png" data-size="1101x1081">&lt;img src="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/02.png"
srcset="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/02_hu8f6cdbd344f5065e45acd838cc11fed9_109451_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/02_hu8f6cdbd344f5065e45acd838cc11fed9_109451_1024x0_resize_box_2.png 1024w"
width="1101"
height="1081"
loading="lazy"
alt="02">
&lt;/a>
&lt;figcaption>02&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>可以看到，在函数内的修改已经影响到了函数外部的&lt;code>lis&lt;/code>，这似乎证明了对于引用类型, Java是引用传递&lt;/p>
&lt;p>&lt;strong>但是&lt;/strong>, 我们都知道, 对于引用类型, 变量保存的是指向其堆内存的地址, 也就是说, 如果将引用类型赋值给另一个变量, 修改当前变量的值, 另一个变量也会被改变, 如何理解呢? 请看下图&lt;/p>
&lt;p>&lt;figure style="flex-grow: 101; flex-basis: 244px">
&lt;a href="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/03.png" data-size="1101x1081">&lt;img src="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/03.png"
srcset="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/03_hu459a4cc625b851f91dc4766a8cb5ee6d_112368_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/03_hu459a4cc625b851f91dc4766a8cb5ee6d_112368_1024x0_resize_box_2.png 1024w"
width="1101"
height="1081"
loading="lazy"
alt="03">
&lt;/a>
&lt;figcaption>03&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>可以看到, 虽然只是修改了&lt;code>lis&lt;/code>而没有去修改&lt;code>copy&lt;/code>, 但由于&lt;code>lis&lt;/code>和&lt;code>copy&lt;/code>指向的是同一内存地址, 所以对&lt;code>lis&lt;/code>的修改也会体现在&lt;code>copy&lt;/code>上&lt;/p>
&lt;p>&lt;figure style="flex-grow: 160; flex-basis: 385px">
&lt;a href="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/ref.png" data-size="688x428">&lt;img src="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/ref.png"
srcset="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/ref_huc408f4a09915fb0ab9e8d5380cc46f77_11779_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/ref_huc408f4a09915fb0ab9e8d5380cc46f77_11779_1024x0_resize_box_2.png 1024w"
width="688"
height="428"
loading="lazy"
alt="ref">
&lt;/a>
&lt;figcaption>ref&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>回到正题，既然知道了&lt;code>lis&lt;/code>变量是对于堆内存中ArrayList的引用, 那么之前的结果就不成立了, 修改&lt;code>changeValue&lt;/code>方法再看
&lt;figure style="flex-grow: 101; flex-basis: 244px">
&lt;a href="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/04.png" data-size="1101x1081">&lt;img src="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/04.png"
srcset="https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/04_hu8fd2581244d3b3e412d8af701f7a3a58_110865_480x0_resize_box_2.png 480w, https://chaosalphard.github.io/p/java%E6%98%AF%E5%80%BC%E4%BC%A0%E9%80%92%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/04_hu8fd2581244d3b3e412d8af701f7a3a58_110865_1024x0_resize_box_2.png 1024w"
width="1101"
height="1081"
loading="lazy"
alt="04">
&lt;/a>
&lt;figcaption>04&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>可以看到, 在函数中将一个新的ArrayList的引用赋值给了&lt;code>lis&lt;/code>变量, 但是函数外的&lt;code>lis&lt;/code>变量依然指向的是原来的ArrayList, 所以得出结论, 对于引用类型, Java也是值传递&lt;/p>
&lt;h1 id="结论">结论&lt;/h1>
&lt;p>无论是对于基本数据类型还是引用类型，Java都是&lt;strong>值传递&lt;/strong>，但要注意的是，对于引用类型，变量保存的是其引用，所以通过函数接收的变量去修改其指向的引用类型，也&lt;strong>会影响到函数外的变量&lt;/strong>，而给函数接收的变量赋予新的引用，则&lt;strong>不会影响到函数外的变量&lt;/strong>。&lt;/p></description></item><item><title>Java8中新增的时间处理API</title><link>https://chaosalphard.github.io/p/java8%E4%B8%AD%E6%96%B0%E5%A2%9E%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86api/</link><pubDate>Sat, 18 Apr 2020 23:40:28 +0000</pubDate><guid>https://chaosalphard.github.io/p/java8%E4%B8%AD%E6%96%B0%E5%A2%9E%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86api/</guid><description>&lt;h1 id="java8新的时间处理api">Java8新的时间处理API&lt;/h1>
&lt;p>&lt;strong>原有的&lt;code>java.util.Date&lt;/code>与新增的&lt;code>java.time&lt;/code>有何差异？&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>java.util.Date&lt;/code>设定为可变类型&lt;/li>
&lt;li>&lt;code>SimpleDateFormat&lt;/code>是非线程安全的&lt;/li>
&lt;li>新的API 基于ISO 标准日历系统, 遵循Gregorian 规则&lt;/li>
&lt;li>&lt;code>java.time&lt;/code>包下的所有类都是不可变类型&lt;/li>
&lt;li>&lt;code>java.time&lt;/code>包下的所有类都是线程安全的&lt;/li>
&lt;/ul>
&lt;h2 id="javatime简单介绍">&lt;code>java.time&lt;/code>简单介绍&lt;/h2>
&lt;p>&lt;code>java.time&lt;/code>由以下5个包组成:&lt;/p>
&lt;ul>
&lt;li>&lt;code>java.time&lt;/code>: 包含值对象的基础包&lt;/li>
&lt;li>&lt;code>java.time.chrono&lt;/code>: 提供对不同的日历系统的访问&lt;/li>
&lt;li>&lt;code>java.time.format&lt;/code>: 格式化和解析时间和日期&lt;/li>
&lt;li>&lt;code>java.time.temporal&lt;/code>: 包括底层框架和扩展特性&lt;/li>
&lt;li>&lt;code>java.time.zone&lt;/code>: 包含时区支持的类&lt;/li>
&lt;/ul>
&lt;p>关于&lt;code>java.time&lt;/code>下, 类的简介:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Instant&lt;/code>: 时间戳&lt;/li>
&lt;li>&lt;code>LocalDate&lt;/code>: 只包含日期，比如: 2020-01-01&lt;/li>
&lt;li>&lt;code>LocalTime&lt;/code>: 只包含时间，比如: 12:00:00&lt;/li>
&lt;li>&lt;code>LocalDateTime&lt;/code>: 包含日期和时间，比如: 2020-01-01T12:00:00&lt;/li>
&lt;li>&lt;code>Duration&lt;/code>: 时间段, 主要用于计算两个时间之间的差值&lt;/li>
&lt;li>&lt;code>Peroid&lt;/code>: 时间段, 主要用于计算两个日期之间的差值&lt;/li>
&lt;li>&lt;code>ZoneOffset&lt;/code>: 时区偏移量，比如: +8:00&lt;/li>
&lt;li>&lt;code>ZonedDateTime&lt;/code>: 带时区的日期时间&lt;/li>
&lt;li>&lt;code>Clock&lt;/code>: 时钟，可以获取或指定时区, 也可获取当前的时刻&lt;/li>
&lt;li>&lt;code>DateTimeFormatter&lt;/code>: 时间格式化&lt;/li>
&lt;/ul>
&lt;p>关于&lt;code>java.time&lt;/code>下&lt;strong>大部分&lt;/strong>类的方法&lt;strong>前缀&lt;/strong>简介:&lt;/p>
&lt;ul>
&lt;li>&lt;code>of&lt;/code>: 静态工厂方法(用类名去调用)。&lt;/li>
&lt;li>&lt;code>parse&lt;/code>: 静态工厂方法，关注于解析(用类名去调用)。&lt;/li>
&lt;li>&lt;code>now&lt;/code>: 静态工厂方法，用当前时间创建实例(用类名去调用)&lt;/li>
&lt;li>&lt;code>get&lt;/code>: 获取某些东西的值。&lt;/li>
&lt;li>&lt;code>is&lt;/code>: 检查某些东西的是否是true。&lt;/li>
&lt;li>&lt;code>with&lt;/code>: 返回一个部分状态改变了的时间日期对象拷贝(单独一个with方法,参数为TemporalAdjusters类型)&lt;/li>
&lt;li>&lt;code>plus&lt;/code>: 返回一个时间增加了的、时间日期对象拷贝(如果参数是负数也能够有minus方法的效果)&lt;/li>
&lt;li>&lt;code>minus&lt;/code>: 返回一个时间减少了的、时间日期对象拷贝&lt;/li>
&lt;li>&lt;code>to&lt;/code>: 把当前时间日期对象转换成另外一个，可能会损失部分状态.&lt;/li>
&lt;li>&lt;code>at&lt;/code>: 把这个对象与另一个对象组合起来，例如: date.atTime(time)。&lt;/li>
&lt;li>&lt;code>format&lt;/code>: 根据某一个DateTimeFormatter格式化为字符串&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;h2 id="新的api要如何使用">新的API要如何使用&lt;/h2>
&lt;h3 id="获取当前的时间日期">获取当前的时间日期&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">LocalDate&lt;/span> &lt;span class="n">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">LocalTime&lt;/span> &lt;span class="n">time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">// 使用.withNano(0) 来去除纳秒数显示
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">datetime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withNano&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 2020-04-18
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 20:41:02.626861700
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 2020-04-18T20:41:02
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="与字符串相互转换">与字符串相互转换&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withNano&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">DateTimeFormatter&lt;/span> &lt;span class="n">patternToString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DateTimeFormatter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofPattern&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;G yyyy年MM月dd号 E a hh时mm分ss秒&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">byFormat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">patternToString&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">byFormat&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 公元 2020年04月18号 周六 下午 02时11分43秒
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">DateTimeFormatter&lt;/span> &lt;span class="n">patternToDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DateTimeFormatter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofPattern&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">byParse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">parse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;2020-04-18 14:11:43&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">patternToDate&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">byParse&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 2020-04-18T14:11:43
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="获取单独的年月日时分秒信息">获取单独的年月日时分秒信息&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">LocalDate&lt;/span> &lt;span class="n">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">year&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getYear&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">month&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMonthValue&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">day&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDayOfMonth&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 2020
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">month&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 4
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">day&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 18
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">LocalTime&lt;/span> &lt;span class="n">time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">hour&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHour&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">minute&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMinute&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">second&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSecond&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">nano&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getNano&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">hour&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 8(时)
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">minute&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 2(分)
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 5(秒)
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nano&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 453345500(纳秒)
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">dateTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">dateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getYear&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">// 2020
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">dateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHour&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">// 8
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="自定义日期时间">自定义日期时间&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2020&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">4&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">18&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalTime&lt;/span> &lt;span class="n">time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">20&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">45&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">dateTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 使用LocalDateTime.of(2020,4,18,8,10,30)方式也可创建自定义LocalDateTime
&lt;/span>&lt;span class="c1">// 因为没有指定nano值, 所以不会出现出现纳秒显示
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">dateTime&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 2020-04-18T08:20:45
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="时间比较">时间比较&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">date1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="c1">// 假设今天为2020-4-18
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">date2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2020&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">4&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">18&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// LocalTime和LocalDateTime 同理
&lt;/span>&lt;span class="c1">// equals: 比较是否相等
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date2&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;相等&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;不相等&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// isAfter: 是否晚于某个日期
&lt;/span>&lt;span class="c1">// isBefore: 是否早于某个日期
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isAfter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date2&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s">&amp;#34; 晚于 &amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">date2&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isBefore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date2&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s">&amp;#34; 早于 &amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">date2&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="检查周期性事件">检查周期性事件&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">MonthDay&lt;/span> &lt;span class="n">targetMonthDay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MonthDay&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">MonthDay&lt;/span> &lt;span class="n">currentMonthDay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MonthDay&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">from&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">currentMonthDay&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">targetMonthDay&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;国庆到了&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="计算某段时间之前或之后的日期">计算某段时间之前或之后的日期&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">dateTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withNano&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">dateTime2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dateTime&lt;/span>
&lt;span class="c1">// 计算当前时间的 一个月后
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">plusMonths&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 又 一周后
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">plusWeeks&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 又 2个半天(12h)后
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">plus&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ChronoUnit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">HALF_DAYS&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 又 1小时前
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">minusHours&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 又 2个月前 的时间
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">minus&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ChronoUnit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">MONTHS&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">dateTime2&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="clock-时钟类的用法">Clock 时钟类的用法&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">final&lt;/span> &lt;span class="n">Clock&lt;/span> &lt;span class="n">clock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Clock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">systemUTC&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">millis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">millis&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">millis&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 1587320754163
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">millis&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">// true
&lt;/span>&lt;span class="c1">// Instant.now().toEpochMilli() 也可获取时间戳
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">millis&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">Instant&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">toEpochMilli&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">// true
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">Clock&lt;/span> &lt;span class="n">zone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Clock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">systemDefaultZone&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">ZoneId&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">zone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getZone&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// Asia/Shanghai
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TimeZone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefault&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getID&lt;/span>&lt;span class="o">()));&lt;/span> &lt;span class="c1">// true
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withNano&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">ZoneId&lt;/span> &lt;span class="n">zoneIdOfHonolulu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ZoneId&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Pacific/Honolulu&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">ZonedDateTime&lt;/span> &lt;span class="n">timeInHonolulu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ZonedDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">zoneIdOfHonolulu&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">timeInHonolulu&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 2020-04-20T02:25:24-10:00[Pacific/Honolulu]
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="其他用法">其他用法&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withNano&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 判断是否是闰年, LocalDate类才有此方法
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">from&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">isLeapYear&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;今年是闰年&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 获取星期
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDayOfWeek&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">// SATURDAY
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalTime&lt;/span> &lt;span class="n">time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2018&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">8&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">18&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2020&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">8&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">18&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">startDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">LocalDateTime&lt;/span> &lt;span class="n">endDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LocalDateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 计算两个日期直接的差值, 如果第一个参数的时间晚于第二个参数, 则该类的其他方法结果会返回负数
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">final&lt;/span> &lt;span class="n">Duration&lt;/span> &lt;span class="n">between&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Duration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">between&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">startDate&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">endDate&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 计算天数差值
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">between&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toDays&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">// 731 (第一个参数晚于第二个参数则会返回负数-731)
&lt;/span>&lt;span class="c1">// 计算小时数差值
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">between&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toHours&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">// 17544 (-17544)
&lt;/span>&lt;span class="c1">// 计算分钟数差值
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">between&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toMinutes&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">// 1052640 (-1052640)
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">Period&lt;/span> &lt;span class="n">period&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Period&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">between&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">from&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">startDate&lt;/span>&lt;span class="o">),&lt;/span>&lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">from&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">endDate&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="c1">// 计算月份差值
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">period&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toTotalMonths&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">// 24
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>OAuth2.0资源服务器搭建与配置</title><link>https://chaosalphard.github.io/p/oauth2.0%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 11 Apr 2020 22:52:26 +0000</pubDate><guid>https://chaosalphard.github.io/p/oauth2.0%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid><description>&lt;h1 id="oauth20资源服务器搭建">OAuth2.0资源服务器搭建&lt;/h1>
&lt;h2 id="引入依赖">引入依赖&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-starter-security&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-starter-oauth2&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编写配置文件">编写配置文件&lt;/h2>
&lt;p>&lt;code>SecurityConfig.java&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="nd">@EnableGlobalMethodSecurity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">prePostEnabled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/res/**&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 需要通过验证
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">csrf&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">disable&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;p>&lt;code>ResourceServerConfig.java&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableResourceServer&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ResourceServerConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">ResourceServerConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">TokenStore&lt;/span> &lt;span class="n">tokenStore&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ResourceServerSecurityConfigurer&lt;/span> &lt;span class="n">resources&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">resources&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">resourceId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;res1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// 资源id, 需要与ClientDetailsServiceConfigurer中的resourceIds一致
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">tokenServices&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenService&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="c1">// 验证令牌服务
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">tokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenStore&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">stateless&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/**&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 校验scope
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">access&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;#oauth2.hasScope(&amp;#39;all&amp;#39;)&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">csrf&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">disable&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">sessionManagement&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">sessionCreationPolicy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SessionCreationPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATELESS&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">ResourceServerTokenServices&lt;/span> &lt;span class="nf">tokenService&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 远程服务器校验token。调用授权服务器校验token
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">RemoteTokenServices&lt;/span> &lt;span class="n">services&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RemoteTokenServices&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">// 使用远程服务校验时，必须指定endpoint_url, client_id, client_secret
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setCheckTokenEndpointUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;http://127.0.0.1:80/oauth/check_token&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setClientId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;c1&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setClientSecret&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>控制器&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">IndexController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/res/r1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@PreAuthorize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hasRole(&amp;#39;USER&amp;#39;)&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">resource01&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;访问资源r1&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>OAuth2.0授权服务器搭建与配置</title><link>https://chaosalphard.github.io/p/oauth2.0%E6%8E%88%E6%9D%83%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 09 Apr 2020 01:00:25 +0000</pubDate><guid>https://chaosalphard.github.io/p/oauth2.0%E6%8E%88%E6%9D%83%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid><description>&lt;h1 id="oauth20授权服务器搭建">OAuth2.0授权服务器搭建&lt;/h1>
&lt;p>向&lt;code>pom.xml&lt;/code>中添加以下依赖&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-starter-security&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-starter-oauth2&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置&lt;code>client&lt;/code>端的详情信息&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableAuthorizationServer&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">AuthorizationServerConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">AuthorizationServerConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 配置客户端详情信息
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ClientDetailsServiceConfigurer&lt;/span> &lt;span class="n">clients&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">clients&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">inMemory&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="c1">// inMemory: 使用内存方式
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 客户端ID
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">withClient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;c1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 客户端密钥, 加密方式需要与SpringSecurity中的方式一致
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">secret&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">BCryptPasswordEncoder&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">encode&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="c1">// 客户端可以访问的资源列表
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">resourceIds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;res1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 允许的授权类型
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">authorizedGrantTypes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;authorization_code&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="s">&amp;#34;client_credentials&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;implicit&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;refresh_token&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 允许的授权范围
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">scopes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;all&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 自动授权, 如果是授权码模式, 且设置为false, 则会跳转到授权页面
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">autoApprove&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 授权成功后重定向地址, 授权成功后会在该地址后附带上授权码
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">redirectUris&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;http://127.0.0.1:80/token&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;p>配置令牌管理服务&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableAuthorizationServer&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">AuthorizationServerConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">AuthorizationServerConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">TokenStore&lt;/span> &lt;span class="n">tokenStore&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ClientDetailsService&lt;/span> &lt;span class="n">clientDetailsService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// 令牌管理服务配置
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">AuthorizationServerTokenServices&lt;/span> &lt;span class="nf">tokenServices&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DefaultTokenServices&lt;/span> &lt;span class="n">services&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultTokenServices&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">// 设置客户端信息服务
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setClientDetailsService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">clientDetailsService&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 是否产生刷新令牌
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setSupportRefreshToken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 令牌储存策略
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenStore&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 令牌默认有效期2小时 2*60*60
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAccessTokenValiditySeconds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">7200&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 刷新令牌默认有效3天 3*24*60*60
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setRefreshTokenValiditySeconds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">259200&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 令牌存储策略
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">TokenStore&lt;/span> &lt;span class="nf">tokenStore&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 内存方式, 生成普通令牌
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">InMemoryTokenStore&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>令牌访问端点配置&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableAuthorizationServer&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">AuthorizationServerConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">AuthorizationServerConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">AuthorizationCodeServices&lt;/span> &lt;span class="n">authorizationCodeServices&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span> &lt;span class="c1">// 这个Bean应该是配置在SecurityConfig文件中
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">private&lt;/span> &lt;span class="n">AuthenticationManager&lt;/span> &lt;span class="n">authenticationManager&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// 设置授权码模式的授权码如何存取
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">AuthorizationCodeServices&lt;/span> &lt;span class="nf">authorizationCodeServices&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">InMemoryAuthorizationCodeServices&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 令牌访问端点配置
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AuthorizationServerEndpointsConfigurer&lt;/span> &lt;span class="n">endpoints&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">endpoints&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authenticationManager&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authenticationManager&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// 密码模式需要
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">authorizationCodeServices&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authorizationCodeServices&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// 授权码模式需要
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 令牌管理服务
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">tokenServices&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenServices&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="c1">// 允许post提交
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">allowedTokenEndpointRequestMethods&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpMethod&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">POST&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 令牌访问端点安全策略
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AuthorizationServerSecurityConfigurer&lt;/span> &lt;span class="n">security&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">security&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tokenKeyAccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;permitAll()&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">checkTokenAccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;permitAll()&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 允许表单认证申请令牌
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">allowFormAuthenticationForClients&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>SecurityConfig&lt;/code>中的配置&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 密码编码设置
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">PasswordEncoder&lt;/span> &lt;span class="nf">passwordEncoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">BCryptPasswordEncoder&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 认证管理器
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">AuthenticationManager&lt;/span> &lt;span class="nf">authenticationManagerBean&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kd">super&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authenticationManagerBean&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="授权相关的页面编写">授权相关的页面编写&lt;/h1>
&lt;p>&lt;strong>申请授权的页面&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="c">&amp;lt;!-- /oauth/authorize 是默认请求授权链接 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">form&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-form pure-form-stacked&amp;#34;&lt;/span> &lt;span class="na">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;post&amp;#34;&lt;/span> &lt;span class="na">action&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/oauth/authorize&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-control-group&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>client_id
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;client_id&amp;#34;&lt;/span> &lt;span class="na">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;client_id&amp;#34;&lt;/span> &lt;span class="na">required&lt;/span> &lt;span class="na">autofocus&lt;/span> &lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;c1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-control-group&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>response_type
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;response_type&amp;#34;&lt;/span> &lt;span class="na">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;response_type&amp;#34;&lt;/span> &lt;span class="na">required&lt;/span> &lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;code&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-control-group&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>scope
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;response_type&amp;#34;&lt;/span> &lt;span class="na">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;response_type&amp;#34;&lt;/span> &lt;span class="na">required&lt;/span> &lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;all&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-controls&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-button pure-button-primary&amp;#34;&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>获取授权&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">form&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>申请token的页面&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="c">&amp;lt;!-- /oauth/token 是默认申请令牌(access token)的链接 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">form&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-form pure-form-stacked&amp;#34;&lt;/span> &lt;span class="na">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;post&amp;#34;&lt;/span> &lt;span class="na">action&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/oauth/token&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-control-group&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>client_id
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;client_id&amp;#34;&lt;/span> &lt;span class="na">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;client_id&amp;#34;&lt;/span> &lt;span class="na">required&lt;/span> &lt;span class="na">autofocus&lt;/span> &lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;c1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-control-group&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>client_secret
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;client_secret&amp;#34;&lt;/span> &lt;span class="na">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;client_secret&amp;#34;&lt;/span> &lt;span class="na">required&lt;/span> &lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-control-group&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>grant_type
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;grant_type&amp;#34;&lt;/span> &lt;span class="na">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;grant_type&amp;#34;&lt;/span> &lt;span class="na">required&lt;/span> &lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;authorization_code&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-control-group&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>code
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;code&amp;#34;&lt;/span> &lt;span class="na">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;code&amp;#34;&lt;/span> &lt;span class="na">required&lt;/span> &lt;span class="na">th:value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${code!=null?code:&amp;#39;&amp;#39;}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-controls&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pure-button pure-button-primary&amp;#34;&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>获取令牌&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">form&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后在控制器中完善一点细节，那么一个简单的授权服务器就可以使用了&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/04/09/Ghf6sA.gif" alt="授权" />&lt;/p></description></item><item><title>OAuth2.0简介</title><link>https://chaosalphard.github.io/p/oauth2.0%E7%AE%80%E4%BB%8B/</link><pubDate>Tue, 07 Apr 2020 03:14:56 +0000</pubDate><guid>https://chaosalphard.github.io/p/oauth2.0%E7%AE%80%E4%BB%8B/</guid><description>&lt;h1 id="什么是oauth">什么是OAuth&lt;/h1>
&lt;blockquote>
&lt;p>OAuth(开放授权)是一个开放标准，允许用户让&lt;strong>第三方应用&lt;/strong>访问该用户在某一网站上存储的&lt;strong>私密的资源&lt;/strong>(如照片，视频，联系人列表)，而无需将用户名和密码提供给第三方应用。&lt;/p>
&lt;/blockquote>
&lt;p>举个例子: 用户借助&lt;strong>QQ认证&lt;/strong>去登录&lt;strong>网站A&lt;/strong>，如果认证通过了，就不需要用户手动在网站A注册账户了。&lt;/p>
&lt;p>那么怎么样才算认证通过？网站A成功从QQ获取用户信息则认为认证成功了。那么如何从QQ那里获取用户的身份信息呢？用户信息的拥有者是用户本人，QQ需要经过用户同意才可以为网站A生成令牌，而网站A拿到此令牌才可从QQ获取用户信息。&lt;/p>
&lt;h1 id="oauth的思路">OAuth的思路&lt;/h1>
&lt;blockquote>
&lt;p>OAuth在&amp;quot;第三方应用程序&amp;quot;与&amp;quot;服务提供商&amp;quot;之间，设置了一个授权层(authorization layer)。&amp;ldquo;第三方应用程序&amp;quot;不能直接登录&amp;quot;服务提供商&amp;rdquo;，只能登录授权层，以此将用户与第三方应用程序区分开来。&amp;ldquo;第三方应用程序&amp;quot;登录授权层所用的令牌(token)，与用户的密码不同。用户可以在登录的时候，指定授权层令牌的权限范围和有效期。&lt;/p>
&lt;/blockquote>
&lt;p>&amp;ldquo;第三方应用程序&amp;quot;登录授权层以后，&amp;ldquo;服务提供商&amp;quot;根据令牌的权限范围和有效期，向&amp;quot;第三方应用程序&amp;quot;开放用户储存的资料。&lt;/p>
&lt;h1 id="运行流程">运行流程&lt;/h1>
&lt;ul>
&lt;li>&lt;code>Third-party application&lt;/code>: 第三方应用程序，也可称为&amp;quot;客户端&amp;rdquo;，即例子中的&amp;quot;网站A&amp;rdquo;。它本身不储存资源，需要通过资源所有者的授权去请求资源服务器的资源。&lt;/li>
&lt;li>&lt;code>HTTP service&lt;/code>: HTTP服务提供商，即例子中的QQ。&lt;/li>
&lt;li>&lt;code>Resource Owner&lt;/code>: 资源所有者，也就是用户。&lt;/li>
&lt;li>&lt;code>User Agent&lt;/code>: 用户代理，一般是指浏览器。&lt;/li>
&lt;li>&lt;code>Authorization server&lt;/code>: 认证服务器，即服务提供商用来处理认证的服务器，用于服务提供商对资源拥有者的身份进行认证、对资源访问进行授权、认证成功后给客户端发放令牌(Access Token, 客户端访问资源服务器的凭据)。&lt;/li>
&lt;li>&lt;code>Resource server&lt;/code>: 资源服务器，即服务提供商存放用户资源的服务器。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>认证服务器与资源服务器，它们可以是同一台服务器，也可以是不同的服务器。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://hbimg.huabanimg.com/da0e66ef1c6536b0602a374fff92f85fa8106e562a54-ROlZR6" alt="运行流程" />&lt;/p>
&lt;ol>
&lt;li>用户打开&lt;code>第三方应用程序&lt;/code>以后，&lt;code>第三方应用程序&lt;/code>要求&lt;code>用户&lt;/code>给予授权。&lt;/li>
&lt;li>&lt;code>用户&lt;/code>同意给予&lt;code>第三方应用程序&lt;/code>授权。&lt;/li>
&lt;li>&lt;code>第三方应用程序&lt;/code>使用上一步获得的授权，向&lt;code>认证服务器&lt;/code>申请令牌。&lt;/li>
&lt;li>&lt;code>认证服务器&lt;/code>对&lt;code>第三方应用程序&lt;/code>进行认证以后，确认无误，同意发放令牌。&lt;/li>
&lt;li>&lt;code>第三方应用程序&lt;/code>使用令牌，向&lt;code>资源服务器&lt;/code>申请获取资源。&lt;/li>
&lt;li>&lt;code>资源服务器&lt;/code>确认令牌无误，同意向&lt;code>第三方应用程序&lt;/code>开放资源。&lt;/li>
&lt;li>&lt;code>第三方应用程序&lt;/code>拿到资源后，即可得知认证通过。&lt;/li>
&lt;/ol>
&lt;!-- more -->
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html" target="_blank" rel="noopener"
>理解Oauth2.0&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.cnblogs.com/flashsun/p/7424071.html" target="_blank" rel="noopener"
>一图搞定OAuth2.0&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>SpringSecurity使用注解进行授权控制</title><link>https://chaosalphard.github.io/p/springsecurity%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E8%BF%9B%E8%A1%8C%E6%8E%88%E6%9D%83%E6%8E%A7%E5%88%B6/</link><pubDate>Sat, 04 Apr 2020 02:10:29 +0000</pubDate><guid>https://chaosalphard.github.io/p/springsecurity%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E8%BF%9B%E8%A1%8C%E6%8E%88%E6%9D%83%E6%8E%A7%E5%88%B6/</guid><description>&lt;h1 id="使用注解进行授权控制">使用注解进行授权控制&lt;/h1>
&lt;blockquote>
&lt;p>从&lt;code>SpringSecurity&lt;/code>2.0版本开始，支持服务层方法的安全性支持，目前有&lt;code>@Secured&lt;/code>，&lt;code>@PreAuthorize&lt;/code>，&lt;code>@PostAuthorize&lt;/code>三类注解&lt;/p>
&lt;/blockquote>
&lt;p>在&lt;code>@Configuration&lt;/code>实例上使用&lt;code>@EnableGlobalMethodSecurity&lt;/code>注解来启用基于注解的授权控制&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="c1">// 启用方法授权
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@EnableGlobalMethodSecurity&lt;/span>&lt;span class="o">(&lt;/span>
&lt;span class="c1">// 启用@Secured注解
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">securedEnabled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="c1">// 启用@PreAuthorize和@PostAuthorize注解
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">prePostEnabled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后向方法(类、方法或者接口)添加注解就会限制对该方法的访问&lt;/p>
&lt;h2 id="secured注解">@Secured注解&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">IndexController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// IS_AUTHENTICATED_ANONYMOUSLY: 表示可以匿名访问
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Secured&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;IS_AUTHENTICATED_ANONYMOUSLY&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/r&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">resource&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">getUserName&lt;/span>&lt;span class="o">()+&lt;/span>&lt;span class="s">&amp;#34;访问资源&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// ROLE_USER: 表示需要有USER权限才能访问
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Secured&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;ROLE_USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/r1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">resource1&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">getUserName&lt;/span>&lt;span class="o">()+&lt;/span>&lt;span class="s">&amp;#34;访问资源1&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;h2 id="preauthorize和postauthorize注解">@PreAuthorize和@PostAuthorize注解&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">IndexController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// @PreAuthorize 会在方法执行前进行权限验证
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// isAnonymous() 允许匿名访问
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@PreAuthorize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;isAnonymous()&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/pre/a&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">preAssets&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">getUserName&lt;/span>&lt;span class="o">()+&lt;/span>&lt;span class="s">&amp;#34;访问preAssets&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 拥有USER 权限才可访问
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@PreAuthorize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hasRole(&amp;#39;USER&amp;#39;)&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/pre/a1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">preAssets1&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">getUserName&lt;/span>&lt;span class="o">()+&lt;/span>&lt;span class="s">&amp;#34;访问preAssets1&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// @PostAuthorize 会在方法执行后进行权限验证
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 拥有USER 和ADMIN 任一权限即可访问
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@PostAuthorize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hasAnyRole(&amp;#39;USER&amp;#39;, &amp;#39;ADMIN&amp;#39;)&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/post/a1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">postAssets1&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;访问postAssets1&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">getUserName&lt;/span>&lt;span class="o">()+&lt;/span>&lt;span class="s">&amp;#34;访问postAssets1&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 同时拥有USER 和ADMIN 权限才可访问
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@PostAuthorize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hasRole(&amp;#39;USER&amp;#39;) and hasRole(&amp;#39;ADMIN&amp;#39;)&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/post/a2&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">postAssets2&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;访问postAssets2&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">getUserName&lt;/span>&lt;span class="o">()+&lt;/span>&lt;span class="s">&amp;#34;访问postAssets2&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>SpringSecurity会话管理</title><link>https://chaosalphard.github.io/p/springsecurity%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 03 Apr 2020 01:00:28 +0000</pubDate><guid>https://chaosalphard.github.io/p/springsecurity%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86/</guid><description>&lt;h1 id="在controller中获取认证信息">在Controller中获取认证信息&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Controller&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">IndexController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/user&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">user&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Model&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getUserName&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getUserName&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 获取认证信息
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getAuthentication&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">// 检查用户是否认证
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authentication&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isAuthenticated&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;游客&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">Object&lt;/span> &lt;span class="n">principal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPrincipal&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">principal&lt;/span> &lt;span class="k">instanceof&lt;/span> &lt;span class="n">UserDetails&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">((&lt;/span>&lt;span class="n">UserDetails&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">principal&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">getUsername&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">principal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="会话控制">会话控制&lt;/h1>
&lt;p>在配置类中通过下列选项控制会话何时创建以及Spring Security 如何与之交互&lt;/p>
&lt;ul>
&lt;li>&lt;code>always&lt;/code>: 如果没有session, 则创建一个&lt;/li>
&lt;li>&lt;code>ifRequired&lt;/code>: 如果需要, 则创建一个. (默认)&lt;/li>
&lt;li>&lt;code>never&lt;/code>: Spring Security 不会主动创建session 但如果应用中其他地方创建了session 那么Spring Security 将会使用session&lt;/li>
&lt;li>&lt;code>stateless&lt;/code>: Spring Security 将不会创建session, 也不会使用session&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sessionManagement&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">sessionCreationPolicy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SessionCreationPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">IF_REQUIRED&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>SpringSecurity自定义登录与注销</title><link>https://chaosalphard.github.io/p/springsecurity%E8%87%AA%E5%AE%9A%E4%B9%89%E7%99%BB%E5%BD%95%E4%B8%8E%E6%B3%A8%E9%94%80/</link><pubDate>Tue, 31 Mar 2020 22:34:17 +0000</pubDate><guid>https://chaosalphard.github.io/p/springsecurity%E8%87%AA%E5%AE%9A%E4%B9%89%E7%99%BB%E5%BD%95%E4%B8%8E%E6%B3%A8%E9%94%80/</guid><description>&lt;h1 id="自定义登录页">自定义登录页&lt;/h1>
&lt;p>修改配置&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/index&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/error&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/identify&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/user/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasRole&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">formLogin&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 自定义登录页面地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">loginPage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 指定处理登录请求的url, 即登录表单的action对应的地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">loginProcessingUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/identify/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 成功后默认跳转到的url
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">defaultSuccessUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/user&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 禁用跨域请求验证
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">csrf&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">disable&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>映射路径&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">// RequestMapping 的路径, 即为配置类中loginPage设置的路径
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">login&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;login&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>页面编写&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span> &lt;span class="na">xmlns:th&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.thymeleaf.org&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Login&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- action中的url即为配置类中, loginProcessingUrl项设置的url --&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 登录请求一律用post发送, 不能用get --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">form&lt;/span> &lt;span class="na">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;post&amp;#34;&lt;/span> &lt;span class="na">action&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/identify/login&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Please sign in&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">label&lt;/span> &lt;span class="na">for&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Username&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span> &lt;span class="na">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Username&amp;#34;&lt;/span> &lt;span class="na">required&lt;/span> &lt;span class="na">autofocus&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">label&lt;/span> &lt;span class="na">for&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Password&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span> &lt;span class="na">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Password&amp;#34;&lt;/span> &lt;span class="na">required&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 如果没有在配置类中关闭csrf验证, 则需要在表单中加入下面的表单项 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span class="na">th:if&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${_csrf != null}&amp;#34;&lt;/span> &lt;span class="na">th:name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${_csrf.parameterName}&amp;#34;&lt;/span> &lt;span class="na">th:value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${_csrf.token}&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Sign in&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">form&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;h1 id="自定义注销">自定义注销&lt;/h1>
&lt;p>修改配置&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/index&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/error&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/identify&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/user/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasRole&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">formLogin&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">loginPage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">loginProcessingUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/identify/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">logout&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 指定处理注销请求的url, 即注销表单的action对应的地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">logoutUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/identify/logout&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 指定注销后的跳转页面
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">logoutSuccessUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/index&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 注销时是否一并也让HttpSession 无效化
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">invalidateHttpSession&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">csrf&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">disable&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>映射路径&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/logout&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">logout&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;logout&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>页面编写&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span> &lt;span class="na">xmlns:th&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.thymeleaf.org&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Logout&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">form&lt;/span> &lt;span class="na">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;post&amp;#34;&lt;/span> &lt;span class="na">action&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/identify/logout&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Are you sure?&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 如果没有在配置类中关闭csrf验证, 则需要在表单中加入下面的表单项 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span class="na">th:if&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${_csrf != null}&amp;#34;&lt;/span> &lt;span class="na">th:name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${_csrf.parameterName}&amp;#34;&lt;/span> &lt;span class="na">th:value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${_csrf.token}&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Yes, logout&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">form&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 如果关闭了csrf验证, 则注销请求可用get发送 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/identify/logout&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Logout&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[笔记]SpringCloud学习10: OpenFeign超时配置与日志记录</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A010-openfeign%E8%B6%85%E6%97%B6%E9%85%8D%E7%BD%AE%E4%B8%8E%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95/</link><pubDate>Sun, 29 Mar 2020 22:50:00 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A010-openfeign%E8%B6%85%E6%97%B6%E9%85%8D%E7%BD%AE%E4%B8%8E%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95/</guid><description>&lt;h1 id="设置超时时间">设置超时时间&lt;/h1>
&lt;p>在&lt;code>application.yml&lt;/code>中&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="c"># 设置超时时间&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">ribbon&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指与服务器建立链接的超时时间(单位: ms)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ConnectTimeout&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1000&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指与服务器建立链接之后，从服务器读取到可用资源所花时间&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ReadTimeout&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">5000&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="配置日志输出">配置日志输出&lt;/h1>
&lt;p>&lt;code>OpenFeign&lt;/code>有4个日志级别&lt;/p>
&lt;ul>
&lt;li>&lt;code>NONE&lt;/code>: 不输出任何日志&lt;/li>
&lt;li>&lt;code>BASIC&lt;/code>: 仅记录请求方法、URL、响应状态吗以及执行时间&lt;/li>
&lt;li>&lt;code>HEADERS&lt;/code>: 除了&lt;code>BASIC&lt;/code>中的信息外，还记录请求和响应的头信息&lt;/li>
&lt;li>&lt;code>FULL&lt;/code>: 输出所有信息&lt;/li>
&lt;/ul>
&lt;p>编写配置类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud.config&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">feign.Logger&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.Bean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.Configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">OpenFeignConfig&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">Logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Level&lt;/span> &lt;span class="nf">feignLoggerLevel&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Level&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FULL&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>application.yml&lt;/code>中配置控制台日志输出级别&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">logging&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">level&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">com.ilirus.springcloud.service.PaymentFeignService&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">debug&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[笔记]SpringCloud学习09: OpenFeign服务调用</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A009-openfeign%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8/</link><pubDate>Sun, 29 Mar 2020 03:07:11 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A009-openfeign%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8/</guid><description>&lt;h1 id="feign-简介">Feign 简介&lt;/h1>
&lt;blockquote>
&lt;p>Feign是一个声明式的&lt;code>WebService&lt;/code>客户端。它的出现使开发&lt;code>WebService&lt;/code>客户端变得很简单。使用&lt;code>Feign&lt;/code>只需要创建一个接口加上对应的注解。&lt;/p>
&lt;p>Feign 是一种声明式、模板化的HTTP 客户端。在SpringCloud 中使用Feign，可以做到使用HTTP 请求访问远程服务，就像调用本地方法一样的，开发者完全感知不到这是在调用远程方法，更感知不到在访问HTTP 请求。&lt;/p>
&lt;/blockquote>
&lt;h1 id="feign-和-openfeign">Feign 和 OpenFeign&lt;/h1>
&lt;p>&lt;code>OpenFeign&lt;/code>在&lt;code>Feign&lt;/code>的基础上支持了&lt;code>SpringMVC&lt;/code>的注解。&lt;/p>
&lt;p>在&lt;code>OpenFeign&lt;/code>中，除了自身提供的注解之外，还支持使用&lt;code>JAX-RS&lt;/code>注解，或者&lt;code>SpringMVC&lt;/code>注解。&lt;/p>
&lt;p>&lt;code>OpenFeign&lt;/code>的&lt;code>@FeignClient&lt;/code>注解可以解析&lt;code>SpringMVC&lt;/code>的&lt;code>@RequestMapping&lt;/code>注解下的接口，并通过动态代理的方式产生实现类，实现类中做负载均衡并调用其他服务。&lt;/p>
&lt;p>&lt;code>OpenFeign&lt;/code>同样使用声明式方式定义Web服务客户端，其次，&lt;code>OpenFeign&lt;/code>还可以通过集成&lt;code>Ribbon&lt;/code>或&lt;code>Eureka&lt;/code>来实现负载均衡的HTTP 客户端。&lt;/p>
&lt;!-- more -->
&lt;h1 id="openfeign-的使用">OpenFeign 的使用&lt;/h1>
&lt;p>在服务消费方的&lt;code>pom.xml&lt;/code>中，引入以下依赖&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-starter-openfeign&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建相应的&lt;code>Service&lt;/code>接口&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.springcloud.entities.CommonResult&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.springcloud.entities.Payment&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.openfeign.FeignClient&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.GetMapping&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.PathVariable&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// value为服务提供方在Eureka中注册的名称
&lt;/span>&lt;span class="c1">// RequestMapping为提供方对应的请求地址
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@FeignClient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;irs-provider-payment&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">PaymentFeignService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/payment/query/{id}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">CommonResult&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Payment&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getPaymentByID&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@PathVariable&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建&lt;code>Controller&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud.controller&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.springcloud.entities.CommonResult&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.springcloud.entities.Payment&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.springcloud.enums.Status&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.springcloud.service.PaymentFeignService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">lombok.extern.slf4j.Slf4j&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.*&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.client.RestTemplate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.annotation.Resource&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/consumer&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Slf4j&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">OrderController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Resource&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">PaymentFeignService&lt;/span> &lt;span class="n">paymentFeignService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/payment/query/{id}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">CommonResult&lt;/span> &lt;span class="nf">query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@PathVariable&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">paymentFeignService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPaymentByID&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在启动类中使用&lt;code>@EnableFeignClients&lt;/code>注解&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.springcloud.config.ApplicationontextConfig&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.SpringApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.openfeign.EnableFeignClients&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableFeignClients&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">OrderFeignMain80&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>SpringSecurity简单入门</title><link>https://chaosalphard.github.io/p/springsecurity%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 23 Mar 2020 04:35:18 +0000</pubDate><guid>https://chaosalphard.github.io/p/springsecurity%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8/</guid><description>&lt;h1 id="spring-security-是什么">Spring Security 是什么&lt;/h1>
&lt;p>&lt;code>Spring Security&lt;/code>是一套&lt;strong>认证授权&lt;/strong>框架，支持认证模式如HTTP BASIC 认证头 (基于 IETF RFC-based 标准)，HTTP Digest 认证头 ( IETF RFC-based 标准)，Form-based authentication (用于简单的用户界面)，OpenID 认证等，Spring Security使得当前系统可以快速集成这些验证机制亦或是实现自己的一套验证机制。&lt;/p>
&lt;p>&lt;code>Spring Security&lt;/code>可以对所以进入系统的请求进行拦截，效验每个请求是否能访问对应的资源。&lt;/p>
&lt;h1 id="spring-security-如何工作">Spring Security 如何工作&lt;/h1>
&lt;p>&lt;code>Spring Security&lt;/code>对Web 资源的保护是靠&lt;code>Filter&lt;/code>来实现的，当初始化&lt;code>Spring Security&lt;/code>时，会创建一个名为&lt;code>SpringSecurityFilterChain&lt;/code>的过滤器，类型为&lt;code>org.springframework.security.web.FilterChainProxy&lt;/code>，它实现了&lt;code>javax.servlet.Filter&lt;/code>，因此外部的请求都会经过这个过滤器。&lt;/p>
&lt;p>&lt;code>SpringSecurityFilterChain&lt;/code>中包含的各个&lt;code>Filter&lt;/code>都作为&lt;code>Bean&lt;/code>被&lt;code>Spring&lt;/code>所管理，他们是&lt;code>Spring Security&lt;/code>的核心，各司其职，但这些&lt;code>Filter&lt;/code>并不直接处理用户的认证，也不直接处理用户的授权，而出把这些工作交给&lt;strong>认证管理器&lt;/strong>(AuthenticationManager)和&lt;strong>决策管理器&lt;/strong>(AccessDecisionManager)进行处理。&lt;/p>
&lt;h1 id="认证流程">认证流程&lt;/h1>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/03/28/GFBovV.png" alt="SpringSecurity认证流程" />&lt;/p>
&lt;!-- more -->
&lt;h1 id="引入依赖">引入依赖&lt;/h1>
&lt;p>在&lt;code>pom.xml&lt;/code>中写入以下依赖&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-security&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.security&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-security-test&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span class="nt">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="编写配置">编写配置&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.oauth.config&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.security.config.annotation.web.builders.HttpSecurity&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.security.config.annotation.web.configuration.EnableWebSecurity&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AuthenticationManagerBuilder&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 在内存中创建用户
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">inMemoryAuthentication&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 使用BCryptPasswordEncoder 加密密码
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">passwordEncoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">BCryptPasswordEncoder&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="c1">// 用户名为 user
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">withUser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 密码为 123
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">password&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">BCryptPasswordEncoder&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">encode&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;123&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="c1">//拥有 USER 权限
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">roles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 匹配&amp;#34;/&amp;#34;,&amp;#34;/index&amp;#34;,&amp;#34;/error&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/index&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/error&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 不需要权限即可访问
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 匹配&amp;#34;/user&amp;#34; 路径下的所有
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/user/**&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 拥有USER 权限才可访问
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">hasRole&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/admin/**&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">hasRole&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;ADMIN&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 允许使用表单登录
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">formLogin&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 自定义登录页面地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">loginPage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 指定处理登录的url, 即登录表单的action对应的地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">loginProcessingUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login/identify&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 成功后默认跳转到&amp;#34;/user&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">defaultSuccessUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/user&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">logout&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 自定义注销地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">logoutUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/logout&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 注销后跳转到 &amp;#34;/login&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">logoutSuccessUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">// 注销时是否让HttpSession 无效化
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">invalidateHttpSession&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// 禁用跨域请求验证
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">csrf&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">disable&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果不想关闭&lt;code>CSRF&lt;/code>保护，则需要在自定义的登录表单中添加如下代码&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">input&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span class="na">th:if&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${_csrf != null}&amp;#34;&lt;/span> &lt;span class="na">th:name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${_csrf.parameterName}&amp;#34;&lt;/span> &lt;span class="na">th:value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${_csrf.token}&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>至此，一个最简单的SpringSecurity 验证就引入到了demo 中&lt;/p>
&lt;h2 id="使用userdetailsmanager创建用户">使用&lt;code>UserDetailsManager&lt;/code>创建用户:&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">UserDetailsService&lt;/span> &lt;span class="nf">userDetailsService&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">InMemoryUserDetailsManager&lt;/span> &lt;span class="n">manager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">InMemoryUserDetailsManager&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">manager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createUser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">User&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">password&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;123&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">roles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">manager&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">// 密码编码器
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">PasswordEncoder&lt;/span> &lt;span class="nf">passwordEncoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// NoOpPasswordEncoder: 不进行编码
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">NoOpPasswordEncoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="连接数据库">连接数据库&lt;/h1>
&lt;p>修改之前的配置类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">PasswordEncoder&lt;/span> &lt;span class="nf">passwordEncoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 密码编码器
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">BCryptPasswordEncoder&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/index&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/error&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/user/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasRole&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">formLogin&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>自定义一个service，继承&lt;code>UserDetailsService&lt;/code>类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.oauth.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.oauth.dao.UserDao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.oauth.entities.UserEntity&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.security.core.userdetails.User&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">lombok.extern.slf4j.Slf4j&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.security.core.userdetails.UserDetails&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.security.core.userdetails.UserDetailsService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.security.core.userdetails.UsernameNotFoundException&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.stereotype.Service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.annotation.Resource&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Service&lt;/span>
&lt;span class="nd">@Slf4j&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserService&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">UserDetailsService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Resource&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">UserDao&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">UserDetails&lt;/span> &lt;span class="nf">loadUserByUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">UsernameNotFoundException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Username: &amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 数据库查询
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">UserEntity&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">UserDetails&lt;/span> &lt;span class="n">userDetails&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">password&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPassword&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">roles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">userDetails&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>loadUserByUsername&lt;/code>方法中的参数即为登录表单中的用户名，在数据库中查询到对应用户的信息后，将其装入&lt;code>UserDetails&lt;/code>中，然后返回给&lt;code>DaoAuthenticationProvider&lt;/code>。&lt;/p>
&lt;p>&lt;code>DaoAuthenticationProvider&lt;/code>会使用&lt;code>PasswordEncoder&lt;/code>对用户提交的表单中的密码进行编码，然后将其与从&lt;code>UserDetailService&lt;/code>中接收到的UserDetail 中的密码信息进行对比，以判断是否通过。&lt;/p></description></item><item><title>[笔记]SpringCloud学习08: Ribbon基础</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A008-ribbon%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 Mar 2020 03:44:07 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A008-ribbon%E5%9F%BA%E7%A1%80/</guid><description>&lt;h1 id="ribbon-介绍">Ribbon 介绍&lt;/h1>
&lt;blockquote>
&lt;p>&lt;code>Ribbon&lt;/code>是&lt;code>Netflix&lt;/code>发布的一款用于负载均衡的开源项目，是一个客户端的负载均衡器。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>Ribbon&lt;/code>会基于某些规则(轮询，随机等)决定要调用的服务链接，并且可以使用&lt;code>Ribbon&lt;/code>实现自定义的负载均衡算法。&lt;/p>
&lt;h2 id="负载均衡是什么">负载均衡是什么&lt;/h2>
&lt;p>负载均衡(Load Balance)简单来说就是将用户的请求平摊到各个服务器上，从而提高服务的承载能力。&lt;/p>
&lt;h2 id="ribbon-本地负载均衡和nginx-服务端负载均衡的区别">Ribbon 本地负载均衡和Nginx 服务端负载均衡的区别&lt;/h2>
&lt;p>Nginx: 客户端所有请求都先发给Nginx，让后由Nginx 服务器实现请求转发。(集中式LB)&lt;/p>
&lt;p>Ribbon: 在调用微服务接口的时候，由Ribbon 的负载均衡算法决定调用哪个服务接口。(进程内LB)&lt;/p>
&lt;h2 id="集中式lb-和进程内lb">集中式LB 和进程内LB&lt;/h2>
&lt;p>集中式Load Balancer: 在服务的消费方和提供方之间使用独立的LB 设施，由该设施负责把请求访问通过某种策略转发制服务提供方&lt;/p>
&lt;p>进程内Load Balancer: 将LB 逻辑集成到消费方，消费方从服务注册中心获知有那些服务地址可用，然后自己再从这些地址中选择一个合适的服务器&lt;/p>
&lt;!-- more -->
&lt;h1 id="ribbon-引入">Ribbon 引入&lt;/h1>
&lt;p>修改&lt;code>pom.xml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-starter-netflix-ribbon&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 版本从父工程的dependencyManagement中继承, 故此处不用写 --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Ribbon&lt;/code>已经集成在&lt;code>Eureka Client&lt;/code>中，如果&lt;code>pom.xml&lt;/code>中已经引入&lt;code>Eureka Client&lt;/code>，则可以不用再引入&lt;code>Ribbon&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-starter-netflix-eureka-client&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ribbon-的使用">Ribbon 的使用&lt;/h1>
&lt;p>使用&lt;code>@LoadBalancer&lt;/code>注解授予&lt;code>RestTemplate&lt;/code>负载均衡功能，&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ApplicationontextConfig&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="nd">@LoadBalanced&lt;/span> &lt;span class="c1">// 授予restTemplate负载均衡能力
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">public&lt;/span> &lt;span class="n">RestTemplate&lt;/span> &lt;span class="nf">getRestTemplate&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RestTemplate&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>@Resource&lt;/code>或者&lt;code>@Autowired&lt;/code> 装配具有负载均衡能力的&lt;code>RestTemplate&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestController&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/test&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TestController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">TEST_URL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;http://irs-provider-test/test&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Resource&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">RestTemplate&lt;/span> &lt;span class="n">restTemplate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/get&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">CommonResult&lt;/span> &lt;span class="nf">get&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// restTemplate 现在已经具有了负载均衡能力
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">restTemplate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getForObject&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TEST_URL&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s">&amp;#34;/get&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CommonResult&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ribbon-默认算法介绍">Ribbon 默认算法介绍&lt;/h1>
&lt;ul>
&lt;li>&lt;code>RoundRobinRule&lt;/code>: 轮询&lt;/li>
&lt;li>&lt;code>RandomRule&lt;/code>: 随机&lt;/li>
&lt;li>&lt;code>RetryRule&lt;/code>: 先按照&lt;code>RoundRobinRule&lt;/code>策略获取服务，如果获取服务失败会在指定时间内重试&lt;/li>
&lt;li>&lt;code>WeightedResponseTimeRule&lt;/code>: 根据平均响应时间计算所有服务的权重，响应时间越快服务权重越大。如果统计信息不足，则使用&lt;code>RoundRobinRule&lt;/code>策略。等信息足够，则切换到&lt;code>WeightedResponseTimeRule&lt;/code>策略&lt;/li>
&lt;li>&lt;code>ZoneAvoidanceRule&lt;/code>: 复合判断 服务所在的区域的性能 和 服务的可用性 以选择服务器&lt;/li>
&lt;li>&lt;code>BestAvailableRule&lt;/code>: 会先过滤掉由于多次访问故障而处于断路器跳闸状态的服务，然后选择一个并发量最小的服务&lt;/li>
&lt;li>&lt;code>AvaliabilityFilteringRule&lt;/code>: 会先过滤由于多次访问故障而处于断路器跳闸的状态的服务 和 并发的连接数量超过阈值的服务，然后对剩余的服务列表进行轮询&lt;/li>
&lt;/ul>
&lt;h1 id="ribbon-负载规则替换">Ribbon 负载规则替换&lt;/h1>
&lt;blockquote>
&lt;p>如果多个&lt;code>Ribbon&lt;/code>客户端需要配置负载规则，则自定义配置类不能放在&lt;code>@ComponentScan&lt;/code>所能扫描到的包下，否则自定义配置类会被所有的&lt;code>Ribbon&lt;/code>共享，达不到定制的目的。&lt;/p>
&lt;/blockquote>
&lt;p>创建自定义配置类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">LoadBalancerRuleConfig&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">IRule&lt;/span> &lt;span class="nf">LBRule&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 定义负载均衡规则
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RandomRule&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在启动类中加上&lt;code>@RibbonClient注解&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableEurekaClient&lt;/span>
&lt;span class="c1">// 这里的name 指的是服务提供方的name
&lt;/span>&lt;span class="c1">// 即当前消费方使用自定义配置与其通信的服务提供方的 spring.application.name 的属性
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@RibbonClient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;irs-provider-payment&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="n">LoadBalancerRuleConfig&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">OrderMain80&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">OrderMain80&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[笔记]SpringCloud学习07: Eureka自我保护</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A007-eureka%E8%87%AA%E6%88%91%E4%BF%9D%E6%8A%A4/</link><pubDate>Fri, 20 Mar 2020 03:02:19 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A007-eureka%E8%87%AA%E6%88%91%E4%BF%9D%E6%8A%A4/</guid><description>&lt;h1 id="eureka-自我保护机制">Eureka 自我保护机制&lt;/h1>
&lt;p>保护模式主要用于一组客户端和服务端之间存在网络分区场景下的保护，一旦进入&lt;code>保护模式&lt;/code>，&lt;code>Eureka Server&lt;/code>会尝试保护其服务注册表中的信息，将&lt;strong>不再删除&lt;/strong>服务注册表中的信息，也就是&lt;strong>不会注销任何微服务&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>一句话概括: 如果某一时刻，&lt;code>Eureka Server&lt;/code>中某个微服务不可用了，&lt;code>Eureka&lt;/code>不会立即清除，而是会尝试对该微服务的信息进行保存 (CAP中的AP)&lt;/p>
&lt;/blockquote>
&lt;h1 id="为什么需要自我保护机制">为什么需要自我保护机制&lt;/h1>
&lt;blockquote>
&lt;p>为了防止&lt;code>Eureka Client&lt;/code>可以正常运行，但与&lt;code>Eureka Server&lt;/code>直接网络不同的情况下，&lt;code>Eureka Server&lt;/code>错误地将可以正常运行的&lt;code>Client&lt;/code>端移除&lt;/p>
&lt;/blockquote>
&lt;p>默认情况下，如果&lt;code>Eureka Server&lt;/code>在一定时间内(默认90s)没有接收到某个服务实例的心跳时，&lt;code>Eureka Server&lt;/code>会注销该实例。但当网络分区故障发生时(延时，拥挤)，微服务与&lt;code>Eureka Server&lt;/code>之间无法正常通讯时，超时移除节点是不正确的行为——微服务自身很可能是正常状态，也就是说不应该注销此服务。&lt;/p>
&lt;p>&lt;code>Eureka&lt;/code>通过&lt;code>自我保护模式&lt;/code>来解决这个问题——当&lt;code>Eureka Server&lt;/code>短时间内丢失过多&lt;code>Client&lt;/code>端时，那么这个节点将进入自我保护模式。&lt;/p>
&lt;p>也就是说宁可保留错误的服务注册信息，也不会盲目注销任何可能正常的服务实例&lt;/p>
&lt;h1 id="如何判断eureka-是否进入了自我保护模式">如何判断Eureka 是否进入了自我保护模式&lt;/h1>
&lt;p>如果在&lt;code>Eureka Server&lt;/code>首页看到以下提示，则说明&lt;code>Eureka&lt;/code>进入了保护模式&lt;/p>
&lt;blockquote>
&lt;p>&lt;span style="color:#D88">EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY&amp;rsquo;RE NOT. RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE.&lt;/span>&lt;/p>
&lt;/blockquote>
&lt;!-- more -->
&lt;h1 id="如何禁止自我保护机制">如何禁止自我保护机制&lt;/h1>
&lt;p>在Erueka Server 端的&lt;code>application.yml&lt;/code>文件中，添加以下内容&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 关闭自我保护机制&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enable-self-preservation&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 移除服务的超时时间，单位毫秒&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">eviction-interval-timer-in-ms&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">15000&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在Eureka Client 端的&lt;code>application.yml&lt;/code>文件中，添加以下内容&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># eureka 客户端&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">instance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Eureka Client 端向Server 端发送心跳的时间间隔，单位秒，默认30s&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 修改心跳时间主要是因为修改了Server 端的超时时间(15000ms = 15s)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 所以对应的修改Client 端的心跳时间&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lease-renewal-interval-in-seconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Eureka Server 端在收到最后一次心跳后等待时间上限，单位秒，超时将剔除服务，默认90s&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lease-expiration-duration-in-seconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">15&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[笔记]SpringCloud学习06: Eureka服务发现</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A006-eureka%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</link><pubDate>Fri, 20 Mar 2020 02:03:59 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A006-eureka%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</guid><description>&lt;h1 id="获取eureka-server-端注册成功的服务信息">获取Eureka Server 端注册成功的服务信息&lt;/h1>
&lt;blockquote>
&lt;p>对于注册进&lt;code>Eureka&lt;/code>里面的微服务，可以通过&lt;strong>服务发现&lt;/strong>来获取该服务的信息&lt;/p>
&lt;/blockquote>
&lt;p>修改对应工程(Eureka Client 端)的Controller&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud.controller&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.springcloud.entities.CommonResult&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.ilirus.springcloud.enums.Status&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">lombok.extern.slf4j.Slf4j&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.client.ServiceInstance&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.client.discovery.DiscoveryClient&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.*&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.annotation.Resource&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.List&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/payment&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Slf4j&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">PaymentController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Resource&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DiscoveryClient&lt;/span> &lt;span class="n">discoveryClient&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/discovery&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">CommonResult&lt;/span> &lt;span class="nf">discovery&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">services&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">discoveryClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getServices&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">CommonResult&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">SUCCESS&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/discovery/{instances}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">CommonResult&lt;/span> &lt;span class="nf">discovery&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@PathVariable&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">instances&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ServiceInstance&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">serviceInstances&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">discoveryClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getInstances&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">instances&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">CommonResult&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">SUCCESS&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">serviceInstances&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;p>修改启动类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.mybatis.spring.annotation.MapperScan&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.SpringApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.client.discovery.EnableDiscoveryClient&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.netflix.eureka.EnableEurekaClient&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@MapperScan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;com.ilirus.springcloud.dao&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@EnableEurekaClient&lt;/span>
&lt;span class="nd">@EnableDiscoveryClient&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">PaymentMain8001&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s1.ax1x.com/2020/03/20/86aIns.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/03/20/86aoBn.png" alt="" />&lt;/p></description></item><item><title>[笔记]SpringCloud学习05: 服务提供方集群</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A005-%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E6%96%B9%E9%9B%86%E7%BE%A4/</link><pubDate>Thu, 19 Mar 2020 22:02:13 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A005-%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E6%96%B9%E9%9B%86%E7%BE%A4/</guid><description>&lt;h1 id="服务提供方集群搭建">服务提供方集群搭建&lt;/h1>
&lt;p>参考之前搭建好的服务提供方工程，再创建一个新的工程，要注意&lt;code>application.yml&lt;/code>中，&lt;code>spring.application.name&lt;/code>属性要和之前的一致，完成后启动服务&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/03/19/86S86P.png" alt="eureka" />&lt;/p>
&lt;!-- more -->
&lt;h1 id="服务消费方请求地址修改">服务消费方请求地址修改&lt;/h1>
&lt;p>在消费方工程中，将请求地址改为微服务名称&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud.controller&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="cm">/* import ... */&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/consumer&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Slf4j&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">OrderController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">PAYMENT_URL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;http://irs-provider-payment/payment&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Resource&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">RestTemplate&lt;/span> &lt;span class="n">restTemplate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/payment/create&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">CommonResult&lt;/span> &lt;span class="nf">create&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Payment&lt;/span> &lt;span class="n">payment&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">restTemplate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">postForObject&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">PAYMENT_URL&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s">&amp;#34;/create&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">payment&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CommonResult&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="cm">/* ... */&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>因为目前&lt;code>irs-provider-payment&lt;/code>服务下有两个实例，直接使用服务名并不能让程序知道你想用具体哪一个，所以还需要进一步配置&lt;/p>
&lt;h1 id="resttemplate-配置负载均衡">RestTemplate 配置负载均衡&lt;/h1>
&lt;p>修改&lt;code>RestTemplate&lt;/code>配置类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud.config&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.client.loadbalancer.LoadBalanced&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.Bean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.Configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.client.RestTemplate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ApplicationContextConfig&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="nd">@LoadBalanced&lt;/span> &lt;span class="c1">// 授予restTemplate负载均衡能力
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">public&lt;/span> &lt;span class="n">RestTemplate&lt;/span> &lt;span class="nf">getRestTemplate&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RestTemplate&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>至此，全部配置完成&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/03/19/86kUKA.gif" alt="负载均衡" />&lt;/p></description></item><item><title>[笔记]SpringCloud学习04: Eureka集群</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A004-eureka%E9%9B%86%E7%BE%A4/</link><pubDate>Tue, 17 Mar 2020 23:33:16 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A004-eureka%E9%9B%86%E7%BE%A4/</guid><description>&lt;h1 id="eureka-集群原理">Eureka 集群原理&lt;/h1>
&lt;p>我们假设有三台 Eureka Server 组成的集群，只要三个地方的任意一个Eureka Server不出现问题，都不会影响整个架构的稳定性。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/03/19/8yJLwT.jpg" alt="Eureka集群" />&lt;/p>
&lt;p>从图中可以看出&lt;code>Eureka Server&lt;/code>集群相互之间通过&lt;code>Replicate&lt;/code>来同步数据，相互之间不区分主节点和从节点，所有的节点都是平等的。在这种架构中，节点通过&lt;strong>彼此互相注册&lt;/strong>来提高可用性，每个节点需要添加一个或多个有效的serviceUrl 指向其他节点。&lt;/p>
&lt;p>如果某台Eureka Server 宕机，Eureka Client 的请求会自动切换到新的Eureka Server 节点。当宕机的服务器重新恢复后，Eureka 会再次将其纳入到服务器集群管理之中。当节点开始接受客户端请求时，所有的操作都会进行节点间复制，将请求复制到其它Eureka Server 当前所知的所有节点中。&lt;/p>
&lt;p>另外Eureka Server 的同步遵循着一个非常简单的原则：只要有一条边将节点连接，就可以进行信息传播与同步。所以，如果存在多个节点，只需要将节点之间两两连接起来形成通路，那么其它注册中心都可以共享信息。每个Eureka Server 同时也是Eureka Client，多个Eureka Server 之间通过&lt;code>P2P&lt;/code>的方式完成服务注册表的同步。&lt;/p>
&lt;p>Eureka Server 集群之间的状态是采用异步方式同步的，所以不保证节点间的状态一定是一致的，不过基本能保证最终状态是一致的。&lt;/p>
&lt;p>Eureka保证AP (CAP原则又称CAP定理，指的是在一个分布式系统中，一致性(Consistency)、可用性(Availability)、分区容错性(Partition tolerance))&lt;/p>
&lt;p>Eureka Server 各个节点都是平等的，几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而Eureka Client 在向某个Eureka 注册时，如果发现连接失败，则会自动切换至其它节点。只要有一台Eureka Server 还在，就能保证注册服务可用(保证可用性)，只不过查到的信息可能不是最新的(不保证强一致性)。&lt;/p>
&lt;!-- more -->
&lt;h1 id="eureka-集群搭建">Eureka 集群搭建&lt;/h1>
&lt;p>新建一个Eureka Server，并修改&lt;code>application.yml&lt;/code>文件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">7002&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">instance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hostname&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">eureka7002.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">register-with-eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">feth-registry&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">service-url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 相互注册&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">defaultZone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://eureka7001.com:7001/eureka/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改之前的单机eureka配置文件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">7001&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">instance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hostname&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">eureka7001.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">register-with-eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">feth-registry&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">service-url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 相互注册&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">defaultZone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://eureka7002.com:7002/eureka/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>因为是在同一台机器上，所以需要修改host文件将&lt;code>eureka7001.com&lt;/code>和&lt;code>eureka7002.com&lt;/code>映射为&lt;code>127.0.0.1&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h1 id="微服务注册进集群">微服务注册进集群&lt;/h1>
&lt;p>回到之前的子工程中，修改&lt;code>application.yml&lt;/code>文件中的eureka配置&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># eureka 客户端&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">register-with-eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-registry&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">service-url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 服务中心链接&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">defaultZone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动服务，查看是否正确
&lt;img src="https://s1.ax1x.com/2020/03/19/8y5eZ6.png" alt="集群" />&lt;/p></description></item><item><title>[笔记]SpringCloud学习03: Eureka的搭建</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A003-eureka%E7%9A%84%E6%90%AD%E5%BB%BA/</link><pubDate>Mon, 16 Mar 2020 00:36:52 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A003-eureka%E7%9A%84%E6%90%AD%E5%BB%BA/</guid><description>&lt;h1 id="eureka-server端的搭建">Eureka Server端的搭建&lt;/h1>
&lt;p>创建一个&lt;code>Maven&lt;/code>项目，在&lt;code>pom.xml&lt;/code>中写入以下依赖:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-starter-netflix-eureka-server&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 版本从父工程的dependencyManagement中继承, 故此处不用写 --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建启动类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.SpringApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.netflix.eureka.server.EnableEurekaServer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableEurekaServer&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">EurekaServerMain7001&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">EurekaServerMain7001&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置&lt;code>yml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">7001&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># eureka 服务端&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">instance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hostname&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">localhost&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># eureka服务端实例名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">register-with-eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 是否向服务中心注册自己&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">feth-registry&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 是否向服务中心检索已有的注册信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">service-url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 设置Eureka Server 的交互地址。查询服务和注册服务都需要依赖这个地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">defaultZone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://${eureka.instance.hostname}:${server.port}/eureka/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动工程并查看是否有误&lt;/p>
&lt;!-- more -->
&lt;h1 id="eureka-client端的注册">Eureka Client端的注册&lt;/h1>
&lt;p>回到之前的子项目中，向&lt;code>pom.xml&lt;/code>中添加以下依赖&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-starter-netflix-eureka-client&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改&lt;code>application.yml&lt;/code>文件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">spring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">application&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">irs-provider-payment8001&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># eureka 客户端&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">register-with-eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 向服务中心注册自己&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-registry&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 向服务中心获取已有的注册信息, 集群必须设置为true才能配合ribbon使用负载均衡&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">service-url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 服务中心链接&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">defaultZone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://localhost:7001/eureka&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改启动类并添加&lt;code>@EnbaleEurekaClient&lt;/code>注解&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.ilirus.springcloud&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.mybatis.spring.annotation.MapperScan&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.SpringApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.netflix.eureka.EnableEurekaClient&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@MapperScan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;com.ilirus.springcloud.dao&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@EnableEurekaClient&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">PaymentMain8001&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动工程，刷新eureka管理网页，查看服务是否成功注册服务中心
&lt;img src="https://s1.ax1x.com/2020/03/16/88qHv4.jpg" alt="管理页面" />&lt;/p>
&lt;h1 id="微服务显示信息完善">微服务显示信息完善&lt;/h1>
&lt;p>在对应工程中(Eureka Client 端)的&lt;code>application.yml&lt;/code>文件中添加以下内容&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">eureka&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">instance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 实例的显示id&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">instance-id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">projectName&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 显示ip地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">prefer-ip-address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[笔记]SpringCloud学习02: Eureka基础</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A002-eureka%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 14 Mar 2020 03:28:00 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A002-eureka%E5%9F%BA%E7%A1%80/</guid><description>&lt;h1 id="什么是服务治理">什么是服务治理&lt;/h1>
&lt;p>当我们的服务与服务之间通讯调用的时候，如果简单粗暴的用httpclient去请求，不经过第三方的组件管理，然后访问路径写死，那么如果有一个服务更换了路径，所有的服务都需要手动更换该服务的访问路径。维护的成本很高。&lt;/p>
&lt;p>就是因为出现了这些问题，所以引入了服务治理(SOA governance)这个概念，同时衍生了这类的实现组件，也就是注册中心。典型的代表：zookeeper，Eureka，Consul。服务治理也引入了 服务调用、负载均衡、容错等功能。&lt;/p>
&lt;blockquote>
&lt;p>简单的总结：把服务看成一个地方。当我们服务调用的时候，就是从一个地方到另一个地方，这时候我们需要地图导航才能到达，当我们去的路程有一段路可能修路，无法通过的时候，导航就会帮我们规划另一条路线。这里的导航就是注册中心，会一定的时间就会刷新一下路况，就好像我们注册中心 (Erueka为例) 每隔30秒就会刷新一下服务的地址。&lt;/p>
&lt;/blockquote>
&lt;h1 id="eureka设计">Eureka设计&lt;/h1>
&lt;p>&lt;code>Eureka&lt;/code>采用了CS的设计构架，&lt;code>Eureka Server&lt;/code>作为服务注册功能的服务器，它是服务注册中心。而系统中的其他微服务，使用&lt;code>Eureka&lt;/code>的客户端连接到&lt;code>Eureka Server&lt;/code>中心并维持&lt;code>心跳连接&lt;/code>。这样系统的维护人员就可以通过&lt;code>Eureka Server&lt;/code>来监控系统中各个微服务是否运行正常。&lt;/p>
&lt;p>当服务器(服务提供方)启动的时候，会把当前自己服务器的信息(服务地址、通信地址等)以别名的方式注册到注册中心上。另一方(服务消费方)以该别名的方式去注册中心上获取到实际的服务器通讯地址，然后再实现本地RPC调用远程RPC。调用框架核心在于注册中心，注册中心管理每个服务与服务间的依赖关系(服务治理)，也就是说，在任何RPC远程框架中，都会有一个注册中心。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/03/14/8MtKwd.jpg" alt="Eureka" />&lt;/p>
&lt;ul>
&lt;li>Eureka Server: 提供服务注册和发现，多个Eureka Server之间会同步数据，做到状态一致(最终一致性)&lt;/li>
&lt;li>Service Provider: 服务提供方，将自身服务注册到Eureka，从而使服务消费方能够找到&lt;/li>
&lt;li>Service Consumer: 服务消费方，从Eureka获取注册服务列表，从而能够消费服务&lt;/li>
&lt;/ul>
&lt;!-- ![Dubbo](https://s1.ax1x.com/2020/03/14/8MtueH.jpg) -->
&lt;!-- more -->
&lt;h1 id="eureka组件">Eureka组件&lt;/h1>
&lt;p>&lt;code>Eureka&lt;/code>包含两个组件：&lt;code>Eureka Server&lt;/code>和&lt;code>Eureka Client&lt;/code>&lt;/p>
&lt;h2 id="eureka-server">Eureka Server&lt;/h2>
&lt;p>&lt;code>Eureka Server&lt;/code>提供注册服务，各个微服务节点通过配置启动后，会在&lt;code>Eureka Server&lt;/code>中进行注册，这样&lt;code>Eureka Server&lt;/code>中的服务注册表会储存所有可用服务节点的信息，服务节点的信息可在管理界面中直观的看到。&lt;/p>
&lt;p>&lt;strong>&lt;code>Eureka Server&lt;/code> 同时也是一个&lt;code>Eureka Client&lt;/code>&lt;/strong> 在不禁止Eureka Server的客户端行为时，它会向它配置文件中的其他Eureka Server 进行拉取注册表、服务注册和发送心跳等操作。&lt;/p>
&lt;h2 id="eureka-client">Eureka Client&lt;/h2>
&lt;p>&lt;code>Eureka Client&lt;/code> 可向注册中心进行访问来获取服务提供方通讯地址。在启动后，&lt;code>Eureka Client&lt;/code>将会向&lt;code>Eureka Server&lt;/code>发送心跳(默认间隔为30s)。如果&lt;code>Eureka Server&lt;/code>在多个心跳周期内没有接收到某个节点的心跳，&lt;code>Eureka Server&lt;/code>则会将该节点从服务器注册表中移除(默认90s)。&lt;/p>
&lt;h3 id="服务提供方">服务提供方&lt;/h3>
&lt;ul>
&lt;li>启动后，向注册中心发起&lt;code>register&lt;/code>请求，注册服务&lt;/li>
&lt;li>在运行过程中，定时向注册中心发送&lt;code>renew&lt;/code>心跳，证明&amp;quot;我还活着&amp;quot;&lt;/li>
&lt;li>停止服务提供者，向注册中心发起&lt;code>cancel&lt;/code>请求，清空当前服务注册信息&lt;/li>
&lt;/ul>
&lt;h3 id="服务消费方">服务消费方&lt;/h3>
&lt;ul>
&lt;li>启动后，从注册中心拉取服务注册信息&lt;/li>
&lt;li>在运行过程中，定时更新服务注册信息&lt;/li>
&lt;li>发起向服务提供方远程调用时&lt;/li>
&lt;/ul></description></item><item><title>Maven中dependencyManagement元素的使用</title><link>https://chaosalphard.github.io/p/maven%E4%B8%ADdependencymanagement%E5%85%83%E7%B4%A0%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 12 Mar 2020 17:16:24 +0000</pubDate><guid>https://chaosalphard.github.io/p/maven%E4%B8%ADdependencymanagement%E5%85%83%E7%B4%A0%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;h1 id="dependencymanagement元素的使用">dependencyManagement元素的使用&lt;/h1>
&lt;p>使用&lt;code>dependencyManagement&lt;/code>元素能让所有在子项目中引用一个依赖而不用显式的列出版本号，Maven会沿父子层&lt;strong>向上&lt;/strong>查找，直到找到一个拥有&lt;code>dependencyManagement&lt;/code>元素的项目，然后它就会使用这个&lt;code>dependencyManagement&lt;/code>中指定的版本号&lt;/p>
&lt;p>例如在父项目中:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependencyManagement&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>8.0.14&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencyManagement&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在子项目里:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样做的好处是，如果多个子项目都引用同一个依赖，则可以统一对子项目依赖进行管理版本&lt;/p>
&lt;!-- more -->
&lt;blockquote>
&lt;p>如果某个子项目需要另一个版本，那么只需要在那个子项目依赖中声明version即可&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>5.1.48&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>父项目中的&lt;code>dependencyManagement&lt;/code>里只是&lt;strong>声明&lt;/strong>依赖，&lt;strong>并不实现引入&lt;/strong>，因此子项目需要显式声明需要用的依赖。
&lt;ul>
&lt;li>如果需要所有子项目都继承某个依赖，则需要在父项目中使用&lt;code>dependencies&lt;/code>，需要注意的是&lt;code>dependencies&lt;/code>要放在&lt;code>dependencyManagement&lt;/code>上方&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果&lt;strong>不在&lt;/strong>子项目中声明依赖，则&lt;strong>不会&lt;/strong>从父项目中继承，只有在子项目中声明了依赖，且没有指定具体版本，才会从父项目中继承，并且&lt;code>version&lt;/code>和&lt;code>scope&lt;/code>都读取自父pom文件&lt;/li>
&lt;li>如果子项目中指定了版本号，那么会使用子项目中指定的jar版本&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>[笔记]SpringCloud学习01: 项目的搭建</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A001-%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%90%AD%E5%BB%BA/</link><pubDate>Thu, 12 Mar 2020 00:55:33 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A001-%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%90%AD%E5%BB%BA/</guid><description>&lt;h1 id="建立项目">建立项目&lt;/h1>
&lt;h2 id="父工程的创建">父工程的创建&lt;/h2>
&lt;p>IDEA: Create New Project -&amp;gt; Maven -&amp;gt; 输入groupid和artifactId -&amp;gt; 完成&lt;/p>
&lt;p>之后在IDEA设置中还有几个地方要设置:&lt;/p>
&lt;ul>
&lt;li>Build选项中的Compiler选项中的&lt;code>Annotation Processing&lt;/code>目录中，在&lt;code>Enable annotation processing&lt;/code>选项前打勾&lt;/li>
&lt;li>Build选项中的Compiler选项中的&lt;code>Java Compiler&lt;/code>目录中，将&lt;code>Target bytecode version&lt;/code> 选为&lt;code>8&lt;/code>&lt;/li>
&lt;li>(可选)Editor选项中的&lt;code>File Types&lt;/code>目录中，将&lt;code>*.iml;*.idea;&lt;/code> 添加到&lt;code>Ignore files and patterns&lt;/code>中，这是用于在IDEA资源管理器中隐藏对应后缀的文件&lt;/li>
&lt;/ul>
&lt;p>修改&lt;code>pom.xml&lt;/code>文件，在&lt;code>version&lt;/code>下添加&lt;code>&amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.ilirus.springcloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>irscloud&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0-SNAPSHOT&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;packaging&amp;gt;&lt;/span>pom&lt;span class="nt">&amp;lt;/packaging&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;p>修改&lt;code>properties&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span>UTF-8&lt;span class="nt">&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;maven.compiler.source&amp;gt;&lt;/span>1.8&lt;span class="nt">&amp;lt;/maven.compiler.source&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;maven.compiler.target&amp;gt;&lt;/span>1.8&lt;span class="nt">&amp;lt;/maven.compiler.target&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;junit.version&amp;gt;&lt;/span>4.12&lt;span class="nt">&amp;lt;/junit.version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;log4j.version&amp;gt;&lt;/span>1.2.17&lt;span class="nt">&amp;lt;/log4j.version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;lombok.version&amp;gt;&lt;/span>1.16.18&lt;span class="nt">&amp;lt;/lombok.version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mysql.version&amp;gt;&lt;/span>8.0.14&lt;span class="nt">&amp;lt;/mysql.version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;druid.version&amp;gt;&lt;/span>1.1.16&lt;span class="nt">&amp;lt;/druid.version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mybatis.spring.boot.version&amp;gt;&lt;/span>2.1.2&lt;span class="nt">&amp;lt;/mybatis.spring.boot.version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改&lt;code>dependencies&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependencyManagement&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- springboot 2.2.2 --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-dependencies&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.2.2.RELEASE&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;type&amp;gt;&lt;/span>pom&lt;span class="nt">&amp;lt;/type&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scope&amp;gt;&lt;/span>import&lt;span class="nt">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- spring cloud hoxton.SR1 --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-dependencies&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>Hoxton.SR1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;type&amp;gt;&lt;/span>pom&lt;span class="nt">&amp;lt;/type&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scope&amp;gt;&lt;/span>import&lt;span class="nt">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- spring cloud alibaba 2.1.0.RELEASE --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.alibaba.cloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-cloud-alibaba-dependencies&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.1.0.RELEASE&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;type&amp;gt;&lt;/span>pom&lt;span class="nt">&amp;lt;/type&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scope&amp;gt;&lt;/span>import&lt;span class="nt">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- mysql --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>${mysql.version}&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- alibaba --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.alibaba&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>druid&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>${druid.version}&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- mybatis --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.mybatis.spring.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>mybatis-spring-boot-starter&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>${mybatis.spring.boot.version}&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- junit --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>junit&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>junit&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>${junit.version}&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- log4j --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>log4j&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>log4j&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>${log4j.version}&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- lombok --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.projectlombok&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>lombok&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>${lombok.version}&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;optional&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/optional&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencyManagement&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改&lt;code>build&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;build&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-maven-plugin&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;fork&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/fork&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;addResources&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/addResources&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/build&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最终&lt;code>pom.xml&lt;/code>&lt;/p>
&lt;details>&lt;summary>点击展开&lt;/summary>```xml
&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
&lt;modelVersion>4.0.0&lt;/modelVersion>
&lt;p>&lt;groupId>com.ilirus.springcloud&lt;/groupId>
&lt;artifactId>irscloud&lt;/artifactId>
&lt;version>1.0-SNAPSHOT&lt;/version>
&lt;packaging>pom&lt;/packaging>&lt;/p>
&lt;!-- 统一版本管理 -->
&lt;properties>
&lt;project.build.sourceEncoding>UTF-8&lt;/project.build.sourceEncoding>
&lt;maven.compiler.source>1.8&lt;/maven.compiler.source>
&lt;maven.compiler.target>1.8&lt;/maven.compiler.target>
&lt;junit.version>4.12&lt;/junit.version>
&lt;log4j.version>1.2.17&lt;/log4j.version>
&lt;lombok.version>1.16.18&lt;/lombok.version>
&lt;mysql.version>8.0.14&lt;/mysql.version>
&lt;druid.version>1.1.16&lt;/druid.version>
&lt;mybatis.spring.boot.version>2.1.2&lt;/mybatis.spring.boot.version>
&lt;/properties>
&lt;!-- 子项目统一依赖版本管理，子项目若不声明则不会自动引入 -->
&lt;!-- 子项目可只声明groupId 和artifactId, 版本会从这里继承 -->
&lt;dependencyManagement>
&lt;dependencies>
&lt;!-- springboot 2.2.2 -->
&lt;dependency>
&lt;groupId>org.springframework.boot&lt;/groupId>
&lt;artifactId>spring-boot-dependencies&lt;/artifactId>
&lt;version>2.2.2.RELEASE&lt;/version>
&lt;type>pom&lt;/type>
&lt;scope>import&lt;/scope>
&lt;/dependency>
&lt;!-- spring cloud hoxton.SR1 -->
&lt;dependency>
&lt;groupId>org.springframework.cloud&lt;/groupId>
&lt;artifactId>spring-cloud-dependencies&lt;/artifactId>
&lt;version>Hoxton.SR1&lt;/version>
&lt;type>pom&lt;/type>
&lt;scope>import&lt;/scope>
&lt;/dependency>
&lt;!-- spring cloud alibaba 2.1.0.RELEASE -->
&lt;dependency>
&lt;groupId>com.alibaba.cloud&lt;/groupId>
&lt;artifactId>spring-cloud-alibaba-dependencies&lt;/artifactId>
&lt;version>2.1.0.RELEASE&lt;/version>
&lt;type>pom&lt;/type>
&lt;scope>import&lt;/scope>
&lt;/dependency>
&lt;!-- mysql -->
&lt;dependency>
&lt;groupId>mysql&lt;/groupId>
&lt;artifactId>mysql-connector-java&lt;/artifactId>
&lt;version>${mysql.version}&lt;/version>
&lt;/dependency>
&lt;!-- alibaba -->
&lt;dependency>
&lt;groupId>com.alibaba&lt;/groupId>
&lt;artifactId>druid&lt;/artifactId>
&lt;version>${druid.version}&lt;/version>
&lt;/dependency>
&lt;!-- mybatis -->
&lt;dependency>
&lt;groupId>org.mybatis.spring.boot&lt;/groupId>
&lt;artifactId>mybatis-spring-boot-starter&lt;/artifactId>
&lt;version>${mybatis.spring.boot.version}&lt;/version>
&lt;/dependency>
&lt;!-- junit -->
&lt;dependency>
&lt;groupId>junit&lt;/groupId>
&lt;artifactId>junit&lt;/artifactId>
&lt;version>${junit.version}&lt;/version>
&lt;/dependency>
&lt;!-- log4j -->
&lt;dependency>
&lt;groupId>log4j&lt;/groupId>
&lt;artifactId>log4j&lt;/artifactId>
&lt;version>${log4j.version}&lt;/version>
&lt;/dependency>
&lt;!-- lombok -->
&lt;dependency>
&lt;groupId>org.projectlombok&lt;/groupId>
&lt;artifactId>lombok&lt;/artifactId>
&lt;version>${lombok.version}&lt;/version>
&lt;optional>true&lt;/optional>
&lt;/dependency>
&lt;/dependencies>
&lt;/dependencyManagement>
&lt;build>
&lt;plugins>
&lt;plugin>
&lt;groupId>org.springframework.boot&lt;/groupId>
&lt;artifactId>spring-boot-maven-plugin&lt;/artifactId>
&lt;configuration>
&lt;fork>true&lt;/fork>
&lt;addResources>true&lt;/addResources>
&lt;/configuration>
&lt;/plugin>
&lt;/plugins>
&lt;/build>
&lt;/project>
```
&lt;/details>
&lt;p>之后在&lt;code>Maven Project&lt;/code>窗口中的Lifcycle下执行&lt;code>install&lt;/code>选项以检查是否正确&lt;/p>
&lt;h2 id="子工程的创建">子工程的创建&lt;/h2>
&lt;h3 id="创建子工程module">创建子工程module&lt;/h3>
&lt;p>在&lt;code>Project&lt;/code>窗口中右键点击父工程，在弹出的菜单中选择New -&amp;gt; Module -&amp;gt; 在弹出的窗口中选择Maven -&amp;gt; 确认&lt;code>Add as module to&lt;/code>和&lt;code>Parent&lt;/code>皆为父工程，并输入artifactId -&amp;gt; 确认&lt;code>Nodule name&lt;/code>(IDEA会自动去掉某些特殊符号) -&amp;gt; 完成&lt;/p>
&lt;p>返回&lt;code>父工程&lt;/code>的&lt;code>pom.xml&lt;/code>中，查看是否有&lt;code>modules&lt;/code>元素&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;modules&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;module&amp;gt;&lt;/span>child-project&lt;span class="nt">&amp;lt;/module&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/modules&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置子工程依赖">配置子工程依赖&lt;/h3>
&lt;p>向&lt;code>子工程&lt;/code>的&lt;code>pom.xml&lt;/code>添加依赖&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-web&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-actuator&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.mybatis.spring.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>mybatis-spring-boot-starter&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.alibaba&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>druid-spring-boot-starter&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.1.10&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-jdbc&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-devtools&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.projectlombok&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>lombok&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;optional&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/optional&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-test&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span class="nt">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最终&lt;code>pom.xml&lt;/code>&lt;/p>
&lt;details>&lt;summary>点击展开&lt;/summary>```xml
&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
&lt;parent>
&lt;groupId>com.ilirus.springcloud&lt;/groupId>
&lt;artifactId>irscloud&lt;/artifactId>
&lt;version>1.0-SNAPSHOT&lt;/version>
&lt;/parent>
&lt;modelVersion>4.0.0&lt;/modelVersion>
&lt;p>&lt;artifactId>irs-provider-payment8001&lt;/artifactId>&lt;/p>
&lt;dependencies>
&lt;dependency>
&lt;groupId>org.springframework.boot&lt;/groupId>
&lt;artifactId>spring-boot-starter-web&lt;/artifactId>
&lt;/dependency>
&lt;dependency>
&lt;groupId>org.springframework.boot&lt;/groupId>
&lt;artifactId>spring-boot-starter-actuator&lt;/artifactId>
&lt;/dependency>
&lt;dependency>
&lt;groupId>com.alibaba&lt;/groupId>
&lt;artifactId>druid-spring-boot-starter&lt;/artifactId>
&lt;version>1.1.10&lt;/version>
&lt;/dependency>
&lt;dependency>
&lt;groupId>org.mybatis.spring.boot&lt;/groupId>
&lt;artifactId>mybatis-spring-boot-starter&lt;/artifactId>
&lt;/dependency>
&lt;dependency>
&lt;groupId>mysql&lt;/groupId>
&lt;artifactId>mysql-connector-java&lt;/artifactId>
&lt;/dependency>
&lt;dependency>
&lt;groupId>org.springframework.boot&lt;/groupId>
&lt;artifactId>spring-boot-starter-jdbc&lt;/artifactId>
&lt;/dependency>
&lt;dependency>
&lt;groupId>org.springframework.boot&lt;/groupId>
&lt;artifactId>spring-boot-devtools&lt;/artifactId>
&lt;/dependency>
&lt;dependency>
&lt;groupId>org.projectlombok&lt;/groupId>
&lt;artifactId>lombok&lt;/artifactId>
&lt;optional>true&lt;/optional>
&lt;/dependency>
&lt;dependency>
&lt;groupId>org.springframework.boot&lt;/groupId>
&lt;artifactId>spring-boot-starter-test&lt;/artifactId>
&lt;scope>test&lt;/scope>
&lt;/dependency>
&lt;/dependencies>
&lt;/project>
```
&lt;/details>
&lt;h3 id="编写applicationyml">编写application.yml&lt;/h3>
&lt;p>在子工程的&lt;code>src/main/resources&lt;/code>目录下创建&lt;code>application.yml&lt;/code>文件&lt;/p>
&lt;details>&lt;summary>点击展开&lt;/summary>```yml
server:
port: 8001 # 端口
&lt;p>spring:
application:
name: child-project # 名称
datasource:
type: com.alibaba.druid.pool.DruidDataSource # 数据源类型
driver-class-name: com.mysql.cj.jdbc.Driver # 数据库驱动包
url: jdbc:mysql://127.0.0.1:3306/irscloud?useSSL=false&amp;amp;characterEncoding=utf8&amp;amp;useUnicode=true
username: &amp;hellip;
password: &amp;hellip;&lt;/p>
&lt;p>mybatis:
mapper-locations: classpath:mapper/*.xml
type-aliases-package: com.ilirus.springcloud.entities # entity别名类所在的package&lt;/p>
&lt;pre>&lt;code>&amp;lt;/details&amp;gt;
### 创建启动类
在子工程的`src/main/java/&amp;lt;groupId&amp;gt;`目录下创建对应的启动类
&amp;lt;details&amp;gt;&amp;lt;summary&amp;gt;点击展开&amp;lt;/summary&amp;gt;```java
package com.ilirus.springcloud;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
@SpringBootApplication
@MapperScan(&amp;quot;com.ilirus.springcloud.dao&amp;quot;)
public class ChildProjectMain {
public static void main(String[] args) {
SpringApplication.run(ChildProject.class, args);
}
}
&lt;/code>&lt;/pre>&lt;/details>
&lt;h3 id="编写实体类">编写实体类&lt;/h3>
&lt;details>&lt;summary>点击展开&lt;/summary>```java
package com.ilirus.springcloud.entities;
&lt;p>import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.io.Serializable;&lt;/p>
&lt;p>@Data
@AllArgsConstructor
@NoArgsConstructor
public class Payment implements Serializable {
private Long id;
private String serial;
}&lt;/p>
&lt;pre>&lt;code>
返回给前端的Result类
```java
package com.ilirus.springcloud.entities;
import com.ilirus.springcloud.enums.Status;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;
public class CommonResult&amp;lt;T&amp;gt; {
private Integer code;
private String message;
private T data;
@NotNull
@Contract(&amp;quot;_ -&amp;gt; new&amp;quot;)
public static&amp;lt;T&amp;gt; CommonResult&amp;lt;T&amp;gt; Of(@NotNull Status status) {
return new CommonResult&amp;lt;T&amp;gt;(status.getCode(), status.getMessage());
}
@NotNull
@Contract(&amp;quot;_, _ -&amp;gt; new&amp;quot;)
public static&amp;lt;T&amp;gt; CommonResult&amp;lt;T&amp;gt; OfData(@NotNull Status status, T data) {
return new CommonResult&amp;lt;T&amp;gt;(status.getCode(), status.getMessage(), data);
}
private CommonResult(Integer code, String message) {
this(code, message, null);
}
private CommonResult(Integer code, String message, T data) {
this.code = code;
this.message = message;
this.data = data;
}
public Integer getCode() {
return this.code;
}
public String getMessage() {
return this.message;
}
public T getData() {
return this.data;
}
}
&lt;/code>&lt;/pre>&lt;/details>
&lt;h3 id="编写枚举类">编写枚举类&lt;/h3>
&lt;details>&lt;summary>点击展开&lt;/summary>```java
package com.ilirus.springcloud.enums;
&lt;p>import org.jetbrains.annotations.Contract;&lt;/p>
&lt;p>public enum Status {
SUCCESS(200,&amp;ldquo;sucess&amp;rdquo;),
FAIL(400,&amp;ldquo;fail&amp;rdquo;),
NO_DATA_FOUND(404,&amp;ldquo;not found&amp;rdquo;)
;&lt;/p>
&lt;pre>&lt;code>private Integer code;
private String message;
Status(Integer code, String message) {
this.code = code;
this.message = message;
}
@Contract(pure = true)
public Integer getCode() {
return code;
}
@Contract(pure = true)
public String getMessage() {
return message;
}
&lt;/code>&lt;/pre>
&lt;p>}&lt;/p>
&lt;pre>&lt;code>&amp;lt;/details&amp;gt;
### 编写Dao
&amp;lt;details&amp;gt;&amp;lt;summary&amp;gt;点击展开&amp;lt;/summary&amp;gt;```java
package com.ilirus.springcloud.dao;
import com.ilirus.springcloud.entities.Payment;
import org.apache.ibatis.annotations.Param;
import java.util.Optional;
public interface PaymentDao {
public Optional&amp;lt;Payment&amp;gt; getPaymentByID(@Param(&amp;quot;id&amp;quot;) Long id);
public int createPayment(Payment payment);
}
&lt;/code>&lt;/pre>&lt;p>mapper文件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;span class="cp">&amp;lt;!DOCTYPE mapper PUBLIC &amp;#34;-//mybatis.org//DTD Mapper 3.0//EN&amp;#34; &amp;#34;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;#34;&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mapper&lt;/span> &lt;span class="na">namespace=&lt;/span>&lt;span class="s">&amp;#34;com.ilirus.springcloud.dao.PaymentDao&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;resultMap&lt;/span> &lt;span class="na">id=&lt;/span>&lt;span class="s">&amp;#34;BaseResultMap&amp;#34;&lt;/span> &lt;span class="na">type=&lt;/span>&lt;span class="s">&amp;#34;com.ilirus.springcloud.entities.Payment&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&lt;/span> &lt;span class="na">column=&lt;/span>&lt;span class="s">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="na">property=&lt;/span>&lt;span class="s">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="na">jdbcType=&lt;/span>&lt;span class="s">&amp;#34;BIGINT&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&lt;/span> &lt;span class="na">column=&lt;/span>&lt;span class="s">&amp;#34;serial&amp;#34;&lt;/span> &lt;span class="na">property=&lt;/span>&lt;span class="s">&amp;#34;serial&amp;#34;&lt;/span> &lt;span class="na">jdbcType=&lt;/span>&lt;span class="s">&amp;#34;VARCHAR&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/resultMap&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;select&lt;/span> &lt;span class="na">id=&lt;/span>&lt;span class="s">&amp;#34;getPaymentByID&amp;#34;&lt;/span> &lt;span class="na">parameterType=&lt;/span>&lt;span class="s">&amp;#34;Long&amp;#34;&lt;/span> &lt;span class="na">resultMap=&lt;/span>&lt;span class="s">&amp;#34;BaseResultMap&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
select id, serial from payment where id=#{id} limit 1;
&lt;span class="nt">&amp;lt;/select&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;insert&lt;/span> &lt;span class="na">id=&lt;/span>&lt;span class="s">&amp;#34;createPayment&amp;#34;&lt;/span> &lt;span class="na">parameterType=&lt;/span>&lt;span class="s">&amp;#34;Payment&amp;#34;&lt;/span> &lt;span class="na">useGeneratedKeys=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="na">keyProperty=&lt;/span>&lt;span class="s">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
insert into payment(serial) values(#{serial});
&lt;span class="nt">&amp;lt;/insert&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/mapper&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;h3 id="编写service">编写Service&lt;/h3>
&lt;details>&lt;summary>点击展开&lt;/summary>```java
package com.ilirus.springcloud.service;
&lt;p>import com.ilirus.springcloud.entities.Payment;
import org.apache.ibatis.annotations.Param;&lt;/p>
&lt;p>public interface PaymentService {
public Payment getPaymentByID(@Param(&amp;ldquo;id&amp;rdquo;) Long id);&lt;/p>
&lt;pre>&lt;code>public int createPayment(Payment payment);
&lt;/code>&lt;/pre>
&lt;p>}&lt;/p>
&lt;pre>&lt;code>
实现类
```java
package com.ilirus.springcloud.service.impl;
import com.ilirus.springcloud.dao.PaymentDao;
import com.ilirus.springcloud.entities.Payment;
import com.ilirus.springcloud.service.PaymentService;
import org.springframework.stereotype.Service;
import javax.annotation.Resource;
@Service
public class PaymentServiceImpl implements PaymentService {
@Resource
private PaymentDao paymentDao;
@Override
public Payment getPaymentByID(Long id) throws NullPointerException {
return paymentDao.getPaymentByID(id).orElse(null);
}
@Override
public int createPayment(Payment payment) {
return paymentDao.createPayment(payment);
}
}
&lt;/code>&lt;/pre>&lt;/details>
&lt;h3 id="编写controller">编写Controller&lt;/h3>
&lt;details>&lt;summary>点击展开&lt;/summary>```java
package com.ilirus.springcloud.controller;
&lt;p>import com.ilirus.springcloud.entities.CommonResult;
import com.ilirus.springcloud.entities.Payment;
import com.ilirus.springcloud.enums.Status;
import com.ilirus.springcloud.service.PaymentService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.*;&lt;/p>
&lt;p>import javax.annotation.Resource;&lt;/p>
&lt;p>@RestController
@RequestMapping(&amp;quot;/payment&amp;quot;)
@Slf4j
public class PaymentController {
@Resource
private PaymentService paymentService;&lt;/p>
&lt;pre>&lt;code>@PostMapping(&amp;quot;/create&amp;quot;)
public CommonResult create(@RequestBody Payment payment) {
int res = paymentService.createPayment(payment);
log.info(&amp;quot;插入结果: &amp;quot;+res);
if(res &amp;gt; 0) {
return CommonResult.Of(Status.SUCCESS);
} else {
return CommonResult.Of(Status.FAIL);
}
}
@GetMapping(&amp;quot;/query/{id}&amp;quot;)
public CommonResult queryByID(@PathVariable(&amp;quot;id&amp;quot;) Long id) {
Payment payment = paymentService.getPaymentByID(id);
if(payment != null) {
return CommonResult.OfData(Status.SUCCESS, payment);
} else {
return CommonResult.Of(Status.NO_DATA_FOUND);
}
}
&lt;/code>&lt;/pre>
&lt;p>}&lt;/p>
&lt;pre>&lt;code>&amp;lt;/details&amp;gt;
### 编写测试
在子工程的`src/test/java/&amp;lt;groupId&amp;gt;`目录下创建对应的测试类
&amp;lt;details&amp;gt;&amp;lt;summary&amp;gt;点击展开&amp;lt;/summary&amp;gt;```java
package com.ilirus.springcloud;
import com.ilirus.springcloud.entities.Payment;
import com.ilirus.springcloud.service.PaymentService;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.Rollback;
import org.springframework.transaction.annotation.Transactional;
import javax.annotation.Resource;
import java.sql.SQLException;
import java.time.Duration;
@SpringBootTest
class ChildProjectTest {
@Resource
PaymentService paymentService;
@BeforeEach
void echo() {
System.out.println(&amp;quot;====Test Start====&amp;quot;);
}
@AfterAll
static void done() {
System.out.println(&amp;quot;====Test Done.====&amp;quot;);
}
@Test
void checkQuery() {
Payment payment = paymentService.getPaymentByID(1L);
Assertions.assertNotNull(payment);
}
@Test
@Transactional
@Rollback
void checkCreate() throws SQLException {
Payment payment = new Payment();
payment.setSerial(&amp;quot;test&amp;quot;);
int res = paymentService.createPayment(payment);
System.out.println(res);
Assertions.assertNotEquals(res, 0);
Assertions.assertThrows(SQLException.class, () -&amp;gt; {
...
});
Assertions.assertTimeout(Duration.ofSeconds(3), () -&amp;gt; {
...
});
}
}
&lt;/code>&lt;/pre>&lt;/details>
&lt;h2 id="提取子工程中的共同模块">提取子工程中的共同模块&lt;/h2>
&lt;p>再创建一个子工程，使你的父工程中目录下有两个子工程。&lt;/p>
&lt;h3 id="再次创建一个子工程">再次创建一个子工程&lt;/h3>
&lt;p>按照之前的方式再创建一个子工程&lt;/p>
&lt;h3 id="编写pomxml">编写pom.xml&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;project&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span> &lt;span class="na">xmlns:xsi=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span> &lt;span class="na">xsi:schemaLocation=&lt;/span>&lt;span class="s">&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;parent&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.ilirus.springcloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>irscloud&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0-SNAPSHOT&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/parent&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;modelVersion&amp;gt;&lt;/span>4.0.0&lt;span class="nt">&amp;lt;/modelVersion&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>irs-api-common&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-devtools&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scope&amp;gt;&lt;/span>runtime&lt;span class="nt">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;optional&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/optional&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.projectlombok&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>lombok&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;optional&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/optional&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>cn.hutool&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>hutool-all&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>5.1.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="提取共同模块">提取共同模块&lt;/h3>
&lt;p>将另外两个子工程中共同的模块(entities/enums等)转移到此工程下&lt;/p>
&lt;h3 id="运行maven-clean-install命令">运行maven clean install命令&lt;/h3>
&lt;p>运行maven clean install命令，同时检查是否有误&lt;/p>
&lt;h3 id="修改原先的子工程">修改原先的子工程&lt;/h3>
&lt;p>在子工程中引入通用包&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.ilirus.springcloud&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>irs-api-common&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>${project.version}&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在Run dashboard 中运行项目查看是否有误&lt;/p></description></item><item><title>[笔记]SpringCloud学习00: 微服务与SpringCloud</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A000-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%8Espringcloud/</link><pubDate>Wed, 11 Mar 2020 21:26:57 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springcloud%E5%AD%A6%E4%B9%A000-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%8Espringcloud/</guid><description>&lt;h1 id="微服务是什么">微服务是什么&lt;/h1>
&lt;blockquote>
&lt;p>　　&lt;code>微服务&lt;/code>是一种架构模式，它提倡将&lt;code>单一&lt;/code>应用程序划分为一组小的服务，服务之间相互协调、相互配合，为用户提供最终价值。每个服务运行在其&lt;code>独立&lt;/code>的&lt;code>进程&lt;/code>中，服务间采用轻量级的通信机制互相协作(例如基于HTTP协议的RESTful API)。&lt;br>
　　每个服务都围绕具体业务进行构建，并能够&lt;code>独立&lt;/code>的被部署到生产环境、类生产环境等。另外，应尽量避免统一的、集中式的服务管理机制，对具体的一个服务而言，应根据业务上下文，选择合适的语言、工具对其进行构建。&lt;/p>
&lt;/blockquote>
&lt;h2 id="微服务架构应满足哪些维度">微服务架构应满足哪些维度&lt;/h2>
&lt;ul>
&lt;li>服务的注册与发现&lt;/li>
&lt;li>服务调用&lt;/li>
&lt;li>服务熔断&lt;/li>
&lt;li>负载均衡&lt;/li>
&lt;li>服务降级&lt;/li>
&lt;li>服务消息队列&lt;/li>
&lt;li>配置中心管理&lt;/li>
&lt;li>服务网关&lt;/li>
&lt;li>服务监控&lt;/li>
&lt;li>全链路追踪&lt;/li>
&lt;li>自动化构建部署&lt;/li>
&lt;li>服务定时任务调度操作&lt;/li>
&lt;/ul>
&lt;h1 id="spring-cloud-是什么">Spring Cloud 是什么&lt;/h1>
&lt;blockquote>
&lt;p>融合、协调、组装微服务相关技术，使构建分布式系统变更更容易。是分布式微服务架构的一种技术体现，是多种微服务架构落地技术的集合体。(微服务全家桶)&lt;/p>
&lt;/blockquote>
&lt;!-- more -->
&lt;h3 id="spring-cloud-版本命名规则">Spring Cloud 版本命名规则&lt;/h3>
&lt;p>&lt;code>Spring Cloud&lt;/code>是一个由许多&lt;code>子项目&lt;/code>组成的&lt;code>综合&lt;/code>项目，各子项目有不同的发布节奏。为管理Spring Cloud 与各子项目的版本依赖关系，发布了一个清单，其中包括了某个Spring Cloud 版本对应的子项目版本。&lt;/p>
&lt;p>为避免Spring Cloud 的版本号与子项目版本号混淆，Spring Cloud 采用了英国伦敦地铁站的名称来命名，以字母A-Z的形式来发布迭代版本，也就是说Spring Cloud 是以字母作为版本号。&lt;/p>
&lt;p>当Spring Cloud 的发布内容&lt;strong>累积到临界点&lt;/strong>或&lt;strong>一个重大BUG被解决&lt;/strong>后，会发布一个&lt;code>service releases&lt;/code> 版本，简称&lt;code>SR&lt;/code>版本(SR1、SR2等)。&lt;/p>
&lt;h2 id="spring-cloud-和spring-boot-的版本对应">Spring Cloud 和Spring Boot 的版本对应&lt;/h2>
&lt;p>在&lt;a class="link" href="https://spring.io/projects/spring-cloud" target="_blank" rel="noopener"
>https://spring.io/projects/spring-cloud&lt;/a>网页底部可查看SpringCloud和SpringBoot的版本对应关系&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/03/11/8VEh8g.png" alt="SpringCloud和SpringBoot对应版本" />&lt;/p>
&lt;p>更详细的依赖信息需要在&lt;a class="link" href="https://start.spring.io/actuator/info" target="_blank" rel="noopener"
>https://start.spring.io/actuator/info&lt;/a>中查讯&lt;/p>
&lt;p>在&lt;a class="link" href="https://spring.io/projects/spring-cloud#learn" target="_blank" rel="noopener"
>https://spring.io/projects/spring-cloud#learn&lt;/a>页面中找到Spring Cloud 的&lt;code>Reference Doc&lt;/code>在这个页面里可以找到官方推荐的&lt;code>Spring Boot&lt;/code>版本&lt;/p></description></item><item><title>数据库存储过程</title><link>https://chaosalphard.github.io/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</link><pubDate>Sat, 05 Oct 2019 14:00:50 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</guid><description>&lt;h1 id="简单理解存储过程">简单理解存储过程&lt;/h1>
&lt;h2 id="存储过程是什么">存储过程是什么&lt;/h2>
&lt;blockquote>
&lt;p>存储过程(Stored Procedure) 是在数据库系统中，一组为了完成特定功能的&lt;code>SQL&lt;/code> 语句集，它存储在数据库中，一次编译后永久有效，用户通过调用存储过程并传递参数来执行它。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>存储过程是用于特定操作的pl/sql语句块。&lt;/li>
&lt;li>存储过程是预编译过的，经优化后存储在sql内存中，使用时无需再次编译，提高了使用效率。&lt;/li>
&lt;li>存储过程的代码直接存放在数据库中，一般直接通过存储过程的名称调用，减少了网络流量，加快了系统执行效率。&lt;/li>
&lt;/ul>
&lt;h2 id="存储过程与函数的区别">存储过程与函数的区别&lt;/h2>
&lt;ul>
&lt;li>一般来说，存储过程实现的功能要复杂一点，而函数的实现的功能针对性比较强。&lt;/li>
&lt;li>对于存储过程来说可以返回参数(output)，而函数只能返回值或者表对象。&lt;/li>
&lt;li>存储过程一般是作为一个独立的部分来执行，而函数可以作为查询语句的一个部分来调用，由于函数可以返回一个表对象，因此它可以在查询语句中位于&lt;code>FROM&lt;/code> 关键字的后面。&lt;/li>
&lt;/ul>
&lt;!-- ## 存储过程的优点
- 执行速度更快：
在数据库中保存的存储过程语句都是编译过的，经过第一次编译后再次调用不需要再次编译。
并且，当对数据库进行复杂操作时(如对多个表进行 Update,Insert,Query,Delete 时），可将此复杂操作用存储过程封装起来与数据库提供的事务处理结合一起使用。这些操作，如果用程序来完成，就变成了一条条的 SQL 语句，可能要多次连接数据库。而换成存储，只需要连接一次数据库就可以了。
- 提高系统安全性：
存储过程通过参数传入数据，避免了SQL注入攻击，同时可以给存储过程配置权限，只让特定的用户使用。
- 减少网络流通量：
只需要传递调用存储过程名称和参数，不需要发送SQL语句，因此减少了网络流量，提高了调用的速度。
## 存储过程的缺点
- 数据库支持：
目前只有`Oracle` 之类的商用库支持比较好，`MySQL` 并不支持`SQL Compilation`和`JIT`，是解释执行，因此性能较差。而MongoDB之类的NoSQL数据库，本身并没有存储过程这种概念。
- 运行速度：
大多数高级的数据库系统都有`statement cache`，所以编译sql的花费没什么影响。所以对于简单的sql语句，存储过程并没有什么优势。
- 安全机制：
对于传统的C/S结构，连接数据库的用户可以不同，所以存储过程的安全机制有很大的优势。但是在web的三层架构中，数据库用户基本上只有一个，拥有所有权限。这个时候，安全机制并没有什么优势。
- 维护成本：
采用存储过程后也就意味着系统有一些业务逻辑不是在应用程序里处理，这种架构会增加一些系统维护和调试成本。 -->
&lt;!-- - 不适合互联网开发：
互联网高并发的场景，很多数据都是分库分表的，而且要求高度可扩展，原则是对db的保护做到最大化，能减少db压力的就减少db压力，尽量把运算逻辑拉到代码里面。存储过程的优点在于封装性好，直接让db进行运算，但是缺点在于难以维护，而且大大增大db压力。所以在阿里巴巴的`Java开发手册`里禁止明确禁止使用存储过程。
![alibaba](https://s2.ax1x.com/2019/10/05/usDe91.jpg) -->
&lt;!-- ## 适用场景
存储过程适合经常要大批量的处理数据，表都很大，表关系也复杂，(比如十几个表关联)的情况，比如ERP开发。
而互联网开发这种需求变更频繁，并发数高，对数据库要求高的场景则不太适合。 -->
&lt;!-- more -->
&lt;h1 id="存储过程的创建与调用">存储过程的创建与调用&lt;/h1>
&lt;h2 id="创建">创建&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">OR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">REPLACE&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PROCEDURE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">procedure_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parameter1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">datatype1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parameter2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">datatype2&lt;/span>&lt;span class="p">..)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">IS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">BEGIN&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PL&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="k">SQL&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">procedure_name&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!--
delimiter //
create procedure pd_select_student_by_name(s_name nvarchar(20))
begin
select * from tb_student where stu_name = s_name;
end//
delimiter;
-->
&lt;ul>
&lt;li>parameter用于指定参数，model用于指定参数模式，datatype用于指定参数类型。&lt;/li>
&lt;li>定义存储过程的参数时，只能指定数据类型，不能指定数据长度。&lt;/li>
&lt;li>IS/AS用于开始PL/SQL代码块。&lt;/li>
&lt;li>创建存储过程时，既可以指定参数也可以不指定任何参数。&lt;/li>
&lt;/ul>
&lt;p>例如&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">create&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">procedure&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pd_select_student_by_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nvarchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">is&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">begin&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">student&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stu_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s_name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编译">编译&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PROCEDURE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">procedure_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">COMPILE&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="调用">调用&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">execute&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">procedure_name&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">DECLARE&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">number&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">VARCHAR2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;~Hello~&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">BEGIN&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">procedure_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="删除">删除&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">DROP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PROCEDURE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">procedure_name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>VSCode配置Springboot开发环境</title><link>https://chaosalphard.github.io/p/vscode%E9%85%8D%E7%BD%AEspringboot%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Thu, 03 Oct 2019 20:36:06 +0000</pubDate><guid>https://chaosalphard.github.io/p/vscode%E9%85%8D%E7%BD%AEspringboot%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;p>虽说Springboot的首选开发IDE是IntelliJ IDEA，然而对于老爷机来说IDEA太过庞大，对于因为某些原因而无法使用主力开发电脑时，使用VSCode来开发Springboot也不失为一个不错的选择。&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/10/03/u0jgIA.jpg" alt="VSCode" />&lt;/p>
&lt;h1 id="安装开发扩展">安装开发扩展&lt;/h1>
&lt;p>在商店中搜索&lt;code>Java Extension Pack&lt;/code> 扩展，并安装。&lt;/p>
&lt;p>这是一个扩展包，VSCode 会自动安装关联的扩展：&lt;/p>
&lt;ul>
&lt;li>Cloudfoundry Manifest YML Support&lt;/li>
&lt;li>Concourse CI Pipeline Editor&lt;/li>
&lt;li>Debugger for Java&lt;/li>
&lt;li>Java Dependency Viewer&lt;/li>
&lt;li>Java Test Runner&lt;/li>
&lt;li>Language Support for Java(TM) by Red Hat&lt;/li>
&lt;li>Maven for Java&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;p>&lt;img src="https://s2.ax1x.com/2019/10/03/u0I2c9.jpg" alt="JavaExt" />&lt;/p>
&lt;p>在商店中搜索&lt;code>Spring Boot Extension Pack&lt;/code> 扩展，并安装。&lt;/p>
&lt;p>这是一个扩展包，VSCode 会自动安装关联的扩展：&lt;/p>
&lt;ul>
&lt;li>Spring Boot Dashboard&lt;/li>
&lt;li>Spring Boot Tools&lt;/li>
&lt;li>Spring Initializr Java Support&lt;/li>
&lt;li>Visual Studio IntelliCode&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/10/03/u0IstU.jpg" alt="MavenExt" />&lt;/p>
&lt;h1 id="配置java与maven路径">配置Java与Maven路径&lt;/h1>
&lt;p>打开VSCode的设置文件(setting.json)， 写入以下配置&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">java路径&lt;/span>
&lt;span class="nt">&amp;#34;java.home&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;C:/Software/java11/jdk&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">maven配置文件路径&lt;/span>
&lt;span class="nt">&amp;#34;java.configuration.maven.userSettings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;C:/Software/maven-3.6.1/conf/settings.xml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">修改pom.xml后导入依赖的动作(automatic&lt;/span> &lt;span class="err">为自动下载与导入)&lt;/span>
&lt;span class="nt">&amp;#34;java.configuration.updateBuildConfiguration&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;automatic&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">maven主程序路径&lt;/span>
&lt;span class="nt">&amp;#34;maven.executable.path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;C:/Software/maven-3.6.1/bin/mvn&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">不显示在VSCode文件视图中的文件&lt;/span>
&lt;span class="nt">&amp;#34;files.exclude&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;**/.classpath&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;**/.project&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;**/.settings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;**/.factorypath&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">文件夹&lt;/span>
&lt;span class="nt">&amp;#34;.mvn&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;.vscode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;target&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="使用方式">使用方式&lt;/h1>
&lt;p>按下&lt;code>F1&lt;/code>，输入&lt;code>spring initializr&lt;/code>，选择&lt;code>Generate a Maven Project&lt;/code>选项即可。&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/10/03/u0IrkT.jpg" alt="Init" />&lt;/p>
&lt;p>选中想要的插件按回车即可，结束选择的方式是选中&lt;code>Selected x dependencies&lt;/code>选项，并按&lt;code>Enter&lt;/code>键。&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/10/03/u0Ig1J.jpg" alt="Init" />&lt;/p>
&lt;h1 id="配置启动项">配置启动项&lt;/h1>
&lt;p>在&lt;code>.vscode/launch.json&lt;/code>文件中写入以下内容：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="s2">&amp;#34;configurations&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;java&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;DemoApplication&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;launch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;mainClass&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;com.example.springdemo.DemoApplication&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;projectName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;springdemo&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>保存后再按下&lt;code>F5&lt;/code> 即可启动项目。&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/10/03/u0IRXR.jpg" alt="Start" />&lt;/p>
&lt;p>&lt;code>Gradle&lt;/code>也是类似的方式&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/10/03/u0Ifn1.jpg" alt="Start" />&lt;/p></description></item><item><title>Git提交的回滚</title><link>https://chaosalphard.github.io/p/git%E6%8F%90%E4%BA%A4%E7%9A%84%E5%9B%9E%E6%BB%9A/</link><pubDate>Wed, 18 Sep 2019 17:46:03 +0000</pubDate><guid>https://chaosalphard.github.io/p/git%E6%8F%90%E4%BA%A4%E7%9A%84%E5%9B%9E%E6%BB%9A/</guid><description>&lt;h1 id="revert">revert&lt;/h1>
&lt;blockquote>
&lt;p>&lt;code>git revert &amp;lt;commit&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>生成一个撤消了&lt;code>commit&lt;/code> 引入的修改的新提交，然后应用到当前分支。&lt;/p>
&lt;p>&lt;code>commit&lt;/code> 可以通过使用&lt;code>git log&lt;/code> 来查看&lt;/p>
&lt;p>&lt;code>revert&lt;/code> 是提交一个 撤销了更改的 &lt;strong>新提交&lt;/strong>，而不是从项目历史中移除这个提交。这会避免Git丢失项目历史，是一种比较安全的方式。&lt;/p>
&lt;h1 id="reset">reset&lt;/h1>
&lt;blockquote>
&lt;p>&lt;code>git reset&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>重设暂存区，但不改变工作区，匹配最近的一次提交。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>git reset --hard&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>重设&lt;strong>暂存区和工作区&lt;/strong>，匹配最近的一次提交。&lt;br>
&lt;code>--hard&lt;/code> 会使git更改工作区中的文件。确定要扔掉本地的开发进度再使用。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>git reset &amp;lt;commit&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>将暂存区重设到这个提交，但不改变工作区。&lt;br>
所有&lt;code>commit&lt;/code> 之后的更改会保留在工作区中，适用于重新提交更干净的项目历史。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>git reset --hard &amp;lt;commit&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>将暂存区和工作区都重设到这个提交。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>git reset &amp;lt;file&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>从暂存区移除某个文件，但不改变工作区。&lt;/p>
&lt;!-- more -->
&lt;h1 id="reset-和-revert">reset 和 revert&lt;/h1>
&lt;blockquote>
&lt;p>&lt;code>git revert&lt;/code> 可以针对历史中任何一个提交，而 &lt;code>git reset&lt;/code> 只能从当前提交向前回溯。比如，你想用 git reset 重设一个旧的提交，你不得不移除那个提交后的所有提交，再移除那个提交，然后重新提交后面的所有提交。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>revert&lt;/code>被设计为撤销&lt;strong>公开&lt;/strong>的提交的安全方式，&lt;code>reset&lt;/code>被设计为重设&lt;strong>本地&lt;/strong>更改。&lt;br>
因为两个命令的目的不同，它们的实现也不一样：&lt;code>reset&lt;/code>完全地移除了一堆更改，而&lt;code>revert&lt;/code>保留了原来的更改，用一个新的提交来实现撤销。&lt;/p>
&lt;h1 id="查看之前的内容">查看之前的内容&lt;/h1>
&lt;h2 id="检出提交">检出提交&lt;/h2>
&lt;blockquote>
&lt;p>&lt;code>git checkout &amp;lt;commit&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>使用&lt;code>checkout commit&lt;/code> 可以便捷地将&lt;code>commit&lt;/code> 加载到电脑上。&lt;br>
而且&lt;strong>检出提交&lt;/strong>是一个&lt;strong>只读&lt;/strong>操作，在查看其他&lt;code>commit&lt;/code>的时候不会对你当前的状态(比如master分支)产生影响。&lt;br>
在检出提交的时候，&lt;code>HEAD&lt;/code>直接指向检出的提交。而不是指向分支。(分离HEAD)&lt;/p>
&lt;h2 id="检出文件">检出文件&lt;/h2>
&lt;blockquote>
&lt;p>&lt;code>git checkout &amp;lt;commit&amp;gt; &amp;lt;file&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>会将工作区中的&lt;code>file&lt;/code>文件变成&lt;code>commit&lt;/code>中的那个文件，并将它加入暂存区。&lt;/p>
&lt;p>&lt;strong>这会对你当前的工作区中的文件产生影响。&lt;/strong>&lt;/p>
&lt;h1 id="参考资料">参考资料&lt;/h1>
&lt;blockquote>
&lt;p>&lt;a href="https://www.atlassian.com/git/tutorials/undoing-changes">https://www.atlassian.com/git/tutorials/undoing-changes&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>在Windows的UAC授权中增加密码验证</title><link>https://chaosalphard.github.io/p/%E5%9C%A8windows%E7%9A%84uac%E6%8E%88%E6%9D%83%E4%B8%AD%E5%A2%9E%E5%8A%A0%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81/</link><pubDate>Wed, 11 Sep 2019 23:50:21 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E5%9C%A8windows%E7%9A%84uac%E6%8E%88%E6%9D%83%E4%B8%AD%E5%A2%9E%E5%8A%A0%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81/</guid><description>&lt;h1 id="在windows的uac授权中增加密码验证">在Windows的UAC授权中增加密码验证&lt;/h1>
&lt;p>　　通常情况下，当用户以管理员账户登录后，如果要进行某些需要管理员权限的操作(例如：为所有用户安装软件)，系统会弹出UAC(用户账户控制)弹窗，以向用户要求权限。&lt;br>
　　普通用户需要输入管理员密码才可授予权限，而管理员账户只需点击 “是” 按钮即可授予权限。&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/09/12/nwbvee.jpg" alt="UAC" />&lt;/p>
&lt;p>　　但是这样并不是很安全，所以我希望，即便是在管理员账户下，也需要进行密码验证。而且日常使用中，需要UAC授权的情况并不多见，所以增加密码验证这一步也并不会太影响日常使用。&lt;/p>
&lt;ul>
&lt;li>以管理员账户登录，按下&lt;code>Win+R&lt;/code>，输入&lt;code>gpedit.msc&lt;/code> 以进入&lt;code>组策略编辑器&lt;/code>&lt;/li>
&lt;li>进入 计算机配置 -&amp;gt; Windows设置 -&amp;gt; 安全设置 -&amp;gt; 本地策略 -&amp;gt; 安全选项 选项卡&lt;/li>
&lt;li>找到 用户账户控制：管理员批准模式中管理员的提升权限提示的行为 选项&lt;/li>
&lt;li>将其属性更改为&lt;code>提示凭据&lt;/code> 或者 &lt;code>在安全桌面上提示凭据&lt;/code> 即可&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/09/12/nwbxdH.jpg" alt="UAC" />&lt;/p></description></item><item><title>CSS蛇形边框</title><link>https://chaosalphard.github.io/p/css%E8%9B%87%E5%BD%A2%E8%BE%B9%E6%A1%86/</link><pubDate>Tue, 27 Aug 2019 02:27:56 +0000</pubDate><guid>https://chaosalphard.github.io/p/css%E8%9B%87%E5%BD%A2%E8%BE%B9%E6%A1%86/</guid><description>&lt;style>
.content {
width: 180px;
height: 64px;
margin: 0;
padding: 0;
border: none;
background: transparent;
position: relative;
font-size: 24px;
z-index: 0
}
.result::before, .result::after {
content: '';
position: absolute;
top: -2px; bottom: -2px;
left: -2px; right: -2px;
}
.result::before {
border: 2px solid olive;
animation: snake 4s linear infinite;
}
.result::after {
border: 2px solid plum;
animation: snake 4s linear infinite;
animation-delay: -2s;
}
@keyframes snake {
0%, 100% {
clip-path: inset(0 0 calc(100% - 2px) 0);
}
25%{
clip-path: inset(0 0 0 calc(100% - 2px));
}
50%{
clip-path: inset(calc(100% - 2px) 0 0 0);
}
75%{
clip-path: inset(0 calc(100% - 2px) 0 0);
}
}
&lt;/style>
&lt;h1 id="成果展示">成果展示&lt;/h1>
&lt;p>&lt;button class="content result">我是内容&lt;/button>&lt;/p>
&lt;p>如果显示出现问题则说明你的浏览器不支持&lt;a class="link" href="https://caniuse.com/#search=clip-path" target="_blank" rel="noopener"
>clip-path&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://caniuse.com/#search=clip-path" target="_blank" rel="noopener"
>浏览器支持&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Chrome 55+&lt;/li>
&lt;li>Firefox 54+&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="主要思路">主要思路&lt;/h1>
&lt;blockquote>
&lt;p>使用&lt;code>伪元素&lt;/code>实现一个大于目标元素的背景板.&lt;br>
再使用&lt;code>clip-path&lt;/code>将其裁剪到只剩上/下/左/右一个边.&lt;br>
再使用&lt;code>animation&lt;/code>实现动画效果.&lt;/p>
&lt;/blockquote>
&lt;h1 id="实现过程">实现过程&lt;/h1>
&lt;p>写一个普通的&lt;code>button&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">content&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">180&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">transparent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>我是内容&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>加上&lt;code>::before&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">content&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">olivedrab&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="kc">olive&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;style>
.st::before {
content: '';
position: absolute;
top: -2px; bottom: -2px;
left: -2px; right: -2px;
background: olivedrab;
border: 2px solid olive;
z-index: -1;
}
&lt;/style>
&lt;p>&lt;button class="content st">我是内容&lt;/button>&lt;/p>
&lt;p>使用&lt;code>clip-path&lt;/code>裁剪&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">content&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c">/* 上 */&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c">/* 右 */&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="c">/* 下 */&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c">/* 左 */&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;style>
.block {
display: block;
}
.st21::before {
clip-path: inset(0 0 calc(100% - 2px) 0);
}
.st22::before {
clip-path: inset(0 0 0 calc(100% - 2px));
}
.st23::before {
clip-path: inset(0 calc(100% - 2px) 0 0);
}
.st24::before {
clip-path: inset(calc(100% - 2px) 0 0 0);
}
&lt;/style>
&lt;p>&lt;button class="content st block st21">我是内容&lt;/button>
&lt;button class="content st block st22">我是内容&lt;/button>
&lt;button class="content st block st23">我是内容&lt;/button>
&lt;button class="content st block st24">我是内容&lt;/button>&lt;/p>
&lt;p>使用&lt;code>animation&lt;/code>实现动画效果&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">content&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">olivedrab&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="kc">olive&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">animation&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">snake&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="kc">linear&lt;/span> &lt;span class="kc">infinite&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">@&lt;/span>&lt;span class="k">keyframes&lt;/span> &lt;span class="nt">snake&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">0&lt;/span>&lt;span class="o">%,&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="o">%&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">25&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">50&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">75&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;style>
.st1::before {
animation: snake 10s linear infinite;
}
&lt;/style>
&lt;p>&lt;button class="content st st1">我是内容&lt;/button>&lt;/p>
&lt;p>去掉&lt;code>伪元素&lt;/code>的背景&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">content&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">180&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">transparent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">content&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">content&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="kc">olive&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">animation&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">snake&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="kc">linear&lt;/span> &lt;span class="kc">infinite&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">@&lt;/span>&lt;span class="k">keyframes&lt;/span> &lt;span class="nt">snake&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">0&lt;/span>&lt;span class="o">%,&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="o">%&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">25&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">50&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">75&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">clip-path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">inset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;style>
.content3 {
width: 180px;
height: 64px;
margin: 0;
padding: 0;
border: none;
background: transparent;
position: relative;
font-size: 24px;
}
.content3::before {
content: '';
position: absolute;
top: -2px; bottom: -2px;
left: -2px; right: -2px;
}
.content3::before {
border: 2px solid olive;
animation: snake 4s linear infinite;
}
&lt;/style>
&lt;p>&lt;button class="content3">我是内容&lt;/button>&lt;/p>
&lt;p>再使用&lt;code>::after&lt;/code> 伪元素添加一个新的边框，再使用&lt;code>animation-delay&lt;/code> 错开动画时间&lt;/p>
&lt;p>&lt;button class="content result">我是内容&lt;/button>&lt;/p></description></item><item><title>Webpack中CSS样式的处理</title><link>https://chaosalphard.github.io/p/webpack%E4%B8%ADcss%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%A4%84%E7%90%86/</link><pubDate>Mon, 05 Aug 2019 22:24:12 +0000</pubDate><guid>https://chaosalphard.github.io/p/webpack%E4%B8%ADcss%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%A4%84%E7%90%86/</guid><description>&lt;h1 id="css样式的处理">CSS样式的处理&lt;/h1>
&lt;p>安装&lt;code>css-loader&lt;/code>和&lt;code>style-loader&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-batch" data-lang="batch">yarn add css-loader style-loader -D
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在index.js中引入.css文件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./index.css&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在webpack.config.js中配置css模块&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">mode&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;development&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">entry&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;./src/index.js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">output&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">filename&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;bundle.[hash:4].js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">__&lt;/span>&lt;span class="nx">dirname&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;dist&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">devServer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="nx">plugins&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">],&lt;/span>
&lt;span class="c1">// 模块
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 规则
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">rules&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 匹配.css 结尾的文件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">test&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sr">/\.css$/&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 可用字符串, 也可用对象
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// loader的顺序默认是从 右往左/下到上 执行
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// css-loader, 解析@import语法
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// style-loader, 把css 插入到head标签中
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">use&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">loader&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;style-loader&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">options&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 在顶部插入
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">insertAt&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;top&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s1">&amp;#39;css-loader&amp;#39;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="c1">// 也可以处理less文件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">test&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sr">/\.less$/&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">use&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">loader&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;style-loader&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">options&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 在顶部插入
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">insertAt&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;top&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s1">&amp;#39;css-loader&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// @import 解析
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s1">&amp;#39;less-loader&amp;#39;&lt;/span> &lt;span class="c1">// .less -&amp;gt; .css
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Git常用指令</title><link>https://chaosalphard.github.io/p/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</link><pubDate>Sat, 03 Aug 2019 20:44:37 +0000</pubDate><guid>https://chaosalphard.github.io/p/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</guid><description>&lt;h1 id="git常用指令">Git常用指令&lt;/h1>
&lt;p>&lt;code>git init&lt;/code>: 为当前文件夹初始化Git仓库&lt;/p>
&lt;p>&lt;code>git status&lt;/code>: 查看状态(modified, untracked)&lt;/p>
&lt;p>&lt;code>git add &amp;lt;file|path&amp;gt;&lt;/code>: 添加指定文件/文件夹到暂存区(staging index)&lt;/p>
&lt;p>&lt;code>git commit&lt;/code>: 提交暂存区的文件到版本库&lt;br>
&lt;code>git commit -m 'msg'&lt;/code>: 提交暂存区的文件到版本库&lt;br>
&lt;code>git commit -am 'msg'&lt;/code>: 跳过&lt;code>git add&lt;/code>步骤，直接提交所有&lt;strong>工作区(working directory)已追踪&lt;/strong>文件&lt;/p>
&lt;p>&lt;code>git log&lt;/code>: 查看提交信息/记录&lt;/p>
&lt;h2 id="git的三层结构">Git的三层结构&lt;/h2>
&lt;ul>
&lt;li>&lt;code>working directory&lt;/code>: 工作区&lt;/li>
&lt;li>&lt;code>staging index&lt;/code>: 暂存区&lt;/li>
&lt;li>&lt;code>git directory&lt;/code>: 版本库&lt;/li>
&lt;/ul>
&lt;h2 id="git文件的四种状态">Git文件的四种状态&lt;/h2>
&lt;ul>
&lt;li>&lt;code>Untracked&lt;/code>: 未被追踪&lt;/li>
&lt;li>&lt;code>Modified&lt;/code>: 已被修改，但未添加到暂存区&lt;/li>
&lt;li>&lt;code>Staged&lt;/code>: 添加到了暂存区，但未提交到版本库&lt;/li>
&lt;li>&lt;code>Committed&lt;/code>: 数据被储存在本地库中&lt;/li>
&lt;/ul></description></item><item><title>Webpack配置HTML Template</title><link>https://chaosalphard.github.io/p/webpack%E9%85%8D%E7%BD%AEhtml-template/</link><pubDate>Sat, 03 Aug 2019 19:25:57 +0000</pubDate><guid>https://chaosalphard.github.io/p/webpack%E9%85%8D%E7%BD%AEhtml-template/</guid><description>&lt;h1 id="webpack配置html-template">Webpack配置HTML template&lt;/h1>
&lt;p>安装html-webpack-plugin&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-batch" data-lang="batch">yarn add html-webpack-plugin -D
&lt;span class="p">:&lt;/span>&lt;span class="c1">: or&lt;/span>
npm install html-webpack-plugin -D
&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置webpack&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// 引入html-webpack-plugin模块
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">HtmlWebpackPlugin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;html-webpack-plugin&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">mode&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;development&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">entry&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;./src/index.js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">output&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// bundle.[hash].js: 给打包的文件追加hash
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 可指定长度: [hash:&amp;lt;length&amp;gt;]
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">filename&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;bundle.[hash:4].js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">__&lt;/span>&lt;span class="nx">dirname&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;dist&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">devServer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">port&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">progress&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">contentBase&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;./dev&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">compress&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">// 插件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">plugins&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="nx">HtmlWebpackPlugin&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="c1">// 模版文件路径
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;./src/index.html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 打包后的文件名字
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">filename&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;index.html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">minify&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 去除html中的双引号
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">removeAttributeQuotes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 合并为一行
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">collapseWhitespace&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">// 给打包的文件加上hash戳
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// &amp;lt;script src=bundle.js?5c5c6o9e&amp;gt;&amp;lt;/script&amp;gt;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">hash&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建index.html文件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">http-equiv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;X-UA-Compatible&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ie=edge&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Document&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- template --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>删除所有Git提交记录</title><link>https://chaosalphard.github.io/p/%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89git%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95/</link><pubDate>Sun, 14 Jul 2019 19:11:26 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89git%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95/</guid><description>&lt;h1 id="删除所有提交记录">删除所有提交记录&lt;/h1>
&lt;p>一种比较取巧的方法&lt;/p>
&lt;ul>
&lt;li>新建分支 &lt;code>git checkout --orphan latest_branch&lt;/code>&lt;/li>
&lt;li>添加所有文件 &lt;code>git add -A&lt;/code>&lt;/li>
&lt;li>提交更改 &lt;code>git commit -am &amp;quot;merge commit&amp;quot;&lt;/code>&lt;/li>
&lt;li>删除分支 &lt;code>git branch -D master&lt;/code>&lt;/li>
&lt;li>重命名当前分支 &lt;code>git branch -m master&lt;/code>&lt;/li>
&lt;li>强制更新存储库 &lt;code>git push -f origin master&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Webpack的安装与配置</title><link>https://chaosalphard.github.io/p/webpack%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 21 Jun 2019 23:22:15 +0000</pubDate><guid>https://chaosalphard.github.io/p/webpack%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid><description>&lt;blockquote>
&lt;p>webpack 是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。&lt;/p>
&lt;/blockquote>
&lt;h1 id="安装webpack">安装Webpack&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">:: 初始化
yarn init
:: 安装webpack 和 webpack-cli
:: -D表示是开发依赖, 上线时不需要
yarn add webpack webpack-cli -D
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="配置webpack">配置Webpack&lt;/h1>
&lt;blockquote>
&lt;p>从 Webpack v4.0.0 开始，可以不用引入配置文件。然而，webpack 仍然还是高度可配置的。&lt;br>
Webpack 默认配置文件名为 &lt;code>webpack.config.js&lt;/code>或&lt;code>webpackfile.js&lt;/code>。&lt;br>
也可以在启动时使用 &amp;ndash;config 参数指定配置文件名称&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// 引入path模块 (自带, 无需安装)
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;path&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 导出配置模块
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 打包模式 默认有两种 production|development
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// production: 生产模式
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// development: 开发模式
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">mode&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;development&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 入口文件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">entry&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;./src/index.js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 输出
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">output&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 打包后的文件名
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">filename&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;bundle.js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 打包后的路径 (要求必须是绝对路径)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">__&lt;/span>&lt;span class="nx">dirname&lt;/span>&lt;span class="cm">/*指当前路径*/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;dist&amp;#39;&lt;/span>&lt;span class="cm">/*指打包到的文件夹名称*/&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">// 开发服务器的配置
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">devServer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 端口
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">port&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 打包进度
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">progress&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 打包后文件的放置位置
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">contentBase&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;./dev&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 启用压缩
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">compress&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;h1 id="webpack打包指令">Webpack打包指令&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-batch" data-lang="batch">&lt;span class="p">:&lt;/span>&lt;span class="c1">: 因为安装在devDependencies 中, 所以需要用npx 来执行&lt;/span>
npx webpack
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="webpack打包后的文件">Webpack打包后的文件&lt;/h1>
&lt;p>Webpack 打包后的是一个自执行函数(IIFE), 该函数接收一个对象作为参数:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">modules&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="c1">// key: 模块的路径
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;./src/index.js&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="c1">// value: 函数
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">module&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">exports&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;const str = __webpack_require__(/*! ./str.js */ \&amp;#34;./src/str.js\&amp;#34;)\r\n\r\nconsole.log(`Hello ${str}`)\n\n//# sourceURL=webpack:///./src/index.js?&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}),&lt;/span>
&lt;span class="s2">&amp;#34;./src/str.js&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">module&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">exports&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;module.exports = &amp;#39;World&amp;#39;\n\n//# sourceURL=webpack:///./src/str.js?&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>函数内的实现&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// webpackBootstrap
&lt;/span>&lt;span class="c1">// webpack 启动函数
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">modules&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// The module cache
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// module 缓存
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">installedModules&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;span class="c1">// The require function
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 配置/实现require 方法
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// (moduleId = &amp;#34;./src/index.js&amp;#34;)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">moduleId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Check if module is in cache
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 检查module是否有缓存
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">installedModules&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">moduleId&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">installedModules&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">moduleId&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Create a new module (and put it into the cache)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 创建module
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">module&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">installedModules&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">moduleId&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">i&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">moduleId&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">l&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">exports&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="c1">// Execute the module function
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 从module中的id(key), 找到value(函数), 用过call()来执行函数
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">modules&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">moduleId&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// Flag the module as loaded
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 将module 标记为已加载(loaded)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// Return the exports of the module
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 返回module 的导出
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// expose the modules object (__webpack_modules__)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">modules&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// expose the module cache
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">installedModules&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// define getter function for harmony exports
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">getter&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">defineProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">enumerable&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">get&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">getter&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="c1">// define __esModule on exports
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">Symbol&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s1">&amp;#39;undefined&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">Symbol&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toStringTag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">defineProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Symbol&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toStringTag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Module&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">defineProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;__esModule&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="c1">// create a fake namespace object
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// mode &amp;amp; 1: value is a module id, require it
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// mode &amp;amp; 2: merge all properties of value into the ns
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// mode &amp;amp; 4: return value when already ns object
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// mode &amp;amp; 8|1: behave like require
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">mode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mode&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mode&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">mode&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">typeof&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">__&lt;/span>&lt;span class="nx">esModule&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">ns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ns&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">defineProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ns&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">enumerable&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mode&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">typeof&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ns&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="p">}.&lt;/span>&lt;span class="nx">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">ns&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="c1">// getDefaultExport function for compatibility with non-harmony modules
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">module&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">getter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">module&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">__&lt;/span>&lt;span class="nx">esModule&lt;/span> &lt;span class="o">?&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">getDefault&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">:&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">getModuleExports&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">getter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">getter&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">getter&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="c1">// Object.prototype.hasOwnProperty.call
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">o&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">object&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">property&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hasOwnProperty&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">object&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">property&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="p">};&lt;/span>
&lt;span class="c1">// __webpack_public_path__
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// Load entry module and return exports
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 入口模块
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">__&lt;/span>&lt;span class="nx">webpack_require__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;./src/index.js&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>ES6中的尾递归</title><link>https://chaosalphard.github.io/p/es6%E4%B8%AD%E7%9A%84%E5%B0%BE%E9%80%92%E5%BD%92/</link><pubDate>Sat, 01 Jun 2019 15:29:46 +0000</pubDate><guid>https://chaosalphard.github.io/p/es6%E4%B8%AD%E7%9A%84%E5%B0%BE%E9%80%92%E5%BD%92/</guid><description>&lt;p>假设要用&lt;code>JavaScript&lt;/code>实现一个阶乘函数，很容易想到用递归实现:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">// 24
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在上述代码中，由于最后一步返回了一个表达式(&lt;code>n * factorial(n-1)&lt;/code>)，所以会保留&lt;code>n&lt;/code>这个变量和函数&lt;code>factorial(n-1)&lt;/code>的调用位置等信息，从而形成一层层的调用帧。&lt;/p>
&lt;p>递归十分消耗内存，因为要同时保存非常多个调用记录，容易出现&amp;quot;栈溢出&amp;quot;错误&lt;code>(Stack Overflow)&lt;/code>&lt;/p>
&lt;!-- more -->
&lt;h1 id="尾调用">尾调用&lt;/h1>
&lt;p>尾调用是指的一个函数的最后一个动作是返回另一个函数的调用&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">foo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">meh&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 并不一定要在函数尾部，只要是最后一步操作即可
&lt;/span>&lt;span class="c1">// 以下meh 和nco 函数均属于尾调用
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">foo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">meh&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">nco&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- moer -->
&lt;p>不属于尾调用的情况&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// 函数调用后还有赋值操作，所以不属于尾调用，即使语义一样
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">foo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">meh&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">tmp&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 函数调用后还有相加操作
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">foo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">meh&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 没有返回函数调用
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">foo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">meh&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="尾调用优化">尾调用优化&lt;/h1>
&lt;blockquote>
&lt;p>　　函数调用会在内存形成一个&amp;quot;调用记录&amp;quot;，又称&amp;quot;调用帧&amp;quot; (call frame)，保存调用位置和内部变量等信息。如果在函数A的内部调用函数B，那么在A的调用帧上方，还会形成一个B的调用帧。等到B运行结束，将结果返回到A，B的调用帧才会消失。如果函数B内部还调用函数C，那就还有一个C的调用帧，以此类推。所有的调用帧，就形成一个&amp;quot;调用栈&amp;quot; (call stack)。&lt;br>
　　尾调用由于是函数的最后一步操作，所以不需要保留外层函数的调用帧，因为调用位置、内部变量等信息都不会再用到了，只要直接用内层函数的调用帧，取代外层函数的调用帧就可以了。&lt;/p>
&lt;/blockquote>
&lt;p>举例:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">item&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">foo&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">getItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">foo&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上述代码中，如果函数&lt;code>getItem&lt;/code>不是尾调用，函数&lt;code>foo&lt;/code>就要保存内部变量&lt;code>m&lt;/code>和&lt;code>n&lt;/code>的值，以及函数&lt;code>getItem&lt;/code>的调用位置等信息。&lt;br>
但如果调用&lt;code>getItem&lt;/code>后，函数&lt;code>foo&lt;/code>就结束了，所以执行到最后一步，可以删除&lt;code>foo&lt;/code>的调用帧，只保留&lt;code>getItem(3)&lt;/code>的调用帧。&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;尾调用优化&amp;rdquo; (Tail call optimization)，即只保留内层函数的调用帧。&lt;br>
&lt;strong>PS: 只有不再用到外层函数的内部变量，内层函数的调用帧才会取代外层函数的调用帧，否则就无法进行&amp;quot;尾调用优化&amp;quot;。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h1 id="尾递归">尾递归&lt;/h1>
&lt;p>函数调用自身，称为递归；如果尾调用自身，就称为尾递归。&lt;/p>
&lt;blockquote>
&lt;p>对于尾递归来说，由于只存在一个调用帧，所以能有效的避免&amp;quot;栈溢出&amp;quot;错误的发生。&lt;/p>
&lt;/blockquote>
&lt;!-- &lt;s>"尾调用优化"对递归操作意义重大，所以ES6也明确规定了，所有`ECMAScript`的实现，都必须部署"尾调用优化"。&lt;/s> -->
&lt;p>改写之前的代码:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">total&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;use strict&amp;#34;&lt;/span>
&lt;span class="nx">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">total&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">total&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">n&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">total&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>ES6的尾调用优化只在严格模式下开启，正常模式是无效的&lt;/strong>&lt;/p>
&lt;p>在正常模式下，函数内部有两个变量，可以跟踪函数的调用栈。&lt;/p>
&lt;ul>
&lt;li>arguments: 返回调用时函数的参数。&lt;/li>
&lt;li>caller: 返回调用当前函数的那个函数。&lt;/li>
&lt;/ul>
&lt;p>尾调用优化发生时，函数的调用栈会改写，因此上面两个变量就会失真。严格模式禁用这两个变量，所以尾调用模式仅在严格模式下生效。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/tc39/proposal-ptc-syntax/blob/master/README.md">https://github.com/tc39/proposal-ptc-syntax/blob/master/README.md&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>补充(2019.06.02): 出于某些因素的考虑，目前V8引擎中的尾递归优化已经被去掉了&lt;/strong>&lt;/p>
&lt;p>大概原因可以看这篇博客:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://imweb.io/topic/5a244260a192c3b460fce275">https://imweb.io/topic/5a244260a192c3b460fce275&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="尾递归优化的实现">尾递归优化的实现&lt;/h1>
&lt;p>正常模式下如何实现尾递归优化呢?&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">y&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">100000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>尾递归之所以需要优化，原因是调用栈太多，造成溢出，那么只要减少调用栈，就不会溢出。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">tco&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">active&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">accumulated&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">accumulator&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">accumulated&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">arguments&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">active&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">active&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">accumulated&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">accumulated&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">shift&lt;/span>&lt;span class="p">());&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">active&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">tco&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">y&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">100000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Vue Router的安装与使用</title><link>https://chaosalphard.github.io/p/vue-router%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 25 Jan 2019 00:10:10 +0000</pubDate><guid>https://chaosalphard.github.io/p/vue-router%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid><description>&lt;h1 id="vue-router-的基本用法">Vue Router 的基本用法&lt;/h1>
&lt;h2 id="安装vue路由">安装Vue路由&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-batch" data-lang="batch">vue add @vue/router
&lt;span class="p">:&lt;/span>&lt;span class="c1">: 或者&lt;/span>
npm install vue-router -S
yarn add vue-router
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="引入路由">引入路由&lt;/h2>
&lt;p>写在main.js文件中&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// 引入Router
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="nx">Router&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;vue-router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 引入路由跳转的组件
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="nx">Home&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./components/Home&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 配置Router
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">VueRouter&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="c1">// 路由模式 (hash | history | abstract(如果没有发现浏览器API, 会自动进入此模式))
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 使用history模式可以去掉地址栏的&amp;#39;#&amp;#39;字符, 但需要后端配置支持
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// history 模式利用window.history API 来完成页面的跳转而无需重新加载页面
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">mode&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;history&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">base&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BASE_URL&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">routes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;home&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">component&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Home&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/about&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;about&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">component&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="kr">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./views/About.vue&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">// 使用Router
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">Vue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Router&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="nx">Vue&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">router&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">router&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">App&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}).&lt;/span>&lt;span class="nx">$mount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;#app&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>写在template中&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 使用路由名称跳转 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">router-link&lt;/span> &lt;span class="na">:to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{name:&amp;#39;home&amp;#39;}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>主页&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">router-link&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">router-link&lt;/span> &lt;span class="na">:to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{name:&amp;#39;about&amp;#39;}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>关于&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">router-link&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 直接指定跳转路径 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">router-link&lt;/span> &lt;span class="na">to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>主页&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">router-link&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;p>也可将Router配置抽离到单独的js文件中&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">VueRouter&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">mode&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;history&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">base&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BASE_URL&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">routes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 路径
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 名称
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;home&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 挂载的组件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">component&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Home&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/about&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;about&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 懒加载
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">component&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="kr">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./views/About.vue&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="c1">// 子路由
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;concat&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;concat&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">component&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Concat&lt;/span>
&lt;span class="p">},{&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;guide&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;guide&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">component&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Guide&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 子路由下的子路由
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="nx">redirect&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;concat&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 匹配所有(上面没有匹配到的)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// 重定向
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">redirect&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/error/notfound&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="动态路由匹配">动态路由匹配&lt;/h2>
&lt;p>使用&lt;code>:&lt;/code> 标记路径参数，当匹配到一个路由时，参数值会被设置到&lt;code>this.$route.params&lt;/code>，以便在组件内使用。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Router&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">routes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/user/:id&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">component&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">User&lt;/span>
&lt;span class="p">}]&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以设置多段路径参数&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">路由设置&lt;/th>
&lt;th style="text-align:left">匹配路径&lt;/th>
&lt;th style="text-align:left">Params&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">/user/:id&lt;/td>
&lt;td style="text-align:left">/user/233&lt;/td>
&lt;td style="text-align:left">{id: &amp;lsquo;233&amp;rsquo;}&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">/user/:id/name/:name&lt;/td>
&lt;td style="text-align:left">/user/233/name/ilirus&lt;/td>
&lt;td style="text-align:left">{id: &amp;lsquo;233&amp;rsquo;, name: &amp;lsquo;ilirus&amp;rsquo;}&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>当使用路径参数时, 例如&lt;code>/user/233&lt;/code>到&lt;code>/user/450&lt;/code>, 原来的组件实例会被复用, 这导致组件的生命周期钩子不会被调用&lt;/strong>&lt;/p>
&lt;p>所以应该对&lt;code>$router&lt;/code>监测变化(watch)，或者使用导航守卫&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">watch&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;$route&amp;#39;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">beforeRouteUpdate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="高级匹配模式">高级匹配模式&lt;/h2>
&lt;p>&lt;code>vue-router&lt;/code>使用&lt;code>path-to-regexp&lt;/code>作为路径匹配引擎，所以支持更高级的匹配模式。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Router&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">routes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="c1">// 使用?来将参数定义为可选项
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/optional/:para?&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/optional/(:para/)?name&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 使用正则来实现仅匹配数字
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/number/:id(\\d+)&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="在javascript中进行路由跳转">在JavaScript中进行路由跳转&lt;/h2>
&lt;h3 id="routerpush">router.push()&lt;/h3>
&lt;p>&lt;code>router.push(location, onComplete?, onAbort?)&lt;/code>&lt;br>
此方法会向history 栈添加一个新记录, 所以当用户点击后退按钮时，会返回到之前的URL&lt;/p>
&lt;p>此方法接收一个字符串路径，或者一个描述地址的对象作为参数&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// 字符串
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 对象
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/user&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;user&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="c1">// 带参数
&lt;/span>&lt;span class="c1">// -&amp;gt; /user/233
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;user&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">params&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;233&amp;#39;&lt;/span>&lt;span class="p">}})&lt;/span>
&lt;span class="c1">// -&amp;gt; /user?id=233
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;user&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">query&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;233&amp;#39;&lt;/span>&lt;span class="p">}})&lt;/span>
&lt;span class="c1">// 如果提供了path, 那么param会被忽略, query则不会
&lt;/span>&lt;span class="c1">// -&amp;gt; /user/233
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/user/233&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="c1">// -&amp;gt; /user
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/user&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">params&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;233&amp;#39;&lt;/span>&lt;span class="p">}})&lt;/span>
&lt;span class="c1">// -&amp;gt; /user?id=233
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;user&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">params&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;233&amp;#39;&lt;/span>&lt;span class="p">}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>onComplete&lt;/code>和&lt;code>onAbort&lt;/code> 回调函数会在导航成功完成(在所有的异步钩子被解析之后) 或者终止(导航到相同的路由、或在当前导航完成之前导航到另一个不同的路由) 的时候进行调用&lt;/p>
&lt;h3 id="routerreplace">router.replace()&lt;/h3>
&lt;p>&lt;code>router.replace(location, onComplete?, onAbort?)&lt;/code>&lt;br>
此方法会替换掉当前的history 记录, 所以当用户点击后退按钮时，不会返回到之前的URL&lt;/p>
&lt;p>其余用法同&lt;code>router.push()&lt;/code>方法&lt;/p>
&lt;h3 id="routergo">router.go()&lt;/h3>
&lt;p>&lt;code>router.go(n)&lt;/code>&lt;br>
此方法接收一个整数作为参数，意为在history 记录中前进多少步&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// 前进一步
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">go&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 后退一步
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">go&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 前进十步, 如果记录不足, 则不会跳转
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">go&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="视图命名">视图命名&lt;/h2>
&lt;p>可以在界面中拥有多个单独命名的视图，而不是只有一个单独的出口。&lt;/p>
&lt;p>如果 router-view 没有设置名字，那么默认为 default。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">router-view&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">router-view&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">router-view&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">router-view&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Router&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">routes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">components&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Nav&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">main&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Main&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}]&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="导航守卫">导航守卫&lt;/h1>
&lt;blockquote>
&lt;p>参数或查询的改变并不会触发 进入/离开 的导航守卫。可以通过观察 $route 对象来应对这些变化，或使用 beforeRouteUpdate 的组件内守卫。&lt;/p>
&lt;/blockquote>
&lt;h2 id="全局前置守卫">全局前置守卫&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Router&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="c1">// 全局前置守卫
&lt;/span>&lt;span class="c1">// to: 即将要进入的目标路由
&lt;/span>&lt;span class="c1">// from: 正要离开的路由
&lt;/span>&lt;span class="c1">// next: 放行, 不调用next方法则不会进入目标路由, 根据参数的不同, 效果也不同
&lt;/span>&lt;span class="c1">// next(): 进行管道中的下一个钩子, 如果全部钩子执行完了, 则导航的状态就是confirmed
&lt;/span>&lt;span class="c1">// next(false): 中断当前的导航, 如果浏览器的URL改变了, 会重置到from路由对应的地址
&lt;/span>&lt;span class="c1">// next(&amp;#39;/&amp;#39;) | next({path: &amp;#39;/&amp;#39;}): 跳转到另一个地址, 会使当前的导航被中断, 然后进行一个新的导航
&lt;/span>&lt;span class="c1">// next(Error): 导航会被终止, 且会触发router.onError()
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">beforeEach&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>当一个导航触发时，全局前置守卫按照创建顺序调用。守卫是异步解析执行，此时导航在所有守卫&lt;code>resolve&lt;/code>完之前会一直处于等待中。&lt;/p>
&lt;h2 id="全局后置钩子">全局后置钩子&lt;/h2>
&lt;p>此方法不接收&lt;code>next()&lt;/code>函数也不会改变导航本身&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Router&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="nx">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">afterEach&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="路由独享守卫">路由独享守卫&lt;/h2>
&lt;p>用法与全局前置守卫相同&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Router&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">routes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/home&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">component&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Home&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">beforeEnter&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}]&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="组件内的守卫">组件内的守卫&lt;/h2>
&lt;p>可以在路由组件内直接定义这些路由导航守卫&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// 在渲染该组件的对应路由被 confirm 前调用
&lt;/span>&lt;span class="c1">// 不能 获取组件实例 this, 因为当守卫执行前，组件实例还没被创建
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">beforeRouteEnter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="c1">// 在当前路由改变，但是该组件被复用时调用
&lt;/span>&lt;span class="c1">// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，
&lt;/span>&lt;span class="c1">// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。
&lt;/span>&lt;span class="c1">// 可以访问组件实例 this
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">beforeRouteUpdate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="c1">// 导航离开该组件的对应路由时调用
&lt;/span>&lt;span class="c1">// 可以访问组件实例 this
&lt;/span>&lt;span class="c1">// 通常用来阻止用户在还未保存修改前突然离开
&lt;/span>&lt;span class="c1">// 该导航可以通过 next(false) 来取消
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">beforeRouteLeave&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>beforeRouteEnter&lt;/code> 不能访问到this, 但可以通过给&lt;code>next()&lt;/code>传递回调来访问组件实例, 且只有&lt;code>beforeRouteEnter&lt;/code>方法支持给&lt;code>next()&lt;/code>函数传递回调&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">beforeRouteEnter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vm&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="过渡动效">过渡动效&lt;/h1>
&lt;p>使用&lt;code>transition&lt;/code>组件给&lt;code>router-view&lt;/code>添加一些过渡效果&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">transition&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;slide&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">router-view&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">router-view&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">transition&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以动态设置过渡效果&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">transition&lt;/span> &lt;span class="na">:name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;transitionType&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">router-view&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">router-view&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">transition&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">watch&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;$route&amp;#39;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">toDepth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">to&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">length&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fromDepth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">length&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transitionType&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">toDepth&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">fromDepth&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;slide-right&amp;#39;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;slide-left&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>使用Vue-cli搭建Vue项目</title><link>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8vue-cli%E6%90%AD%E5%BB%BAvue%E9%A1%B9%E7%9B%AE/</link><pubDate>Mon, 10 Dec 2018 12:20:20 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8vue-cli%E6%90%AD%E5%BB%BAvue%E9%A1%B9%E7%9B%AE/</guid><description>&lt;h1 id="使用vue-cli搭建vue项目">使用Vue-cli搭建Vue项目&lt;/h1>
&lt;h2 id="安装vue-cli">安装Vue-cli&lt;/h2>
&lt;p>在安装Vue-cli之前需要先安装&lt;code>node&lt;/code>环境以及&lt;code>npm&lt;/code>包管理工具&lt;/p>
&lt;p>安装好之后可以通过以下命令查看版本&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-batch" data-lang="batch">&lt;span class="p">:&lt;/span>&lt;span class="c1">: 查看node版本&lt;/span>
node -v
&lt;span class="p">:&lt;/span>&lt;span class="c1">: 查看npm版本&lt;/span>
npm -v
&lt;/code>&lt;/pre>&lt;/div>&lt;p>全局安装Vue-cli&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-batch" data-lang="batch">npm install @vue/cli -g
&lt;span class="p">:&lt;/span>&lt;span class="c1">: 或者&lt;/span>
yarn global add @vue/cli
&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装后使用&lt;code>vue --version&lt;/code>来查看版本&lt;/p>
&lt;p>运行以下命令在&lt;strong>当前&lt;/strong>文件夹下创建一个项目&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-batch" data-lang="batch">&lt;span class="p">:&lt;/span>&lt;span class="c1">: 命令行创建项目&lt;/span>
vue create &lt;span class="p">&amp;lt;&lt;/span>projectName&amp;gt;
&lt;span class="p">:&lt;/span>&lt;span class="c1">: 使用可视化项目创建工具&lt;/span>
vue ui
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建完成后，进入到刚才创建的文件夹下，运行&lt;code>npm run serve&lt;/code>即可启动项目&lt;/p>
&lt;!-- more -->
&lt;h2 id="项目结构">项目结构&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-batch" data-lang="batch">&lt;span class="p">&amp;lt;&lt;/span>projectName&amp;gt;
├─node_modules
├─public
│ └─index.html
├─src
│ ├─assets
│ ├─components
│ ├─App.vue
│ └─main.js
└package.json
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>package.json&lt;/code> 用于记录项目依赖的库&lt;/li>
&lt;li>&lt;code>assets&lt;/code> 用于存放静态资源，比如图片&lt;/li>
&lt;li>&lt;code>components&lt;/code> 用于存放组件&lt;/li>
&lt;li>&lt;code>App.vue&lt;/code> 根组件&lt;/li>
&lt;li>&lt;code>main.js&lt;/code> 项目入口脚本&lt;/li>
&lt;/ul>
&lt;h2 id="写一个hello-world">写一个Hello World&lt;/h2>
&lt;p>写在vue文件中&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="c">&amp;lt;!-- 模板: html结构 --&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- template中有且只能有一个根元素 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;app&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{msg}}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 行为: 逻辑处理 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;app&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">msg&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Hello World&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 样式: 样式表 --&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 加入scope关键词代表样式仅作用于当前组件中 --&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- &amp;lt;style scope&amp;gt;&amp;lt;/style&amp;gt; --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">#&lt;/span>&lt;span class="nn">app&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#2c3e50&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>写在main.js中&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// 引入Vue
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="nx">Vue&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;span class="c1">// 引入根组件
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./App.vue&amp;#39;&lt;/span>
&lt;span class="c1">// 阻止Vue在启动时生成生产提示
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">Vue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">productionTip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;span class="c1">// 实例化Vue对象
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Vue&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">App&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}).&lt;/span>&lt;span class="nx">$mount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;#app&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 也可使用以下方式
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Vue&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">el&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;#app&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">template&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;App/&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">components&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建并使用自己的组件">创建并使用自己的组件&lt;/h2>
&lt;p>在/src/components目录下创建&lt;code>.vue&lt;/code>文件，注册之后在&lt;code>.vue&lt;/code>文件中可以使用&lt;code>&amp;lt;compName/&amp;gt;&lt;/code>或&lt;code>&amp;lt;compName&amp;gt;&amp;lt;/compName&amp;gt;&lt;/code>的形式来使用组件&lt;/p>
&lt;h3 id="全局注册组件">全局注册组件&lt;/h3>
&lt;p>在&lt;code>main.js&lt;/code>中注册组件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// 引入组件
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="nx">compName&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./components/compName&amp;#39;&lt;/span>
&lt;span class="c1">// 全局注册组件
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">Vue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">component&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;compName&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">compName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="局部注册组件">局部注册组件&lt;/h3>
&lt;p>在要注册组件的&lt;code>.vue&lt;/code>文件中&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c1">// 引入组件
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="nx">compName&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./components/compName.vue&amp;#39;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;app&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">msg&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Hello World&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">//局部注册组件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">components&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;compName&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">compName&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="组件间的传值props">组件间的传值(props)&lt;/h2>
&lt;h3 id="父组件向子组件传值">父组件向子组件传值&lt;/h3>
&lt;p>父组件中给子组件绑定属性值&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;app&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">compName&lt;/span> &lt;span class="na">v-bind:msg&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;msg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">HelloWorld&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./components/HelloWorld.vue&amp;#39;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;app&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">msg&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Hello World&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">components&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">HelloWorld&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在子组件中获取&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;HelloWorld&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">msg&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">String&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Def&amp;#39;&lt;/span> &lt;span class="c1">// 默认值
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 或者 --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;HelloWorld&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">msg&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">String&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="c1">//required 为true 表示这个参数必须被传入
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="子组件向父组件传值">子组件向父组件传值&lt;/h3>
&lt;p>子组件中注册事件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">methods&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">foo&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$emit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctmEvent&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">trsValue&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>ctmEvent&lt;/code>即为注册的事件名称&lt;br>
&lt;code>trsValue&lt;/code>即为向父组件传递的值&lt;/p>
&lt;p>父组件中绑定事件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">compName&lt;/span> &lt;span class="na">v-on:ctmEvent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;fun($event)&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>父组件中绑定事件后，当子组件触发事件后，会执行对应的函数，使用&lt;code>$event&lt;/code> 来获取到子组件传递过来的值&lt;/p>
&lt;p>定义函数来处理子组件传递过来的值，这里的&lt;code>para&lt;/code>对应的是&lt;code>$event&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">fun&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">para&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">para&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="组件的生命周期钩子函数">组件的生命周期(钩子函数)&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;app&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="nx">methods&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="c1">// 组件实例化之前
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 数据观测(data observer)和event/watcher 事件配置之前被调用
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">beforeCreate&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="c1">// 组件实例化完毕, 但页面还没显示
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 实例创建完成后立即被调用, 数据观测(data observer)和event/watcher 已配置, $el属性不可见
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">created&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="c1">// 组件挂载之前, 页面依然未显示, (但虚拟Dom 已经配置 (存疑))
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 在挂载前被调用, 相关render 函数首次被调用
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">beforeMount&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="c1">// 组件挂载后, 此方法执行完成后, 页面显示
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// el 被新创建的vm.$el替换并挂载到实例上之后调用
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">mounted&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="c1">// 组件更新前调用(此时仍然可以访问到更新前的Dom)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">beforeUpdate&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="c1">// 组件更新后调用(Dom 更新后调用)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">updated&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="c1">// keep-alive 组件激活时调用
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">activated&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="c1">// keep-alive 组件停用时调用
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">deactivated&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="c1">// 组件销毁前
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">beforeDestroy&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="c1">// 组件销毁
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">destroyed&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="c1">// 捕获来自子组件的错误时调用
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 可以返回false 以阻止错误继续向上传播
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">errorCaptured&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Error&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">InfoString&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Kotlin学习笔记03</title><link>https://chaosalphard.github.io/p/kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003/</link><pubDate>Sat, 08 Dec 2018 20:02:20 +0000</pubDate><guid>https://chaosalphard.github.io/p/kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003/</guid><description>&lt;h1 id="kotlin中的类">Kotlin中的类&lt;/h1>
&lt;h2 id="类">类&lt;/h2>
&lt;h3 id="伴生对象">伴生对象&lt;/h3>
&lt;p>由于Kotlin没有静态方法，在大多数情况下，官方建议简单地使用&lt;code>包级&lt;/code>函数。&lt;br>
如果需要一个&lt;code>可以无需类实例来调用，但需要访问类内部&lt;/code>的函数。&lt;br>
可以把它写成一个用&lt;code>companion&lt;/code>修饰的对象内方法。&lt;br>
&lt;code>companion&lt;/code>修饰的对象为伴生对象。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">companion&lt;/span> &lt;span class="k">object&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">isEmpty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Boolean&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">str&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="单例类">单例类&lt;/h3>
&lt;p>伴生对象更多的用途是用来创建一个单例类。&lt;br>
如果只是简单的写法，直接用伴生对象返回一个&lt;code>val&lt;/code>修饰的外部类对象就可以了，&lt;br>
但是更多的时候我们希望在类被调用的时候才去初始化他的对象。&lt;br>
以下代码将线程安全问题交给虚拟机在静态内部类加载时处理:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">class&lt;/span> &lt;span class="nc">Single&lt;/span> &lt;span class="k">private&lt;/span> &lt;span class="k">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">companion&lt;/span> &lt;span class="k">object&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">get&lt;/span>&lt;span class="p">():&lt;/span>&lt;span class="n">Single&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Holder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">instance&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">private&lt;/span> &lt;span class="k">object&lt;/span> &lt;span class="nc">Holder&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">val&lt;/span> &lt;span class="py">instance&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Single&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;h3 id="动态代理">动态代理&lt;/h3>
&lt;p>Kotlin原生支持动态代理:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">interface&lt;/span> &lt;span class="nc">Animal&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">bark&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Dog&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">Animal&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">bark&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Wang Wang&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Cat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">animal&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Animal&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Animal&lt;/span> &lt;span class="k">by&lt;/span> &lt;span class="n">animal&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Array&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">&amp;gt;)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">Cat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Dog&lt;/span>&lt;span class="p">()).&lt;/span>&lt;span class="n">bark&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="伪多继承">伪多继承&lt;/h3>
&lt;p>Kotlin 的动态代理更多的是用在一种需要多继承的场景。&lt;/p>
&lt;p>使用一个代理类实现所有需要获取信息的接口方法。然后让不同的子类去实现所需的接口，请求统一交给代理类完成。&lt;br>
这样不仅维护网络请求信息方便，而且每个类不会有额外多出来的方法。&lt;/p>
&lt;p>还是用猫狗来举例:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">interface&lt;/span> &lt;span class="nc">Animal&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">bark&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">interface&lt;/span> &lt;span class="nc">Food&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">eat&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Delegate&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Animal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Food&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">eat&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;mouse&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">bark&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Nyan&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Cat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">animal&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Animal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">food&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Food&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Animal&lt;/span> &lt;span class="k">by&lt;/span> &lt;span class="n">animal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Food&lt;/span> &lt;span class="k">by&lt;/span> &lt;span class="n">food&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nd">@JvmStatic&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Array&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">&amp;gt;)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">val&lt;/span> &lt;span class="py">delegate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Delegate&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Delegate&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">Cat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">delegate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">delegate&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">bark&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Kotlin学习笔记02</title><link>https://chaosalphard.github.io/p/kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002/</link><pubDate>Thu, 06 Dec 2018 15:08:02 +0000</pubDate><guid>https://chaosalphard.github.io/p/kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002/</guid><description>&lt;h1 id="kotlin基本语法">Kotlin基本语法&lt;/h1>
&lt;h2 id="变量常量的定义">变量、常量的定义&lt;/h2>
&lt;p>&lt;code>[修饰符] &amp;lt;var|val&amp;gt; &amp;lt;名称&amp;gt; : &amp;lt;类型&amp;gt; = &amp;lt;赋值&amp;gt;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="c1">//var 代表变量，可被更改
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="py">age&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">18&lt;/span>
&lt;span class="c1">//val 代表常量, 定义后不能被修改, 定义时必须赋值
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">val&lt;/span> &lt;span class="py">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Ilirus&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="基本数据类型">基本数据类型&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">var&lt;/span> &lt;span class="py">boolean&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Boolean&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">false&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">char&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Char&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="sc">&amp;#39;a&amp;#39;&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">byte&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Byte&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">127&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">short&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Short&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">32767&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">int&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">2147483647&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">long&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">9223372036854775807&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">float&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Float&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">2.33f&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">double&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Double&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">3.1415926&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;h2 id="类型检测与自动转换">类型检测与自动转换&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">fun&lt;/span> &lt;span class="nf">getStrLength&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Any&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="k">is&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="c1">//进行类型判断后, o会自动被转换为String类型
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="m">0&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="返回空值与空值检测">返回空值与空值检测&lt;/h2>
&lt;p>如果引用或函数的返回值可能为空值，则必须显式标记nullable&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="c1">//在类型后面加上一个问号, 表示这个对象可能为空
&lt;/span>&lt;span class="c1">//用两个感叹号表示一定不为空
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">fun&lt;/span> &lt;span class="nf">getStuName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stu&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Any&lt;/span>&lt;span class="p">?):&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">?&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stu&lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="k">null&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">stu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getName&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">null&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Kotlin的空值检测能有效的避免&lt;code>NPE&lt;/code>(NullPointException) 的出现&lt;/p>
&lt;p>例如这句代码&lt;code>student?.getName()&lt;/code>，只会在student不为空时执行&lt;br>
相反，这句代码&lt;code>student?:student=Student()&lt;/code>，只会在student为空时执行&lt;/p>
&lt;p>如果要执行代码块的话，可以这样写&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="c1">//data不为空执行
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">data&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1">// do something
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">//data为空执行
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">data&lt;/span>&lt;span class="o">?:&lt;/span>&lt;span class="n">let&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1">// do something
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">//或者
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">//data不为空执行
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">data&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1">// do something
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">//data为空执行
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">data&lt;/span>&lt;span class="o">?:&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1">// do something
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="run与let">run与let&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">val&lt;/span> &lt;span class="py">str&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Ilirus&amp;#34;&lt;/span>
&lt;span class="n">str&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">it&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">str&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">let&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">str&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="when关键词">&lt;code>when&lt;/code>关键词&lt;/h2>
&lt;p>when类似于Java中的switch&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">fun&lt;/span> &lt;span class="nf">printType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">when&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">is&lt;/span> &lt;span class="n">Int&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Int&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">is&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;String&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toUpperCase&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">is&lt;/span> &lt;span class="n">Char&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Char&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Other&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="in关键词">&lt;code>in&lt;/code>关键词&lt;/h2>
&lt;p>判断数字是否在某一区间内&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="m">1.&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;yes&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">!in&lt;/span> &lt;span class="m">1.&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;no&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>遍历集合&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;item: &lt;/span>&lt;span class="si">$item&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">withIndex&lt;/span>&lt;span class="p">()){&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">$index&lt;/span>&lt;span class="s2"> - &lt;/span>&lt;span class="si">$item&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//判断集合中是否含有指定对象
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">student&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">person&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;yes&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="函数">函数&lt;/h2>
&lt;h3 id="函数的声明">函数的声明&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="c1">//[修饰符] fun &amp;lt;函数名&amp;gt;([参数]) : &amp;lt;返回类型&amp;gt;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">fun&lt;/span> &lt;span class="nf">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">+&lt;/span>&lt;span class="n">b&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//方法体只有一条语句时可简化
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">fun&lt;/span> &lt;span class="nf">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">+&lt;/span>&lt;span class="n">b&lt;/span>
&lt;span class="c1">//方法为public时, 必须显式声明返回类型
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">public&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">+&lt;/span>&lt;span class="n">b&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>不返回值&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">fun&lt;/span> &lt;span class="nf">printSum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Unit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">+&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//可省略Unit关键词, 即使方法是public修饰的
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">public&lt;/span> &lt;span class="n">printSum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">+&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="函数默认参数">函数默认参数&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">fun&lt;/span> &lt;span class="nf">hello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;User&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Hello &lt;/span>&lt;span class="si">$name&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接调用&lt;code>hello()&lt;/code>，将得到默认字符串&lt;code>&amp;quot;Hello User&amp;quot;&lt;/code>&lt;br>
也可以自己传入参数&lt;code>hello(&amp;quot;Ilirus&amp;quot;)&lt;/code>，来得到&lt;code>&amp;quot;Hello Ilirus&amp;quot;&lt;/code>&lt;/p>
&lt;p>如果函数有较多的参数时，可以使用多行参数的写法&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">fun&lt;/span> &lt;span class="nf">hello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;User&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">sid&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;Hello &lt;/span>&lt;span class="si">$name&lt;/span>&lt;span class="s2"> Your SID is &lt;/span>&lt;span class="si">$sid&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="变参函数">变参函数&lt;/h3>
&lt;p>使用&lt;code>vararg&lt;/code>来表示这是一个变长参数&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">fun&lt;/span> &lt;span class="nf">hasEmpty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">vararg&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Any&lt;/span>&lt;span class="p">?):&lt;/span> &lt;span class="n">Boolean&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="k">it&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="k">null&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">equals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">it&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="扩展函数">扩展函数&lt;/h3>
&lt;p>给目标类添加一个方法，使其可以在当前类中被使用&lt;/p>
&lt;p>receiverType: 表示函数的接收者，也就是函数扩展的对象&lt;br>
functionName: 扩展函数的名称&lt;br>
params: 扩展函数的参数，可以为NULL&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">fun&lt;/span> &lt;span class="nf">receiverType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">functionName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="c1">//body
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="c1">//定义一个User类
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="nc">User&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">?&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">null&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">//在另一个类(当前类)中扩展User类
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">fun&lt;/span> &lt;span class="nf">User&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">name&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">User&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getName&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">?&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//在当前类中执行User类的扩展方法
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">fun&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Array&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">&amp;gt;){&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">usr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Ilirus&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getName&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="注意事项">注意事项&lt;/h4>
&lt;p>&lt;strong>其实扩展函数是静态解析的，而并不是真的给类添加了方法&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">open&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">Animal&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Dog&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Animal&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">object&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">Animal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bark&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;animal&amp;#34;&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">Dog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bark&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;dog&amp;#34;&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">Animal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">printBark&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">anim&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Animal&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">anim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bark&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nd">@JvmStatic&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Array&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">&amp;gt;)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">Animal&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">printBark&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Dog&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最终输出的是&lt;code>animal&lt;/code>，而不是&lt;code>dog&lt;/code>&lt;/p>
&lt;p>因为扩展方法是静态解析的，在添加扩展方法的时候类型为&lt;code>Animal&lt;/code>，那么即便运行时传入了子类对象，也依旧会执行参数中声明时类型的方法。&lt;/p>
&lt;h3 id="函数入参">函数入参&lt;/h3>
&lt;p>在Kotlin中，可以将一个函数作为参数传递给另一个函数&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">fun&lt;/span> &lt;span class="nf">checkEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Array&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Any&lt;/span>&lt;span class="p">&amp;gt;,&lt;/span> &lt;span class="n">callback&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Unit&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Unit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">callback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">method&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">Any&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">Unit&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">it&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">checkEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">method&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Kotlin学习笔记01</title><link>https://chaosalphard.github.io/p/kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/</link><pubDate>Wed, 05 Dec 2018 16:43:44 +0000</pubDate><guid>https://chaosalphard.github.io/p/kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/</guid><description>&lt;h1 id="kotlin项目的创建">Kotlin项目的创建&lt;/h1>
&lt;h2 id="创建一个kotlin项目">创建一个Kotlin项目&lt;/h2>
&lt;ul>
&lt;li>Create Project -&amp;gt; Kotlin
&lt;ul>
&lt;li>选择Kotlin/JVM 或者 Kotlin/JS&lt;/li>
&lt;li>选择SDK&lt;/li>
&lt;li>选择Library&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>创建包&lt;/li>
&lt;li>创建&lt;code>.kt&lt;/code>文件&lt;/li>
&lt;/ul>
&lt;p>在创建的&lt;code>.kt&lt;/code>文件中写入以下代码，运行。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">fun&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Array&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">&amp;gt;){&lt;/span>
&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello Kotlin!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用spring-boot--mybatis-创建web项目">使用Spring Boot + MyBatis 创建Web项目&lt;/h2>
&lt;ul>
&lt;li>Create Project -&amp;gt; Spring Initializr
&lt;ol>
&lt;li>选择Initializr Service URL (&lt;a href="https://start.spring.io">https://start.spring.io&lt;/a>)&lt;/li>
&lt;li>Language 选择 Kotlin&lt;/li>
&lt;li>选择插件&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Core -&amp;gt; DevTools&lt;/li>
&lt;li>Web -&amp;gt; web&lt;/li>
&lt;li>Template Engines -&amp;gt; Thymeleaf&lt;/li>
&lt;li>SQL -&amp;gt; MySQL, MyBatis&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>完成&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;h3 id="配置文件">配置文件&lt;/h3>
&lt;p>使用&lt;code>application.properties&lt;/code>文件或者&lt;code>application.yml&lt;/code>文件皆可&lt;br>
这里我们使用&lt;code>application.yml&lt;/code>文件，注意空格&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">spring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">datasource&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">jdbc:mysql://localhost:3306/tieba?useSSL=false&amp;amp;serverTimezone=GMT&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">usr&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pwd&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">driver-class-name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">com.mysql.jdbc.Driver&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="编写实体类">编写实体类&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">class&lt;/span> &lt;span class="nc">User&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">uid&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">?&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">null&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">account&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">?&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">null&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">?&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">null&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">?&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">null&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">adminlv&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Int&lt;/span>&lt;span class="p">?&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">null&lt;/span>
&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">equals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">other&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Any&lt;/span>&lt;span class="p">?):&lt;/span> &lt;span class="n">Boolean&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">true&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">javaClass&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">javaClass&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">false&lt;/span>
&lt;span class="n">other&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">User&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">uid&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uid&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">false&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">false&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">username&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">false&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">false&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">adminlv&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">adminlv&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="k">false&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">true&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">hashCode&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">Int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">var&lt;/span> &lt;span class="py">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">uid&lt;/span> &lt;span class="o">?:&lt;/span> &lt;span class="m">0&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">31&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">hashCode&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">?:&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">31&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">hashCode&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">?:&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">31&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">hashCode&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">?:&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">31&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">adminlv&lt;/span> &lt;span class="o">?:&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">toString&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;User{&amp;#34;&lt;/span> &lt;span class="p">+&lt;/span>
&lt;span class="s2">&amp;#34;UID=&lt;/span>&lt;span class="si">$uid&lt;/span>&lt;span class="s2">, &amp;#34;&lt;/span> &lt;span class="p">+&lt;/span>
&lt;span class="s2">&amp;#34;Account=&amp;#39;&lt;/span>&lt;span class="si">$account&lt;/span>&lt;span class="s2">&amp;#39;, &amp;#34;&lt;/span> &lt;span class="p">+&lt;/span>
&lt;span class="s2">&amp;#34;Username=&amp;#39;&lt;/span>&lt;span class="si">$username&lt;/span>&lt;span class="s2">&amp;#39;, &amp;#34;&lt;/span> &lt;span class="p">+&lt;/span>
&lt;span class="s2">&amp;#34;Password=&amp;#39;&lt;/span>&lt;span class="si">$password&lt;/span>&lt;span class="s2">&amp;#39;, &amp;#34;&lt;/span> &lt;span class="p">+&lt;/span>
&lt;span class="s2">&amp;#34;Adminlv=&lt;/span>&lt;span class="si">$adminlv&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">+&lt;/span>
&lt;span class="s2">&amp;#34;}&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="查询接口">查询接口&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="nd">@Mapper&lt;/span>
&lt;span class="k">interface&lt;/span> &lt;span class="nc">UserMapper&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nd">@Select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;select * from user where UID = #{uid}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">findUserByID&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nd">@Param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">phone&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">User&lt;/span>
&lt;span class="nd">@Select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;select * from user&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">findAllUser&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nd">@Insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;insert into user values(null,#{aot},#{usr},#{pwd},1)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">addUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nd">@Param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;aot&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nd">@Param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;usr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nd">@Param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;pwd&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Int&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="业务层">业务层&lt;/h3>
&lt;p>&lt;strong>接口&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="k">interface&lt;/span> &lt;span class="nc">UserService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">findAllUser&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">addUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">&amp;gt;):&lt;/span> &lt;span class="n">Int&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>实现&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="nd">@Service&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;UserService&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">UserServiceImpl&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">UserService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nd">@Resource&lt;/span>
&lt;span class="k">private&lt;/span> &lt;span class="k">lateinit&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="py">userDao&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">UserDao&lt;/span>
&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">findAllUser&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">userDao&lt;/span>&lt;span class="o">!!&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">findAllUser&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nd">@Transactional&lt;/span>
&lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">addUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">userDao&lt;/span>&lt;span class="o">!!&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">addUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="控制器">控制器&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="nd">@Controller&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">HomePage&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nd">@Resource&lt;/span>
&lt;span class="k">private&lt;/span> &lt;span class="k">lateinit&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="py">us&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">UserService&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">fun&lt;/span> &lt;span class="nf">home&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Model&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">addAttribute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;res&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">us&lt;/span>&lt;span class="o">?.&lt;/span>&lt;span class="n">findAllUser&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;index.html&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>lateinit&lt;/code>表示延迟初始化&lt;/strong>&lt;/p>
&lt;h3 id="网页模板">网页模板&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span> &lt;span class="na">xmlns:th&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.thymeleaf.org&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Title&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">table&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>UID&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>账号&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>昵称&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>密码MD5&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>权限等级&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span> &lt;span class="na">th:each&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;it:${res}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span> &lt;span class="na">th:text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${it.uid}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span> &lt;span class="na">th:text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${it.account}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span> &lt;span class="na">th:text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${it.username}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span> &lt;span class="na">th:text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${it.password}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span> &lt;span class="na">th:text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${it.adminlv}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">table&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[笔记]SpringBoot学习05</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A005/</link><pubDate>Fri, 19 Oct 2018 08:52:40 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A005/</guid><description>&lt;h1 id="使用junit进行单元测试">使用JUnit进行单元测试&lt;/h1>
&lt;h2 id="生成测试类">生成测试类&lt;/h2>
&lt;p>在需要进行测试的类中 点击右键-&amp;gt;Go To-&amp;gt;Test 或者 使用快捷键&lt;code>Ctrl+Shift+T&lt;/code>生成测试类&lt;/p>
&lt;p>生成的类&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">CustomDaoTest&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Resource&lt;/span> &lt;span class="kd">private&lt;/span> &lt;span class="n">CustomDao&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">findCustomByName&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">findCustomByID&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;p>添加测试&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@SpringBootTest&lt;/span>
&lt;span class="nd">@RunWith&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SpringRunner&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">CustomDaoTest&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Resource&lt;/span> &lt;span class="kd">private&lt;/span> &lt;span class="n">CustomDao&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">findCustomByName&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Custom&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findCustomByName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Ilirus&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">assertEquals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(),&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">findCustomByID&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Custom&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findCustomByID&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">assertEquals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(),&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[笔记]SpringBoot学习04</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A004/</link><pubDate>Tue, 16 Oct 2018 09:10:46 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A004/</guid><description>&lt;h1 id="spring打包和自定义日志">Spring打包和自定义日志&lt;/h1>
&lt;h2 id="spring打包">Spring打包&lt;/h2>
&lt;h3 id="jar包">jar包&lt;/h3>
&lt;p>View-&amp;gt;Tool Windows-&amp;gt;Maven Project&lt;br>
展开Lifecycle&lt;br>
右键package&lt;br>
Run Maven Build&lt;br>
在&lt;code>target&lt;/code>文件夹中找到打包出来的&lt;code>.jar&lt;/code>文件&lt;br>
使用&lt;code>java -jar &amp;lt;jarName&amp;gt;&lt;/code> 命令启动&lt;/p>
&lt;!-- more -->
&lt;h3 id="war包">war包&lt;/h3>
&lt;p>修改pom.xml
&lt;code>&amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;&lt;/code> 改为 &lt;code>&amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;&lt;/code>&lt;/p>
&lt;p>&lt;code>SpringBootApplication&lt;/code>类 改为&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ClassName&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">SpringBootServletInitializer&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="n">SpringApplicationBuilder&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SpringApplicationBuilder&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sources&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ClassName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ClassName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>再按照打包jar的方式打包&lt;/p>
&lt;h2 id="日志">日志&lt;/h2>
&lt;p>定义log变量&lt;br>
&lt;code>import org.apache.commons.logging.Log&lt;/code>&lt;br>
&lt;code>private Log log = LogFactory.getLog(className.class);&lt;/code>&lt;br>
输出log&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">debug&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;输出debug信息&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;输出信息&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">warn&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;输出警告&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;输出错误&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">fatal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;输出致命错误&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[笔记]SpringBoot学习03</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A003/</link><pubDate>Fri, 28 Sep 2018 10:23:40 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A003/</guid><description>&lt;h1 id="thymeleaf网页模板">Thymeleaf网页模板&lt;/h1>
&lt;h2 id="使用">使用&lt;/h2>
&lt;p>控制器方法中添加&lt;code>Model&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">//import org.springframework.ui.Model;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">DefPage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Model&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Ilirus&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;def&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>HTML中引入命名空间之后使用&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">xmlns:th&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.thymeleaf.org&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Title&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#&amp;#34;&lt;/span> &lt;span class="na">th:text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${name}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>被替换的文本&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;h2 id="语法">语法&lt;/h2>
&lt;ul>
&lt;li>替换文本
&lt;code>&amp;lt;div th:text=&amp;quot;'替换: '+${name}&amp;quot;&amp;gt;被替换的文本&amp;lt;/div&amp;gt;&lt;/code>&lt;/li>
&lt;li>替换href
&lt;code>&amp;lt;a th:href=&amp;quot;@{'localhost:8080/'+${url}}&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code>&lt;/li>
&lt;li>循环遍历&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">th:each&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;li:${list}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">th:href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;@{&amp;#39;localhost:8080/&amp;#39;+${li.url}}&amp;#34;&lt;/span> &lt;span class="na">th:text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;${li.text}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>引入模板
&lt;ul>
&lt;li>定义模板
&lt;code>&amp;lt;th:block th:fragment=&amp;quot;domblock&amp;quot;&amp;gt;Dom Element here&amp;lt;/th:block&amp;gt;&lt;/code>
&lt;code>&amp;lt;div th:fragment=&amp;quot;nav&amp;quot;&amp;gt;Dom Element here&amp;lt;/div&amp;gt;&lt;/code>&lt;/li>
&lt;li>引入模板
&lt;code>&amp;lt;th:block th:insert=&amp;quot;path/file::domblock&amp;quot;&amp;gt;&amp;lt;/th:block&amp;gt;&lt;/code>
&lt;code>&amp;lt;div th:insert=&amp;quot;path/file::nav&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code>
&lt;ul>
&lt;li>th:insert&lt;/li>
&lt;li>th:replace&lt;/li>
&lt;li>th:include&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="使用webjar引入bootsrtap">使用webjar引入bootsrtap&lt;/h2>
&lt;p>在&lt;code>http://mvnrepository.com/&lt;/code>网站中找到Bootstrap
复制Maven配置代码到pom.xml的&lt;code>&amp;lt;dependencies&amp;gt;&lt;/code>里&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="c">&amp;lt;!-- https://mvnrepository.com/artifact/org.webjars/bootstrap --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.webjars&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>bootstrap&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.3.7&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>完成后编译器会导入Maven依赖&lt;/p></description></item><item><title>[笔记]SpringBoot学习02</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A002/</link><pubDate>Thu, 20 Sep 2018 11:34:24 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A002/</guid><description>&lt;h1 id="使用jpa来链接数据库">使用JPA来链接数据库&lt;/h1>
&lt;p>环境配置:&lt;br>
JDK: Java 8&lt;br>
IDE: Intellij IDEA&lt;br>
服务器: Tomcat 9&lt;/p>
&lt;h2 id="创建jpa项目">创建JPA项目&lt;/h2>
&lt;ul>
&lt;li>Create Project -&amp;gt; Spring Initializr
&lt;ol>
&lt;li>选择JDK&lt;/li>
&lt;li>选择Initializr Service URL (&lt;a href="https://start.spring.io">https://start.spring.io&lt;/a>)&lt;/li>
&lt;li>选择插件&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Core -&amp;gt; DevTools&lt;/li>
&lt;li>Web -&amp;gt; web&lt;/li>
&lt;li>Template Engines -&amp;gt; Thymeleaf&lt;/li>
&lt;li>SQL -&amp;gt; JPA, MySQL&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>完成&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="配置jpa项目">配置JPA项目&lt;/h2>
&lt;h3 id="配置applicationproperties文件">配置application.properties文件&lt;/h3>
&lt;p>application.properties 中配置数据库链接&lt;/p>
&lt;pre>&lt;code class="language-properties" data-lang="properties">spring.jpa.database=mysql
spring.datasource.url=jdbc:mysql://localhost:3306/java1604
spring.datasource.username=java1604
spring.datasource.password=java1604
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
&lt;/code>&lt;/pre>&lt;!-- more -->
&lt;h3 id="添加数据库链接">添加数据库链接&lt;/h3>
&lt;p>View -&amp;gt; Tool Windows -&amp;gt; Database -&amp;gt; 添加Data Source&lt;/p>
&lt;h3 id="添加hibernate配置文件">添加Hibernate配置文件&lt;/h3>
&lt;ul>
&lt;li>File -&amp;gt; Project Structure -&amp;gt; Modules&lt;/li>
&lt;li>添加Hibernate框架&lt;/li>
&lt;li>添加hibernate.cfg.xml配置文件&lt;/li>
&lt;/ul>
&lt;h3 id="生成model类">生成Model类&lt;/h3>
&lt;ul>
&lt;li>View -&amp;gt; Tool Windows -&amp;gt; Persistence&lt;/li>
&lt;li>hibernate.cfg.xml -&amp;gt; Generate -&amp;gt; By Database Schema&lt;/li>
&lt;/ul>
&lt;h3 id="创建dao查询接口">创建dao查询接口&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">ModelDao&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">CrudRepository&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Model&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">Type&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//Do something or do nothing.
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建controller">创建Controller&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Controller&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HomeController&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>使用&lt;code>@Autowired&lt;/code>装配查询接口&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Controller&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HomeController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span> &lt;span class="kd">private&lt;/span> &lt;span class="n">ModelDao&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/count&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">Query&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">valueOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">count&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>访问&lt;code>localhost:8080/count&lt;/code>来查看结果&lt;/strong>&lt;/p>
&lt;h2 id="数据库操作">数据库操作&lt;/h2>
&lt;h3 id="数据库的查询">数据库的查询&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/QueryAll&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Iterable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Custom&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">Query&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findAll&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="数据库的添加">数据库的添加&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/Add&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="nf">Add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">fn&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">ln&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">map&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Custom&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Custom&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setFirstName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fn&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setLastName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ln&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">save&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">map&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;msg&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;保存成功&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">map&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;msg&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;保存失败&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">map&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="自定义查询语句">自定义查询语句&lt;/h3>
&lt;p>创建接口&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Repository&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">CustomDaoC&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">JpaRepository&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Custom&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//Do something or do nothing.
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>实现方法&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Repository&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">CustomDaoC&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">JpaRepository&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Custom&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//查询
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;select * from Custom &amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">nativeQuery&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Custom&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">QueryCustomAll&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">//模糊查询
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;select * from Custom where name like concat(&amp;#39;%&amp;#39;,?1,&amp;#39;%&amp;#39;)&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">nativeQuery&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Custom&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">QueryLike&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">//修改
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Modifying&lt;/span>
&lt;span class="nd">@Query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;update custom set lastName=&amp;#39;?1&amp;#39; where sid=?2&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">nativeQuery&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">UpdateCustom&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;a href="https://stackoverflow.com/questions/21456494/spring-jpa-query-with-like">https://stackoverflow.com/questions/21456494/spring-jpa-query-with-like&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>SSL配置&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://blog.csdn.net/anla_/article/details/80295982">https://blog.csdn.net/anla_/article/details/80295982&lt;/a>
&lt;a href="https://blog.csdn.net/qq_38380025/article/details/80267312">https://blog.csdn.net/qq_38380025/article/details/80267312&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>[笔记]SpringBoot学习01</title><link>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A001/</link><pubDate>Tue, 11 Sep 2018 10:08:00 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E7%AC%94%E8%AE%B0springboot%E5%AD%A6%E4%B9%A001/</guid><description>&lt;h1 id="spring学习笔记">Spring学习笔记&lt;/h1>
&lt;p>环境配置:&lt;br>
JDK: Java 8&lt;br>
IDE: Intellij IDEA&lt;br>
服务器: Tomcat 9&lt;/p>
&lt;h2 id="在idea中创建spring项目">在IDEA中创建Spring项目&lt;/h2>
&lt;ul>
&lt;li>Create Project -&amp;gt; Spring Initializr
&lt;ol>
&lt;li>选择JDK&lt;/li>
&lt;li>选择Initializr Service URL (&lt;a href="https://start.spring.io">https://start.spring.io&lt;/a>)&lt;/li>
&lt;li>选择插件&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Core -&amp;gt; DevTools&lt;/li>
&lt;li>Web -&amp;gt; web&lt;/li>
&lt;li>Template Engines -&amp;gt; Thymeleaf&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>完成&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="创建controller来控制地址映射">创建Controller来控制地址映射&lt;/h2>
&lt;ol>
&lt;li>创建容纳Controller的包和类&lt;/li>
&lt;li>添加注解&lt;code>@Controller&lt;/code>&lt;/li>
&lt;li>添加路径映射&lt;code>@RequestMapping&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="nd">@Controller&lt;/span>
&lt;span class="c1">//此路径将作为此类里面所有方法的根目录
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HomePage&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;ol start="4">
&lt;li>添加方法&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="nd">@Controller&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HomePage&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//此路径作为此方法的映射路径
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/page&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">Page1&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="c1">//此处return的字符串即为templates文件夹下的html文件名
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;p1&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>创建模板
在resources/templates/文件夹下创建html文件, 文件名与方法中return的值相同&lt;/li>
&lt;li>启动服务器&lt;/li>
&lt;li>在浏览器地址栏输入&lt;code>localhost:8080/home/page&lt;/code>来访问页面&lt;/li>
&lt;/ol>
&lt;h2 id="使用responsebody来进行内容输出">使用ResponseBody来进行内容输出&lt;/h2>
&lt;ol>
&lt;li>添加方法&lt;/li>
&lt;li>添加&lt;code>@RequestMapping&lt;/code>和&lt;code>@ResponseBody&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="nd">@Controller&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HomePage&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;/res&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">ResponseBody&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;ReturnResponseBodyText&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>启动服务器&lt;/li>
&lt;li>在浏览器地址栏输入&lt;code>localhost:8080/home/res&lt;/code>来访问页面&lt;/li>
&lt;/ol></description></item><item><title>初识SCSS</title><link>https://chaosalphard.github.io/p/%E5%88%9D%E8%AF%86scss/</link><pubDate>Sun, 26 Aug 2018 20:25:51 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E5%88%9D%E8%AF%86scss/</guid><description>&lt;h1 id="初识scss">初识SCSS&lt;/h1>
&lt;h2 id="sassscss-的区别">Sass/SCSS 的区别&lt;/h2>
&lt;p>SCSS是Sass3 引入的新语法，其语法完全兼容CSS3，并且继承了Sass的功能。&lt;/p>
&lt;p>Sass和SCSS的区别主要有以下两点:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>文件拓展名不同
Sass文件以 .sass 后缀为拓展名，SCSS文件以 .scss 后缀为拓展名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>语法不同
Sass以缩进式语法规则来书写，不带&lt;code>{}&lt;/code>和&lt;code>;&lt;/code>，而SCSS的语法书写则与CSS相似。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;p>Sass语法:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sass" data-lang="sass">&lt;span class="nt">body&lt;/span>
&lt;span class="err"> &lt;/span>&lt;span class="na">margin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="err"> &lt;/span>&lt;span class="na">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>
&lt;span class="nt">div&lt;/span>
&lt;span class="err"> &lt;/span>&lt;span class="na">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>
&lt;span class="err"> &lt;/span>&lt;span class="na">heigit&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>
&lt;span class="err"> &lt;/span>&lt;span class="na">border&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="err"> &lt;/span>&lt;span class="na">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>
&lt;span class="err"> &lt;/span>&lt;span class="na">style&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="no">solid&lt;/span>
&lt;span class="err"> &lt;/span>&lt;span class="na">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>注意冒号后面一定要有空格&lt;/strong>&lt;/p>
&lt;p>SCSS语法:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nt">body&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nt">margin&lt;/span>&lt;span class="nd">:0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span>&lt;span class="nn">#3694FA&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">div&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:240px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:240px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border&lt;/span>&lt;span class="nd">:&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">1px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">style&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">solid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">color&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nn">#3694FA&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最终输出CSS文件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">body&lt;/span> &lt;span class="nt">div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-style&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">solid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="scss的安装">SCSS的安装&lt;/h2>
&lt;h3 id="安装ruby">安装Ruby&lt;/h3>
&lt;p>Sass基于Ruby语言开发而成，因此需要先安装&lt;a class="link" href="https://rubyinstaller.org/downloads/" target="_blank" rel="noopener"
>Ruby&lt;/a>。&lt;br>
或者使用node安装node-sass。&lt;/p>
&lt;p>&lt;strong>注意需要将Ruby添加到环境变量中&lt;/strong>&lt;/p>
&lt;p>安装完成后输入以下指令来测试是否安装成功&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ruby -v
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="更换ruby源">更换Ruby源&lt;/h3>
&lt;p>因为国内网络原因导致gem无法正常访问，需要更换为国内源&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">#删除原来的gem源&lt;/span>
gem sources --remove https://rubygems.org/
&lt;span class="c1">#或者使用下面的指令移除所有的gem源&lt;/span>
gem sources --clear-all
&lt;span class="c1">#替换为国内的gem源(2018.8.26), 注意检查源是否失效&lt;/span>
gem sources --add https://gems.ruby-china.com/
&lt;span class="c1">#查看是否替换成功&lt;/span>
gem sources --list
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装sass和compass">安装Sass和Compass&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">#安装Sass&lt;/span>
gem install sass
&lt;span class="c1">#安装Compass&lt;/span>
gem install compass
&lt;/code>&lt;/pre>&lt;/div>&lt;p>测试是否安装成功&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sass -v
compass -v
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编译sassscss">编译Sass/SCSS&lt;/h2>
&lt;h3 id="命令行编译">命令行编译&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">#编译Sass文件&lt;/span>
sass input.sass output.css
&lt;span class="c1">#编译SCSS文件&lt;/span>
sass input.scss output.css
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="监听文件变换自动编译文件">监听文件变换，自动编译文件&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">#监听单个文件&lt;/span>
sass --watch input-file:output-file
&lt;span class="c1">#监听文件夹&lt;/span>
sass --watch input-dir:output-dir
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="常用编译选项">常用编译选项&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">#编译格式&lt;/span>
sass --watch scss:css --style &amp;lt;nested&lt;span class="p">|&lt;/span>expanded&lt;span class="p">|&lt;/span>compact&lt;span class="p">|&lt;/span>compressed&amp;gt;
&lt;span class="c1">#添加调试map&lt;/span>
sass --watch scss:css --sourcemap&lt;span class="o">=&lt;/span>&amp;lt;auto&lt;span class="p">|&lt;/span>file&lt;span class="p">|&lt;/span>inline&lt;span class="p">|&lt;/span>none&amp;gt;
&lt;span class="c1">#开启debug信息&lt;/span>
sass --watch scss:css --debug-info
&lt;span class="c1">#使用CSS-superset SCSS 语法&lt;/span>
sass --watch scss:css --scss
&lt;span class="c1">#不使用编译缓存&lt;/span>
sass --watch scss:css --no-cache
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>编译格式&lt;/strong>&lt;/p>
&lt;p>Sass文件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nt">body&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nt">margin&lt;/span>&lt;span class="nd">:0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span>&lt;span class="nn">#3694FA&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">div&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:240px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:240px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border&lt;/span>&lt;span class="nd">:&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">1px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">style&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">solid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">color&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nn">#3694FA&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>nested编译格式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nt">body&lt;/span> &lt;span class="nt">div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-style&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">solid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>expanded编译格式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">body&lt;/span> &lt;span class="nt">div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-style&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">solid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>compact编译格式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nt">body&lt;/span> &lt;span class="nt">div&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">border-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">border-style&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">solid&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">border-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>compressed编译格式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="nt">body&lt;/span> &lt;span class="nt">div&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">240&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">border-width&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">border-style&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">solid&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">border-color&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mh">#3694FA&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>MySQL数据库备份与恢复</title><link>https://chaosalphard.github.io/p/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</link><pubDate>Sat, 11 Aug 2018 21:18:01 +0000</pubDate><guid>https://chaosalphard.github.io/p/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</guid><description>&lt;h1 id="使用mysqldumpsource指令备份恢复数据库">使用mysqldump/source指令备份/恢复数据库&lt;/h1>
&lt;h2 id="备份数据">备份数据&lt;/h2>
&lt;p>用法:&lt;/p>
&lt;pre>&lt;code>mysqldump -u [用户名] -p [options] &amp;gt; [输出文件名]
&lt;/code>&lt;/pre>&lt;p>示例&lt;/p>
&lt;pre>&lt;code>mysqldump -u root -p &amp;gt; D:\SQLBak\Data.sql
&lt;/code>&lt;/pre>&lt;h3 id="mysqldump常用选项">mysqldump常用选项&lt;/h3>
&lt;ul>
&lt;li>&lt;span style="font-size:24px">&amp;ndash;databases&lt;/span>
指定需要备份的数据库名称&lt;br>
用法:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>mysqldump -u [用户名] -p --databases [dbName] &amp;gt; [输出文件名]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;span style="font-size:24px">&amp;ndash;all-databases&lt;/span>
备份所有的数据库&lt;br>
用法:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>mysqldump -u [用户名] -p --all-databases &amp;gt; [输出文件名]
&lt;/code>&lt;/pre>&lt;!-- more -->
&lt;ul>
&lt;li>
&lt;p>&lt;span style="font-size:24px">&amp;ndash;tab[=dir_name]&lt;/span>
　　不使用此选项，mysqldump仅输出一个sql文件。&lt;br>
　　使用此选项，mysqldump会对每一个要备份的表输出两个文件，sql文件保存创建表时的sql语句，txt文件储存表中的数据。&lt;br>
　　dirname即为sql和txt文件输出的路径。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;span style="font-size:24px">&amp;ndash;add-drop-table&lt;/span>
　　此选项会在每一个表前面加上drop table if exists 语句。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;span style="font-size:24px">&amp;ndash;add-locks&lt;/span>
　　此选项会在insert语句前面加上lock table 语句。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;span style="font-size:24px">&amp;ndash;skip-comments&lt;/span>
　　此选项会去掉输出文件中的注释&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="恢复数据">恢复数据&lt;/h2>
&lt;p>用法&lt;/p>
&lt;pre>&lt;code>mysql -u [用户名] -p &amp;lt; [备份文件]
&lt;/code>&lt;/pre>&lt;p>示例&lt;/p>
&lt;pre>&lt;code>mysql -u root -p &amp;lt; D:\SQLBak\Data.sql
&lt;/code>&lt;/pre>&lt;p>已登录mysql的情况下&lt;/p>
&lt;pre>&lt;code>mysql&amp;gt; source [备份文件]
&lt;/code>&lt;/pre>&lt;p>示例&lt;/p>
&lt;pre>&lt;code>mysql&amp;gt; source D:\SQLBak\Data.sql
&lt;/code>&lt;/pre>&lt;h3 id="还原--tab选项备份的文本格式的备份文件">还原&amp;ndash;tab选项备份的文本格式的备份文件&lt;/h3>
&lt;pre>&lt;code>mysql -u [用户名] -p &amp;lt; [sql备份文件] #还原表结构
mysqlimport -u [用户名] -p [数据库名] [txt备份文件] #还原表数据
&lt;/code>&lt;/pre>&lt;p>已登录mysql的情况下&lt;/p>
&lt;pre>&lt;code>source [sql备份文件];
use [数据库名];
mysql&amp;gt; load data infile `[txt备份文件]` into [表名];
&lt;/code>&lt;/pre>&lt;h2 id="导出查询结果到本地文件">导出查询结果到本地文件&lt;/h2>
&lt;p>用法&lt;/p>
&lt;pre>&lt;code>mysql -u [用户名] -p --execute=&amp;quot;[sql语句]&amp;quot; [options] [数据库名] &amp;gt; [输出文件]
&lt;/code>&lt;/pre>&lt;p>示例&lt;/p>
&lt;pre>&lt;code>mysql -u root -p --execute=&amp;quot;select * from testtab;&amp;quot; testdb &amp;gt; D:\SQLBak\result.txt
&lt;/code>&lt;/pre>&lt;h3 id="常用选项">常用选项&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;span style="font-size:24px">&amp;ndash;vertical&lt;/span>
使用&amp;ndash;vertical选项可将每条记录分为多行显示。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;span style="font-size:24px">&amp;ndash;html&lt;/span>
使用&amp;ndash;html选项可将结果导出为html格式。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;span style="font-size:24px">&amp;ndash;xml&lt;/span>
使用&amp;ndash;xml选项可将结果导出为xml格式。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>配置Firefox浏览器书签打开方式</title><link>https://chaosalphard.github.io/p/%E9%85%8D%E7%BD%AEfirefox%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%A6%E7%AD%BE%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/</link><pubDate>Fri, 03 Aug 2018 16:28:24 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E9%85%8D%E7%BD%AEfirefox%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%A6%E7%AD%BE%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/</guid><description>&lt;h1 id="配置firefox浏览器书签打开方式">配置Firefox浏览器书签打开方式&lt;/h1>
&lt;p>在Firefox浏览器中，书签和地址栏链接的打开方式默认是覆盖当前标签页的，那么，怎样让Firefox浏览器默认在新标签页打开书签和地址栏链接呢？&lt;br>
其实很简单。&lt;/p>
&lt;!-- more -->
&lt;p>首先，在浏览器地址栏输入&lt;/p>
&lt;pre>&lt;code>about:config
&lt;/code>&lt;/pre>&lt;p>然后搜索&amp;quot;intab&amp;quot;&lt;br>
将以下两个选项的值&lt;/p>
&lt;pre>&lt;code># 在新标签页打开书签
browser.tabs.loadBookmarksInTabs
# 在新标签页打开url 地址
browser.urlbar.openintab
&lt;/code>&lt;/pre>&lt;p>由false改为true即可&lt;/p>
&lt;p>适用版本61.0+&lt;/p></description></item><item><title>通过禁用内存修整来提高虚拟机性能</title><link>https://chaosalphard.github.io/p/%E9%80%9A%E8%BF%87%E7%A6%81%E7%94%A8%E5%86%85%E5%AD%98%E4%BF%AE%E6%95%B4%E6%9D%A5%E6%8F%90%E9%AB%98%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%80%A7%E8%83%BD/</link><pubDate>Thu, 05 Jul 2018 21:14:34 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E9%80%9A%E8%BF%87%E7%A6%81%E7%94%A8%E5%86%85%E5%AD%98%E4%BF%AE%E6%95%B4%E6%9D%A5%E6%8F%90%E9%AB%98%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%80%A7%E8%83%BD/</guid><description>&lt;h1 id="通过禁用内存修整来提高虚拟机性能">通过禁用内存修整来提高虚拟机性能&lt;/h1>
&lt;h2 id="vmem">vmem&lt;/h2>
&lt;p>　　VMware在运行每个虚拟机的时候会在硬盘上为相应的虚拟机生成一个内存实时镜像 .vmem 文件用于存储虚拟机内存的改变，这个文件主要是将虚拟机内存的内容映射到磁盘，以支持在虚拟机的暂停等功能。&lt;br>
　　同时，VMware会在使用的时候统计内存中的数据的使用情况，然后将不常用的一些内存数据存入 .vmem 文件从而节省内存的使用。&lt;br>
　　但是内存交换带来的大量读写操作会导致性能下降。&lt;/p>
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;p>关闭虚拟机&lt;/p>
&lt;p>点击 虚拟机-&amp;gt;设置-&amp;gt;选项-&amp;gt;高级-&amp;gt;勾选“禁用内存页面修整”选项。&lt;/p>
&lt;p>找到*.vmx虚拟机定义文件&lt;/p>
&lt;p>在最后一行加入&lt;/p>
&lt;pre>&lt;code>mainMem.useNamedFile = &amp;quot;FALSE&amp;quot;
&lt;/code>&lt;/pre>&lt;p>完成&lt;/p>
&lt;p>需要注意的是，在添加这段代码后虚拟机的暂停、快速启动等操作会受到影响&lt;/p></description></item><item><title>CSS实现下拉框效果</title><link>https://chaosalphard.github.io/p/css%E5%AE%9E%E7%8E%B0%E4%B8%8B%E6%8B%89%E6%A1%86%E6%95%88%E6%9E%9C/</link><pubDate>Tue, 12 Jun 2018 21:20:50 +0000</pubDate><guid>https://chaosalphard.github.io/p/css%E5%AE%9E%E7%8E%B0%E4%B8%8B%E6%8B%89%E6%A1%86%E6%95%88%E6%9E%9C/</guid><description>&lt;h1 id="效果展示">效果展示&lt;/h1>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7E1N6.gif" alt="" />&lt;/p>
&lt;h1 id="效果实现">效果实现&lt;/h1>
&lt;h2 id="方法一">方法一&lt;/h2>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;p>首先把导航栏效果做出来&lt;/p>
&lt;!-- more -->
&lt;p>HTML&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;nav&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Title1&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Title2&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Title3&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>CSS&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">nav&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1200&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">72&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#DDD&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">top&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#EEE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-family&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;微软雅黑&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">36&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">align-items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>再给下拉框设置样式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">list&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#EEE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">list&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-family&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;微软雅黑&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-decoration&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在效果应该是这样的&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7EG9O.png" alt="" />&lt;/p>
&lt;h3 id="控制下拉框的显示与隐藏">控制下拉框的显示与隐藏&lt;/h3>
&lt;p>隐藏下拉框&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">list&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">opacity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scaleY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>显示下拉框&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">top&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">list&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">opacity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scaleY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加动画效果">添加动画效果&lt;/h3>
&lt;p>下拉效果&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">list&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">opacity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scaleY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">transform-origin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">top&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transition&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">opacity&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="kc">ease&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">transform&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">top&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">list&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">opacity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scaleY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7EJ3D.gif" alt="" />&lt;/p>
&lt;p>淡出淡入效果&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">list&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">opacity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scaleY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">transform-origin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">top&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transition&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">opacity&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="kc">ease&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">transform&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">top&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">list&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">opacity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scaleY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">transition&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">opacity&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="kc">ease&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">transform&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7EtjH.gif" alt="" />&lt;/p>
&lt;h2 id="方法二">方法二&lt;/h2>
&lt;h3 id="准备工作-1">准备工作&lt;/h3>
&lt;p>HTML&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;nav&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;title t1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Title1&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;title t2&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Title2&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;top&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;title t3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Title3&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>xxxxxx&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>CSS&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">nav&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">72&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin-top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#DDD&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">top&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#EEE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-family&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;微软雅黑&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-decoration&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#EEE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">first&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">72&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">line-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">72&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">36&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">not&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">first&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">52&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">line-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">52&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7EG9O.png" alt="" />&lt;/p>
&lt;h3 id="无动画效果的显示与隐藏">无动画效果的显示与隐藏&lt;/h3>
&lt;p>隐藏下拉框&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">72&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>显示下拉框&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">visible&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="有动画效果的显示与隐藏">有动画效果的显示与隐藏&lt;/h3>
&lt;p>隐藏下拉框&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">72&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transition&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">height&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="kc">ease&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>显示下拉框&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c">/* 52px为下拉框项的高度, 72px为下拉框Title项的高度 */&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">52&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">72&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c">/* n为下拉框项的数量 */&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">t1&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nv">--n&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">t2&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nv">--n&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">t3&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nv">--n&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>效果&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7EYge.gif" alt="" />&lt;/p></description></item><item><title>CSS实现毛玻璃模糊效果</title><link>https://chaosalphard.github.io/p/css%E5%AE%9E%E7%8E%B0%E6%AF%9B%E7%8E%BB%E7%92%83%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C/</link><pubDate>Mon, 28 May 2018 02:10:10 +0000</pubDate><guid>https://chaosalphard.github.io/p/css%E5%AE%9E%E7%8E%B0%E6%AF%9B%E7%8E%BB%E7%92%83%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C/</guid><description>&lt;h1 id="效果展示">效果展示&lt;/h1>
&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7AoXd.png" alt="" />&lt;/p>
&lt;h1 id="效果实现">效果实现&lt;/h1>
&lt;p>一个div，将文字放进去&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;box&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Welcome to Ilirus&amp;#39; blog&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>美化样式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nv">--bg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">url&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;image.jpg&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">bg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kc">fixed&lt;/span> &lt;span class="kc">top&lt;/span> &lt;span class="kc">center&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="kc">cover&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">box&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">hsla&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">0.2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">aliceblue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">38&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">align-items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.6&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">box-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="nb">hsla&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">0.4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">text-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mh">#FFF&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- more -->
&lt;p>大致效果应该是这样的&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7A7nA.png" alt="" />&lt;/p>
&lt;p>&lt;strong>使用伪元素实现模糊效果&lt;/strong>&lt;/p>
&lt;p>为div创建一个伪元素&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">box&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置定位和宽高&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">box&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inherit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inherit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加背景颜色，以便观察调试&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">box&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">hsla&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">83&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">0.4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在效果应该是这样&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7Ab7t.png" alt="" />&lt;/p>
&lt;p>添加模糊效果和border-radius&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">box&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.6&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">filter&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">blur&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7ALAP.png" alt="" />&lt;/p>
&lt;p>伪元素把文本挡住了，给它设置z-index&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">box&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7AH0I.png" alt="" />&lt;/p>
&lt;p>现在将背景换成图片就可以了&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">box&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">bg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kc">fixed&lt;/span> &lt;span class="kc">top&lt;/span> &lt;span class="kc">center&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="kc">cover&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7AoXd.png" alt="" />&lt;/p>
&lt;p>CSS代码&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nv">--bg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">url&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;image.jpg&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">bg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kc">fixed&lt;/span> &lt;span class="kc">top&lt;/span> &lt;span class="kc">center&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="kc">cover&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">box&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">hsla&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">aliceblue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">38&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">align-items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.6&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">box-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="nb">hsla&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">text-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mh">#FFF&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">box&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.6&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inherit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inherit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nf">var&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">bg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kc">fixed&lt;/span> &lt;span class="kc">top&lt;/span> &lt;span class="kc">center&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="kc">cover&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">filter&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">blur&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>去除a标签之间的间隔</title><link>https://chaosalphard.github.io/p/%E5%8E%BB%E9%99%A4a%E6%A0%87%E7%AD%BE%E4%B9%8B%E9%97%B4%E7%9A%84%E9%97%B4%E9%9A%94/</link><pubDate>Thu, 24 May 2018 12:28:42 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E5%8E%BB%E9%99%A4a%E6%A0%87%E7%AD%BE%E4%B9%8B%E9%97%B4%E7%9A%84%E9%97%B4%E9%9A%94/</guid><description>&lt;h1 id="为什么a标签之间会有间隔">为什么a标签之间会有间隔&lt;/h1>
&lt;p>在网页的编写过程中经常会发现相邻的a标签之间有间隔&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>1&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>2&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>3&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>下一页&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7A3lQ.jpg" alt="" />&lt;/p>
&lt;!-- more -->
&lt;p>这其实是网页元素之间的留空导致的，那么最简单的解决方式就是a标签之间不留空格&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>1&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>2&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>3&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>下一页&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是考虑到代码的可读性，这样写肯定是不行的，所以我们可以用注释来解决&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>1&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="c">&amp;lt;!--
&lt;/span>&lt;span class="c"> --&amp;gt;&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>2&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="c">&amp;lt;!--
&lt;/span>&lt;span class="c"> --&amp;gt;&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>3&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="c">&amp;lt;!--
&lt;/span>&lt;span class="c"> --&amp;gt;&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>下一页&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>但这样也不是长久之策，如果a标签数量较多的话就会很麻烦，所以还是得需要CSS来实现&lt;/p>
&lt;p>&lt;strong>使CSS来消除a标签之间的间隔&lt;/strong>&lt;/p>
&lt;h2 id="方法一">方法一&lt;/h2>
&lt;p>&lt;strong>给a标签的父级元素设置font-size属性&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">36&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7A1Sg.jpg" alt="" />&lt;/p>
&lt;p>缺点：子文本元素&lt;strong>一定要设置font-size&lt;/strong>，否则会继承父元素的font-size: 0px 导致不显示。&lt;/p>
&lt;p>下面这张图是我没有给a标签设置font-size参数的情况，&lt;br>
可以看到，由于我没有给a标签设置font-size数值，a标签继承了父级标签的font-size 大小导致字体小到看不见。&lt;br>
但是一般情况下通常都会为文本元素设置font-size的大小，所以这个缺点影响不大。&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7Ac01.jpg" alt="" />&lt;/p>
&lt;h2 id="方法二">方法二&lt;/h2>
&lt;p>&lt;strong>给a标签的父级元素设置letter-spacing属性&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c">/*一般来说-4px即可，但这个数值可以被加大*/&lt;/span>
&lt;span class="c">/*数值越大，子元素没有设置letter-spacing时错位效果越严重*/&lt;/span>
&lt;span class="k">letter-spacing&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">-4&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">letter-spacing&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7A1Sg.jpg" alt="" />&lt;/p>
&lt;p>缺点：子文本元素&lt;strong>一定要设置letter-spacing: 0&lt;/strong>，否则会继承父元素的letter-spacing 导致文字错位。&lt;/p>
&lt;p>下面这张图是我没有给a标签设置letter-spacing参数的情况，可以看到，在父级标签letter-spacing参数设为-4px时，即使a标签文本错位，在一定程度上也不影响阅读，所以我比较喜欢用这种写法。&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7AQfS.jpg" alt="" />&lt;/p>
&lt;h2 id="方法三">方法三&lt;/h2>
&lt;p>&lt;strong>父元素使用flex布局&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">div&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c">/*justify-content可接受的值有[flex-start|center|flex-end]*/&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="kc">start&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">align-items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.ax1x.com/2019/06/16/V7A1Sg.jpg" alt="" />&lt;/p>
&lt;p>子元素并不需要特别设置属性，但是会改变布局结构，视情况使用。&lt;/p></description></item><item><title>使用VHD创建本地虚拟系统</title><link>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8vhd%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E8%99%9A%E6%8B%9F%E7%B3%BB%E7%BB%9F/</link><pubDate>Sun, 20 May 2018 10:30:12 +0000</pubDate><guid>https://chaosalphard.github.io/p/%E4%BD%BF%E7%94%A8vhd%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E8%99%9A%E6%8B%9F%E7%B3%BB%E7%BB%9F/</guid><description>&lt;h1 id="vhdvhdx简介">VHD/VHDX简介&lt;/h1>
&lt;h2 id="什么是vhd">什么是VHD&lt;/h2>
&lt;p>VHD 是Microsoft Virtual Hard Disk format（微软虚拟磁盘文件）的简称。可以由Windows Vista/7/8/10，Windows Server 2008R2 等系统创建。&lt;br>
一个VHD文件可以被虚拟为一块硬盘，并且可以像操作一块硬盘一样操作VHD文件，例如：读取、写入、创建分区、格式化等等。&lt;/p>
&lt;h2 id="什么是vhdx">什么是VHDX&lt;/h2>
&lt;p>随着虚拟环境的企业工作负荷的增加以及性能要求的提高，虚拟硬盘 (VHD) 格式需要适应这些变化。因此，Windows Server 2012 中的 Hyper-V 引入了一个新版本的VHD格式，称为VHDX。&lt;br>
与旧的VHD格式相比，VHDX具有更大的存储容量。它优化了动态磁盘和差异磁盘的结构对齐方式，以防止在新的大型扇区物理磁盘上性能降级。同时还能在电源故障期间提供数据损坏保护。&lt;/p>
&lt;p>VHDX格式的主要新功能如下：&lt;/p>
&lt;ul>
&lt;li>支持的虚拟硬盘的存储容量高达 64 TB。&lt;/li>
&lt;li>通过记录对VHDX元数据结构的更新，可以在电源发生故障时保护数据不会被损坏。&lt;/li>
&lt;li>改进了虚拟硬盘格式的对齐方式，可在大型扇区磁盘上更好地工作。&lt;/li>
&lt;/ul>
&lt;p>VHDX 格式还提供以下功能：&lt;/p>
&lt;ul>
&lt;li>动态磁盘和差异磁盘有较大的数据块大小，可让这些磁盘满足工作负荷的需求。&lt;/li>
&lt;li>拥有4KB的逻辑扇区，可以在为4KB扇区设计的应用程序和作负荷使用该磁盘时提供较高的性能。&lt;/li>
&lt;li>能够存储有关用户可能想记录的文件的自定义元数据，如操作系统版本或应用的修补程序。&lt;/li>
&lt;li>高效地表示数据（也称为“剪裁”），使文件大小更小并且允许基础物理存储设备回收未使用的空间。（剪裁需要直接连接到虚拟机或 SCSI 磁盘的物理磁盘以及与剪裁兼容的硬件。)&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;h2 id="vhdvhdx的优点">VHD/VHDX的优点&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>维护简单&lt;/p>
&lt;ul>
&lt;li>操作VHD就和操作物理硬盘一样，我们可以对其进行分区、格式化、压缩、删除等等操作，并且这些操作并不会影响你的物理分区。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>加载自如&lt;/p>
&lt;ul>
&lt;li>VHD磁盘可以进行分离操作，这样在磁盘管理中就无法找到VHD磁盘分区。如果想要再次挂载，只需对VHD磁盘文件进行挂载操作即可。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>轻松备份&lt;/p>
&lt;ul>
&lt;li>备份时仅需要将 .vhd/.vhdx 文件进行备份，文件中所包含的所有信息(包括分区表等信息)就被备份下来了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>迁移方便&lt;/p>
&lt;ul>
&lt;li>只需要将 .vhd/.vhdx 文件复制到目标计算机上，再进行附加操作即可完成迁移。也可以通过服务器进行分发。也可以在物理机和虚拟机之间进行迁移。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="vhd系统的特点">VHD系统的特点&lt;/h1>
&lt;h2 id="安装简便">安装简便&lt;/h2>
&lt;p>VHD系统安装非常简单，到了Windows10系统更是如此，甚至可以从别的电脑上拷一个Windows10的VHD来启动，类似于即插即用。&lt;/p>
&lt;h2 id="性能强劲">性能强劲&lt;/h2>
&lt;p>VHD系统如同真实的系统一样，可以直接使用计算机的物理硬件，性能与真实系统相差无几，这与虚拟机有明显的差别。虚拟机使用虚拟出来的硬件，VHD系统直接使用物理硬件。&lt;/p>
&lt;h2 id="备份方便">备份方便&lt;/h2>
&lt;p>直接将 .vhd/.vhdx 文件复制一份，就完成了备份工作。&lt;br>
此外，VHD还提供了更为方便的备份技术——“差分磁盘”。使用差分磁盘，即可实现系统的“秒备份”，“秒还原”。&lt;/p>
&lt;h2 id="删除方便">删除方便&lt;/h2>
&lt;p>当你不想使用VHD系统时，只需要将对应的 .vhd/.vhdx 文件删除，再将对应的引导条目删除即可。&lt;/p>
&lt;h1 id="如何部署vhd系统">如何部署VHD系统&lt;/h1>
&lt;p>如果你从网络上或者你朋友那里获得了部署有Windows10系统的vhd/vhdx文件，只需将其拷入你的计算机，然后添加引导项即可完成VHD系统的部署。&lt;/p>
&lt;p>如果没有也没关系，下面将会介绍如何从零开始部署VHD系统&lt;/p>
&lt;h2 id="创建vhdvhdx文件">创建VHD/VHDX文件&lt;/h2>
&lt;p>&lt;strong>以下命令均在Windows10环境下进行，Windows7可能略有不同&lt;/strong>&lt;/p>
&lt;p>使用Windows磁盘管理创建&lt;/p>
&lt;p>创建vhdx文件&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7kaxH.jpg" alt="" />&lt;/p>
&lt;p>设置大小&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7kwMd.jpg" alt="" />&lt;/p>
&lt;p>初始化磁盘，GPT还是MBR看个人情况，推荐选GPT格式&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7k0sA.jpg" alt="" />&lt;/p>
&lt;p>新建分区&lt;br>
&lt;img src="https://s2.ax1x.com/2019/06/16/V7kBqI.jpg" alt="" />&lt;/p>
&lt;p>完成&lt;/p>
&lt;p>使用命令行创建&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">#启动diskpart工具&lt;/span>
diskpart
&lt;span class="c1">#创建一个大小为25600MB的固定大小的vhdx文件&lt;/span>
&lt;span class="c1">#如果想创建动态拓展大小的vhdx文件，换成type=expandable即可&lt;/span>
create vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\v&lt;/span>hd.vhdx &lt;span class="nv">maximum&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">25600&lt;/span> &lt;span class="nv">type&lt;/span>&lt;span class="o">=&lt;/span>fixed
&lt;span class="c1">#选中刚才创建的vhdx文件&lt;/span>
&lt;span class="k">select&lt;/span> vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\v&lt;/span>hd.vhdx
&lt;span class="c1">#挂载硬盘&lt;/span>
attach vdisk
&lt;span class="c1">#创建主分区&lt;/span>
create partition primary
&lt;span class="c1">#设置卷标&lt;/span>
assign &lt;span class="nv">letter&lt;/span>&lt;span class="o">=&lt;/span>V
&lt;span class="c1">#格式化分区&lt;/span>
format quick &lt;span class="nv">label&lt;/span>&lt;span class="o">=&lt;/span>vhdx
&lt;span class="nb">exit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>完成&lt;/p>
&lt;h2 id="部署windows系统到vhd虚拟磁盘">部署Windows系统到VHD虚拟磁盘&lt;/h2>
&lt;p>&lt;strong>首先将vhdx文件挂载到系统上，如果已挂载则可跳过这一步&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">diskpart
&lt;span class="k">select&lt;/span> vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\v&lt;/span>hd.vhdx
attach vdisk
&lt;span class="nb">exit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>将系统部署到vhdx文件中&lt;/strong>&lt;/p>
&lt;p>下载.iso镜像文件或者.wim映像文件。&lt;br>
如果是.iso镜像文件则将其解压或者挂载到虚拟光驱。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">#获得镜像信息&lt;/span>
Dism /Get-ImageInfo /imagefile:D:&lt;span class="se">\W&lt;/span>indows10&lt;span class="se">\s&lt;/span>ources&lt;span class="se">\i&lt;/span>nstall.wim
&lt;span class="c1">#部署镜像到vhdx中&lt;/span>
Dism /apply-image /imagefile:D:&lt;span class="se">\W&lt;/span>indows10&lt;span class="se">\s&lt;/span>ources&lt;span class="se">\i&lt;/span>nstall.wim /index:1 /ApplyDir:V:&lt;span class="se">\
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等待部署完成&lt;/p>
&lt;p>参数解释：&lt;br>
imagefile: install.wim文件所在的位置&lt;br>
index: 系统版本所对应的索引路径&lt;br>
ApplyDir: 要部署镜像的驱动器盘符&lt;/p>
&lt;h2 id="添加引导项">添加引导项&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">#将V盘的系统添加到引导项，V即为你vhd虚拟磁盘的盘符&lt;/span>
bcdboot V:&lt;span class="se">\W&lt;/span>indows /l zh-CN /d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你是在PE下进行的，则需要为ESP分区分配盘符&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">bcdboot V:&lt;span class="se">\W&lt;/span>indows /s Z: /f uefi /l zh-cn /d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数解释：&lt;br>
/l: 语言&lt;br>
/s: 要将引导文件复制到的磁盘的盘符，通常是ESP分区所在位置&lt;br>
/f: 引导方式&lt;br>
/d: 保留现在的默认启动条目&lt;/p>
&lt;p>使用bcdedit指令来查看引导项，或者用msconfig来查看引导项。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="se">\&amp;gt;&lt;/span>bcdedit
Windows 启动管理器
--------------------
标识符 &lt;span class="o">{&lt;/span>bootmgr&lt;span class="o">}&lt;/span>
device &lt;span class="nv">partition&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="se">\D&lt;/span>evice&lt;span class="se">\H&lt;/span>arddiskVolume1
path &lt;span class="se">\E&lt;/span>FI&lt;span class="se">\M&lt;/span>icrosoft&lt;span class="se">\B&lt;/span>oot&lt;span class="se">\b&lt;/span>ootmgfw.efi
description Windows Boot Manager
locale zh-CN
inherit &lt;span class="o">{&lt;/span>globalsettings&lt;span class="o">}&lt;/span>
default &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span>
resumeobject &lt;span class="o">{&lt;/span>3fa12b79-202e-11e8-8e30-ddc8fe2935d0&lt;span class="o">}&lt;/span>
displayorder &lt;span class="o">{&lt;/span>default&lt;span class="o">}&lt;/span>
&lt;span class="o">{&lt;/span>current&lt;span class="o">}&lt;/span>
toolsdisplayorder &lt;span class="o">{&lt;/span>memdiag&lt;span class="o">}&lt;/span>
timeout &lt;span class="m">5&lt;/span>
Windows 启动加载器
-------------------
标识符 &lt;span class="o">{&lt;/span>current&lt;span class="o">}&lt;/span>
device &lt;span class="nv">partition&lt;/span>&lt;span class="o">=&lt;/span>C:
path &lt;span class="se">\W&lt;/span>indows&lt;span class="se">\s&lt;/span>ystem32&lt;span class="se">\w&lt;/span>inload.efi
description SSD Win10
locale zh-CN
inherit &lt;span class="o">{&lt;/span>bootloadersettings&lt;span class="o">}&lt;/span>
recoverysequence &lt;span class="o">{&lt;/span>3fa12b6f-202e-11e8-8e30-ddc8fe2935d0&lt;span class="o">}&lt;/span>
recoveryenabled Yes
isolatedcontext Yes
allowedinmemorysettings 0x15000075
osdevice &lt;span class="nv">partition&lt;/span>&lt;span class="o">=&lt;/span>C:
systemroot &lt;span class="se">\W&lt;/span>indows
resumeobject &lt;span class="o">{&lt;/span>3fa12b79-202e-11e8-8e30-ddc8fe2935d0&lt;span class="o">}&lt;/span>
nx OptIn
bootmenupolicy Standard
Windows 启动加载器
-------------------
标识符 &lt;span class="o">{&lt;/span>3fa12b75-202e-11e8-8e30-ddc8fe2935d0&lt;span class="o">}&lt;/span>
device &lt;span class="nv">partition&lt;/span>&lt;span class="o">=&lt;/span>E:
path &lt;span class="se">\W&lt;/span>indows&lt;span class="se">\s&lt;/span>ystem32&lt;span class="se">\w&lt;/span>inload.efi
description Virtual Win10
locale zh-CN
inherit &lt;span class="o">{&lt;/span>bootloadersettings&lt;span class="o">}&lt;/span>
isolatedcontext Yes
allowedinmemorysettings 0x15000075
osdevice &lt;span class="nv">partition&lt;/span>&lt;span class="o">=&lt;/span>E:
systemroot &lt;span class="se">\W&lt;/span>indows
resumeobject &lt;span class="o">{&lt;/span>3fa12b75-202e-11e8-8e30-ddc8fe2935d0&lt;span class="o">}&lt;/span>
nx OptIn
bootmenupolicy Standard
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>bcdedit /set&lt;/code>指令来为启动项命名&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">#bcdedit /set {标识符} description &amp;#34;要更改的启动项名称&amp;#34;&lt;/span>
bcdedit /set &lt;span class="o">{&lt;/span>3fa12b75-202e-11e8-8e30-ddc8fe2935d0&lt;span class="o">}&lt;/span> description &lt;span class="s2">&amp;#34;VW10&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>取消挂载，重启电脑，引导进入VHD系统即可&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">diskpart
&lt;span class="k">select&lt;/span> vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\v&lt;/span>hd.vhdx
detach vdisk
&lt;span class="nb">exit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="使用差分磁盘进行备份和还原">使用差分磁盘进行备份和还原&lt;/h1>
&lt;h2 id="差分磁盘如何实现秒备份秒还原">差分磁盘如何实现“秒备份”，“秒还原”&lt;/h2>
&lt;p>差分磁盘是指基于父盘的子盘，子盘能读取父盘的所有数据，同时对子盘的所有改动不会影响到父盘。&lt;br>
因此，一旦建立了子盘，就相当于为父盘建立了一个还原点，由于子盘自身不带数据，所以创建非常快，大小非常小(4MB左右)，子盘的大小会随着子盘的使用逐渐增大。&lt;br>
同时，如果想要还原，只需要再次为父盘创建一个子盘即可，原来的子盘同样可以使用或删除。&lt;/p>
&lt;p>基于此，使用差分磁盘可以使用最少的空间，创建多个系统，供不同的人使用。并且备份和还原对硬盘的损伤也降到了最低。&lt;/p>
&lt;p>&lt;strong>创建差分磁盘&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">diskpart
create vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\V&lt;/span>Disk&lt;span class="se">\c&lt;/span>hild01.vhdx &lt;span class="nv">parent&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\V&lt;/span>Disk&lt;span class="se">\v&lt;/span>hd.vhdx
&lt;span class="nb">exit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数解释：&lt;br>
file: 创建的子盘的位置和名称&lt;br>
parent: 父盘的位置&lt;/p>
&lt;p>&lt;strong>将子盘添加到启动项&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">diskpart
&lt;span class="k">select&lt;/span> vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\V&lt;/span>Disk&lt;span class="se">\c&lt;/span>hild01.vhdx
attach vdisk
&lt;span class="nb">exit&lt;/span>
bcdboot V:&lt;span class="se">\W&lt;/span>indows /l zh-CN /d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>子盘的启动项名称同样可以通过&lt;code>bcdedit /set&lt;/code>指令更改。&lt;/p>
&lt;p>由于子盘是基于父盘的数据创建的，创建完毕的子盘和父盘的数据是一模一样的，但是父盘内的数据就无法修改，否则会导致子盘数据错误，无法打开。&lt;br>
因此，将父盘的vhdx文件设为“只读”属性，同时在Win+R的运行框中输入msconfig，进入启动项管理，将父盘的启动项删除。&lt;/p>
&lt;p>以后进行还原操作时，只需要将原本的子盘删除，创建一个新子盘，再将其添加到启动项即可。你也可以将指令写为bat批处理，双击执行。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">del E:&lt;span class="se">\V&lt;/span>Disk&lt;span class="se">\c&lt;/span>hild01.vhdx
diskpart
create vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\V&lt;/span>Disk&lt;span class="se">\c&lt;/span>hild01.vhdx &lt;span class="nv">parent&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\V&lt;/span>Disk&lt;span class="se">\v&lt;/span>hd.vhdx
&lt;span class="k">select&lt;/span> vdisk &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>E:&lt;span class="se">\V&lt;/span>Disk&lt;span class="se">\c&lt;/span>hild01.vhdx
attach vdisk
&lt;span class="nb">exit&lt;/span>
bcdboot V:&lt;span class="se">\W&lt;/span>indows /l zh-CN /d
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>